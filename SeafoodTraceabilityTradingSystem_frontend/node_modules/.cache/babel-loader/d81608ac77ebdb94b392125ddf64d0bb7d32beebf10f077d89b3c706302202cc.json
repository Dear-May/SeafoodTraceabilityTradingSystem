{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelText as _vModelText, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"my-haichao-page\"\n};\nconst _hoisted_2 = {\n  class: \"live-stream-container\"\n};\nconst _hoisted_3 = {\n  class: \"header bg-light d-flex align-items-center p-3 shadow-sm row\"\n};\nconst _hoisted_4 = {\n  class: \"col-8\"\n};\nconst _hoisted_5 = [\"src\"];\nconst _hoisted_6 = {\n  class: \"ms-3\"\n};\nconst _hoisted_7 = {\n  class: \"mb-0\"\n};\nconst _hoisted_8 = {\n  class: \"text-muted mb-0\"\n};\nconst _hoisted_9 = {\n  class: \"content-container d-flex\"\n};\nconst _hoisted_10 = {\n  class: \"video-section flex-grow-1\"\n};\nconst _hoisted_11 = {\n  id: \"video2\",\n  ref: \"video2\",\n  autoplay: \"\",\n  style: {\n    \"width\": \"100%\",\n    \"height\": \"100%\",\n    \"object-fit\": \"cover\"\n  }\n};\nconst _hoisted_12 = {\n  class: \"side-panel bg-light p-3\"\n};\nconst _hoisted_13 = {\n  class: \"online-users mb-4\"\n};\nconst _hoisted_14 = {\n  class: \"text-danger\"\n};\nconst _hoisted_15 = {\n  class: \"list-unstyled\"\n};\nconst _hoisted_16 = [\"src\"];\nconst _hoisted_17 = {\n  class: \"chat-section\"\n};\nconst _hoisted_18 = {\n  class: \"chat-messages border rounded p-2 mb-3\"\n};\nconst _hoisted_19 = [\"src\"];\nconst _hoisted_20 = {\n  class: \"mb-1\"\n};\nconst _hoisted_21 = {\n  class: \"text-muted mb-0\"\n};\nconst _hoisted_22 = {\n  class: \"input-group\"\n};\nexport function render(_ctx, _cache) {\n  const _component_HeaderComponent = _resolveComponent(\"HeaderComponent\");\n  const _component_FooterComponent = _resolveComponent(\"FooterComponent\");\n  const _component_RightWidgetComponent = _resolveComponent(\"RightWidgetComponent\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_HeaderComponent), _createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" 头部信息 \"), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"img\", {\n    class: \"user-avatar rounded-circle\",\n    src: _ctx.userAvatar,\n    alt: \"头像\"\n  }, null, 8 /* PROPS */, _hoisted_5), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"h5\", _hoisted_7, _toDisplayString(_ctx.userName), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_8, _toDisplayString(_ctx.userRole), 1 /* TEXT */)])])]), _createCommentVNode(\" 主体内容 \"), _createElementVNode(\"div\", _hoisted_9, [_createCommentVNode(\" 视频播放区 \"), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"video\", _hoisted_11, null, 512 /* NEED_PATCH */)]), _createCommentVNode(\" 在线用户和聊天区域 \"), _createElementVNode(\"div\", _hoisted_12, [_createCommentVNode(\" 在线用户列表 \"), _createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"h6\", _hoisted_14, \"在线人员 (\" + _toDisplayString(_ctx.onlineUsers.length) + \")\", 1 /* TEXT */), _createElementVNode(\"ul\", _hoisted_15, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.onlineUsers, (user, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index,\n      class: \"d-flex align-items-center mb-2\"\n    }, [_createElementVNode(\"img\", {\n      class: \"user-avatar-sm rounded-circle me-2\",\n      src: user.avatar,\n      alt: \"用户头像\"\n    }, null, 8 /* PROPS */, _hoisted_16), _createElementVNode(\"span\", null, _toDisplayString(user.name), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createCommentVNode(\" 聊天区 \"), _createElementVNode(\"div\", _hoisted_17, [_cache[2] || (_cache[2] = _createElementVNode(\"h6\", {\n    class: \"text-primary\"\n  }, \"聊天区\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_18, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.chatMessages, (message, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"d-flex align-items-start mb-2\"\n    }, [_createElementVNode(\"img\", {\n      class: \"user-avatar-sm rounded-circle me-2\",\n      src: message.avatar,\n      alt: \"用户头像\"\n    }, null, 8 /* PROPS */, _hoisted_19), _createElementVNode(\"div\", null, [_createElementVNode(\"p\", _hoisted_20, [_createElementVNode(\"strong\", null, _toDisplayString(message.sender), 1 /* TEXT */)]), _createElementVNode(\"p\", _hoisted_21, _toDisplayString(message.content), 1 /* TEXT */)])]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createCommentVNode(\" 聊天输入框 \"), _createElementVNode(\"div\", _hoisted_22, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.chatInput = $event),\n    class: \"form-control\",\n    placeholder: \"输入50字以内聊天内容~\",\n    maxlength: \"50\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.chatInput]]), _createElementVNode(\"button\", {\n    class: \"btn btn-danger\",\n    onClick: _cache[1] || (_cache[1] = (...args) => _ctx.sendMessage && _ctx.sendMessage(...args))\n  }, \"发送\")])])])])])]), _createVNode(_component_FooterComponent), _createVNode(_component_RightWidgetComponent)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","id","ref","autoplay","style","_createElementBlock","_Fragment","_createElementVNode","_hoisted_1","_createVNode","_component_HeaderComponent","_hoisted_2","_createCommentVNode","_hoisted_3","_hoisted_4","src","_ctx","userAvatar","alt","_hoisted_5","_hoisted_6","_hoisted_7","_toDisplayString","userName","_hoisted_8","userRole","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","onlineUsers","length","_hoisted_15","_renderList","user","index","key","avatar","_hoisted_16","name","_hoisted_17","_hoisted_18","chatMessages","message","_hoisted_19","_hoisted_20","sender","_hoisted_21","content","_hoisted_22","type","_cache","$event","chatInput","placeholder","maxlength","onClick","args","sendMessage","_component_FooterComponent","_component_RightWidgetComponent"],"sources":["D:\\Cache\\Java\\shopping\\shoppping_c_frontend\\src\\views\\LiveView.vue"],"sourcesContent":["<template>\r\n  <div class=\"my-haichao-page\">\r\n    <HeaderComponent/>\r\n    <div class=\"live-stream-container\">\r\n      <!-- 头部信息 -->\r\n      <div class=\"header bg-light d-flex align-items-center p-3 shadow-sm row\">\r\n        <div class=\"col-8\">\r\n          <img class=\"user-avatar rounded-circle\" :src=\"userAvatar\" alt=\"头像\"/>\r\n          <div class=\"ms-3\">\r\n            <h5 class=\"mb-0\">{{ userName }}</h5>\r\n            <p class=\"text-muted mb-0\">{{ userRole }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 主体内容 -->\r\n      <div class=\"content-container d-flex\">\r\n        <!-- 视频播放区 -->\r\n        <div class=\"video-section flex-grow-1\">\r\n          <video id=\"video2\" ref=\"video2\" autoplay\r\n                 style=\"width: 100%; height: 100%; object-fit: cover;\"></video>\r\n        </div>\r\n\r\n        <!-- 在线用户和聊天区域 -->\r\n        <div class=\"side-panel bg-light p-3\">\r\n          <!-- 在线用户列表 -->\r\n          <div class=\"online-users mb-4\">\r\n            <h6 class=\"text-danger\">在线人员 ({{ onlineUsers.length }})</h6>\r\n            <ul class=\"list-unstyled\">\r\n              <li\r\n                  v-for=\"(user, index) in onlineUsers\"\r\n                  :key=\"index\"\r\n                  class=\"d-flex align-items-center mb-2\"\r\n              >\r\n                <img\r\n                    class=\"user-avatar-sm rounded-circle me-2\"\r\n                    :src=\"user.avatar\"\r\n                    alt=\"用户头像\"\r\n                />\r\n                <span>{{ user.name }}</span>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n\r\n          <!-- 聊天区 -->\r\n          <div class=\"chat-section\">\r\n            <h6 class=\"text-primary\">聊天区</h6>\r\n            <div class=\"chat-messages border rounded p-2 mb-3\">\r\n              <div\r\n                  v-for=\"(message, index) in chatMessages\"\r\n                  :key=\"index\"\r\n                  class=\"d-flex align-items-start mb-2\"\r\n              >\r\n                <img\r\n                    class=\"user-avatar-sm rounded-circle me-2\"\r\n                    :src=\"message.avatar\"\r\n                    alt=\"用户头像\"\r\n                />\r\n                <div>\r\n                  <p class=\"mb-1\"><strong>{{ message.sender }}</strong></p>\r\n                  <p class=\"text-muted mb-0\">{{ message.content }}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- 聊天输入框 -->\r\n            <div class=\"input-group\">\r\n              <input\r\n                  type=\"text\"\r\n                  v-model=\"chatInput\"\r\n                  class=\"form-control\"\r\n                  placeholder=\"输入50字以内聊天内容~\"\r\n                  maxlength=\"50\"\r\n              />\r\n              <button class=\"btn btn-danger\" @click=\"sendMessage\">发送</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <FooterComponent/>\r\n  <RightWidgetComponent></RightWidgetComponent>\r\n</template>\r\n\r\n<script setup>\r\nimport HeaderComponent from \"@/components/HeaderComponent.vue\";\r\nimport RightWidgetComponent from \"@/components/RightWidgetComponent.vue\";\r\nimport FooterComponent from \"@/components/FooterComponent.vue\";\r\nimport useUser from \"@/composables/useUser\";\r\nimport {onMounted, ref} from \"vue\";\r\nimport router from \"@/router\";\r\nimport {ElMessage} from \"element-plus\";\r\nimport axios from \"axios\";\r\n\r\nconst {UserInfoForm, initUserSession} = useUser()\r\n\r\nconst LiveId = ref();\r\n\r\nfunction getLiveId() {\r\n  const urlParams = new URLSearchParams(window.location.search);\r\n  const liveId = urlParams.get(\"id\");\r\n  if (liveId) {\r\n    LiveId.value = liveId;\r\n  } else {\r\n    ElMessage.error(\"直播间不存在\")\r\n    router.push({name: \"index\"});\r\n  }\r\n}\r\n\r\nasync function play() {\r\n  const httpURL = \"http://localhost:1985/rtc/v1/play/\";\r\n  const webRTCURL = `webRTC://localhost/live/${LiveId.value}`;\r\n  console.log(httpURL, webRTCURL);\r\n  const localPc = new RTCPeerConnection();\r\n  const stream = new MediaStream();\r\n  const videoElement2 = document.querySelector(\"#video2\");\r\n\r\n  localPc.ontrack = (event) => {\r\n    stream.addTrack(event.track);\r\n    console.log(event.track);\r\n    videoElement2.srcObject = stream;\r\n  };\r\n\r\n  localPc.addTransceiver(\"audio\", {direction: \"recvonly\"});\r\n  localPc.addTransceiver(\"video\", {direction: \"recvonly\"});\r\n\r\n  const offer = await localPc.createOffer();\r\n  await localPc.setLocalDescription(offer);\r\n  const data = {\r\n    \"api\": httpURL,\r\n    \"streamurl\": webRTCURL,\r\n    \"sdp\": offer.sdp\r\n  };\r\n\r\n  httpApi(httpURL, data).then(async (data) => {\r\n    console.log(\"answer\", data);\r\n    await localPc.setRemoteDescription(new RTCSessionDescription({type: 'answer', sdp: data.sdp}));\r\n  }).catch((data) => {\r\n    if (data.code === 400) {\r\n      console.log(\"SDP交换失败\");\r\n    }\r\n  });\r\n}\r\n\r\nfunction httpApi(httpURL, data) {\r\n  return new Promise((resolve, reject) => {\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.open('POST', httpURL, true);\r\n    xhr.setRequestHeader('Content-type', 'application/json');\r\n    xhr.send(JSON.stringify(data));\r\n    xhr.onload = () => {\r\n      if (xhr.readyState !== xhr.DONE) reject(xhr);\r\n      if (xhr.status !== 200 && xhr.status !== 201) reject(xhr);\r\n      const responseData = JSON.parse(xhr.responseText);\r\n      if (responseData.code === 0) {\r\n        resolve(responseData);\r\n      } else {\r\n        reject(responseData);\r\n      }\r\n    };\r\n  });\r\n}\r\n\r\nlet socket;\r\nconst initWebSocket = () => {\r\n  const shopId = LiveId.value;\r\n  socket = new WebSocket(`ws://localhost:8888/channel/live/${shopId}`);\r\n\r\n  socket.onopen = () => {\r\n    console.log(\"WebSocket 连接已建立\");\r\n  };\r\n\r\n  socket.onmessage = (event) => {\r\n    const message = JSON.parse(event.data);\r\n    handleNotification(message);\r\n  };\r\n\r\n  socket.onclose = () => {\r\n    console.log(\"WebSocket 连接已关闭\");\r\n  };\r\n\r\n  socket.onerror = (error) => {\r\n    console.error(\"WebSocket 连接出错:\", error);\r\n  };\r\n};\r\n\r\n// 处理通知\r\nconst handleNotification = async (message) => {\r\n  if (message.message === \"updateUser\")\r\n    await initOnlineUsers();\r\n  else if (message.message === \"updateMessage\")\r\n    await initChatMessages();\r\n};\r\n\r\nconst onlineUsers = ref([]);\r\n\r\nasync function initOnlineUsers() {\r\n  try {\r\n    const response = await axios.post('/api/live/getOnlineUserList', {\r\n      roomId: LiveId.value,\r\n    }, {\r\n      headers: {\r\n        'Content-Type': 'application/json;charset=UTF-8'\r\n      },\r\n      withCredentials: true,\r\n    });\r\n    onlineUsers.value = response.data;\r\n  } catch (err) {\r\n    ElMessage.error(\"获取在线用户列表失败，请稍后再试\");\r\n  }\r\n}\r\n\r\nconst chatMessages = ref([]);\r\n\r\nasync function initChatMessages() {\r\n  try {\r\n    const response = await axios.post('/api/live/getLiveMessageList', {\r\n      roomId: LiveId.value,\r\n    }, {\r\n      headers: {\r\n        'Content-Type': 'application/json;charset=UTF-8'\r\n      },\r\n      withCredentials: true,\r\n    });\r\n    chatMessages.value = response.data;\r\n  } catch (error) {\r\n    ElMessage.error(\"获取聊天记录失败，请稍后再试\");\r\n  }\r\n}\r\n\r\nasync function insertOnlineUser() {\r\n  try {\r\n    const response = await axios.post('/api/live/insertOnlineUser', {\r\n      roomId: LiveId.value,\r\n      userId: UserInfoForm.value.id,\r\n    })\r\n  }\r\n}\r\n\r\nasync function init() {\r\n  await initOnlineUsers();\r\n  await initChatMessages();\r\n}\r\n\r\nonMounted(async () => {\r\n  initUserSession()\r\n  getLiveId()\r\n  if (LiveId.value !== undefined) {\r\n    await play()\r\n    initWebSocket()\r\n    await init()\r\n  }\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.live-stream-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 80vh;\r\n  margin-top: 80px;\r\n}\r\n\r\n/* 头部信息样式 */\r\n.header {\r\n  display: flex;\r\n  align-items: center;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\n.user-avatar {\r\n  width: 50px;\r\n  height: 50px;\r\n}\r\n\r\n/* 主体内容布局 */\r\n.content-container {\r\n  flex: 1;\r\n  display: flex;\r\n  overflow: hidden;\r\n}\r\n\r\n/* 视频区域 */\r\n.video-section {\r\n  flex-grow: 1;\r\n  background: #000;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.video-player {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n/* 在线用户和聊天区域 */\r\n.side-panel {\r\n  width: 300px;\r\n  border-left: 1px solid #ddd;\r\n  overflow-y: auto;\r\n}\r\n\r\n.online-users img.user-avatar-sm {\r\n  width: 30px;\r\n  height: 30px;\r\n}\r\n\r\n.chat-section .chat-messages {\r\n  max-height: 300px;\r\n  overflow-y: auto;\r\n}\r\n\r\n.chat-section .input-group {\r\n  display: flex;\r\n}\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAiB;;EAErBA,KAAK,EAAC;AAAuB;;EAE3BA,KAAK,EAAC;AAA6D;;EACjEA,KAAK,EAAC;AAAO;mBAN1B;;EAQeA,KAAK,EAAC;AAAM;;EACXA,KAAK,EAAC;AAAM;;EACbA,KAAK,EAAC;AAAiB;;EAM3BA,KAAK,EAAC;AAA0B;;EAE9BA,KAAK,EAAC;AAA2B;;EAC7BC,EAAE,EAAC,QAAQ;EAACC,GAAG,EAAC,QAAQ;EAACC,QAAQ,EAAR,EAAQ;EACjCC,KAAqD,EAArD;IAAA;IAAA;IAAA;EAAA;;;EAIJJ,KAAK,EAAC;AAAyB;;EAE7BA,KAAK,EAAC;AAAmB;;EACxBA,KAAK,EAAC;AAAa;;EACnBA,KAAK,EAAC;AAAe;oBA5BrC;;EA6CeA,KAAK,EAAC;AAAc;;EAElBA,KAAK,EAAC;AAAuC;oBA/C9D;;EA2DqBA,KAAK,EAAC;AAAM;;EACZA,KAAK,EAAC;AAAiB;;EAM3BA,KAAK,EAAC;AAAa;;;;;uBAlEpCK,mBAAA,CAAAC,SAAA,SACEC,mBAAA,CA+EM,OA/ENC,UA+EM,GA9EJC,YAAA,CAAkBC,0BAAA,GAClBH,mBAAA,CA4EM,OA5ENI,UA4EM,GA3EJC,mBAAA,UAAa,EACbL,mBAAA,CAQM,OARNM,UAQM,GAPJN,mBAAA,CAMM,OANNO,UAMM,GALJP,mBAAA,CAAoE;IAA/DP,KAAK,EAAC,4BAA4B;IAAEe,GAAG,EAAEC,IAAA,CAAAC,UAAU;IAAEC,GAAG,EAAC;0BAPxEC,UAAA,GAQUZ,mBAAA,CAGM,OAHNa,UAGM,GAFJb,mBAAA,CAAoC,MAApCc,UAAoC,EAAAC,gBAAA,CAAhBN,IAAA,CAAAO,QAAQ,kBAC5BhB,mBAAA,CAA6C,KAA7CiB,UAA6C,EAAAF,gBAAA,CAAfN,IAAA,CAAAS,QAAQ,iB,OAK5Cb,mBAAA,UAAa,EACbL,mBAAA,CA8DM,OA9DNmB,UA8DM,GA7DJd,mBAAA,WAAc,EACdL,mBAAA,CAGM,OAHNoB,WAGM,GAFJpB,mBAAA,CACqE,SADrEqB,WACqE,8B,GAGvEhB,mBAAA,eAAkB,EAClBL,mBAAA,CAqDM,OArDNsB,WAqDM,GApDJjB,mBAAA,YAAe,EACfL,mBAAA,CAgBM,OAhBNuB,WAgBM,GAfJvB,mBAAA,CAA4D,MAA5DwB,WAA4D,EAApC,QAAM,GAAAT,gBAAA,CAAGN,IAAA,CAAAgB,WAAW,CAACC,MAAM,IAAG,GAAC,iBACvD1B,mBAAA,CAaK,MAbL2B,WAaK,I,kBAZH7B,mBAAA,CAWKC,SAAA,QAxCnB6B,WAAA,CA8B0CnB,IAAA,CAAAgB,WAAW,EA9BrD,CA8B0BI,IAAI,EAAEC,KAAK;yBADvBhC,mBAAA,CAWK;MATAiC,GAAG,EAAED,KAAK;MACXrC,KAAK,EAAC;QAERO,mBAAA,CAIE;MAHEP,KAAK,EAAC,oCAAoC;MACzCe,GAAG,EAAEqB,IAAI,CAACG,MAAM;MACjBrB,GAAG,EAAC;4BArCxBsB,WAAA,GAuCgBjC,mBAAA,CAA4B,cAAAe,gBAAA,CAAnBc,IAAI,CAACK,IAAI,iB;sCAKxB7B,mBAAA,SAAY,EACZL,mBAAA,CA+BM,OA/BNmC,WA+BM,G,0BA9BJnC,mBAAA,CAAiC;IAA7BP,KAAK,EAAC;EAAc,GAAC,KAAG,sBAC5BO,mBAAA,CAgBM,OAhBNoC,WAgBM,I,kBAfJtC,mBAAA,CAcMC,SAAA,QA9DpB6B,WAAA,CAiD6CnB,IAAA,CAAA4B,YAAY,EAjDzD,CAiD0BC,OAAO,EAAER,KAAK;yBAD1BhC,mBAAA,CAcM;MAZDiC,GAAG,EAAED,KAAK;MACXrC,KAAK,EAAC;QAERO,mBAAA,CAIE;MAHEP,KAAK,EAAC,oCAAoC;MACzCe,GAAG,EAAE8B,OAAO,CAACN,MAAM;MACpBrB,GAAG,EAAC;4BAxDxB4B,WAAA,GA0DgBvC,mBAAA,CAGM,cAFJA,mBAAA,CAAyD,KAAzDwC,WAAyD,GAAzCxC,mBAAA,CAAqC,gBAAAe,gBAAA,CAA1BuB,OAAO,CAACG,MAAM,iB,GACzCzC,mBAAA,CAAoD,KAApD0C,WAAoD,EAAA3B,gBAAA,CAAtBuB,OAAO,CAACK,OAAO,iB;oCAKnDtC,mBAAA,WAAc,EACdL,mBAAA,CASM,OATN4C,WASM,G,gBARJ5C,mBAAA,CAME;IALE6C,IAAI,EAAC,MAAM;IApE7B,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAqE2BtC,IAAA,CAAAuC,SAAS,GAAAD,MAAA;IAClBtD,KAAK,EAAC,cAAc;IACpBwD,WAAW,EAAC,cAAc;IAC1BC,SAAS,EAAC;iDAHDzC,IAAA,CAAAuC,SAAS,E,GAKtBhD,mBAAA,CAA+D;IAAvDP,KAAK,EAAC,gBAAgB;IAAE0D,OAAK,EAAAL,MAAA,QAAAA,MAAA,UAAAM,IAAA,KAAE3C,IAAA,CAAA4C,WAAA,IAAA5C,IAAA,CAAA4C,WAAA,IAAAD,IAAA,CAAW;KAAE,IAAE,E,aAOlElD,YAAA,CAAkBoD,0BAAA,GAClBpD,YAAA,CAA6CqD,+BAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { createVNode as _createVNode, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, withCtx as _withCtx, withModifiers as _withModifiers, normalizeClass as _normalizeClass, createBlock as _createBlock, Transition as _Transition, createTextVNode as _createTextVNode, withKeys as _withKeys } from \"vue\";\nconst _hoisted_1 = {\n  class: \"d-flex\",\n  style: {\n    \"height\": \"100vh\",\n    \"overflow\": \"hidden\"\n  }\n};\nconst _hoisted_2 = {\n  class: \"flex-grow-1 overflow-auto\",\n  style: {\n    \"background\": \"#f5f7fa\"\n  }\n};\nconst _hoisted_3 = {\n  class: \"chat-container\"\n};\nconst _hoisted_4 = {\n  class: \"user-list\"\n};\nconst _hoisted_5 = {\n  class: \"search-bar\"\n};\nconst _hoisted_6 = [\"onClick\"];\nconst _hoisted_7 = {\n  class: \"user-info\"\n};\nconst _hoisted_8 = [\"innerHTML\"];\nconst _hoisted_9 = {\n  class: \"chat-interface\"\n};\nconst _hoisted_10 = {\n  class: \"chat-header\"\n};\nconst _hoisted_11 = {\n  key: 0,\n  class: \"d-flex align-items-center\"\n};\nconst _hoisted_12 = {\n  key: 1\n};\nconst _hoisted_13 = {\n  key: 0,\n  class: \"chat-body\",\n  ref: \"chatWindowRef\"\n};\nconst _hoisted_14 = {\n  class: \"message-content\"\n};\nconst _hoisted_15 = [\"innerHTML\"];\nconst _hoisted_16 = {\n  key: 2,\n  class: \"product-item d-flex align-items-center mb-2\",\n  style: {\n    \"background-color\": \"#f5f5f5\",\n    \"padding\": \"10px\",\n    \"border-radius\": \"10px\"\n  }\n};\nconst _hoisted_17 = [\"src\"];\nconst _hoisted_18 = {\n  class: \"mb-1\"\n};\nconst _hoisted_19 = {\n  class: \"text-muted\"\n};\nconst _hoisted_20 = {\n  key: 2,\n  class: \"message-status\"\n};\nconst _hoisted_21 = {\n  key: 0,\n  class: \"read-status\"\n};\nconst _hoisted_22 = {\n  key: 1,\n  class: \"unread-status\"\n};\nconst _hoisted_23 = {\n  key: 1,\n  style: {\n    \"text-align\": \"center\"\n  }\n};\nconst _hoisted_24 = {\n  key: 2,\n  class: \"input-toolbar d-flex align-items-center mb-2 p-2\"\n};\nconst _hoisted_25 = {\n  key: 1\n};\nconst _hoisted_26 = {\n  key: 3,\n  class: \"chat-input\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_avatar = _resolveComponent(\"el-avatar\");\n  const _component_el_icon = _resolveComponent(\"el-icon\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_image = _resolveComponent(\"el-image\");\n  const _component_emoji_picker = _resolveComponent(\"emoji-picker\");\n  const _component_el_upload = _resolveComponent(\"el-upload\");\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode($setup[\"ShopSliderComponent\"], {\n    ref: \"shopSlider\",\n    onInitChat: $setup.handleInitChat\n  }, null, 512 /* NEED_PATCH */), _createElementVNode(\"div\", _hoisted_2, [_createVNode($setup[\"StoreHeaderView\"], {\n    ref: \"storeHeader\"\n  }, null, 512 /* NEED_PATCH */), _createElementVNode(\"div\", _hoisted_3, [_createCommentVNode(\" 左侧：用户列表 \"), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createVNode(_component_el_input, {\n    modelValue: $setup.searchQuery,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.searchQuery = $event),\n    placeholder: \"搜索联系人\",\n    \"prefix-icon\": \"el-icon-search\",\n    size: \"small\",\n    clearable: \"\"\n  }, null, 8 /* PROPS */, [\"modelValue\"])]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.filteredUsers, (user, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: _normalizeClass([\"user-item\", {\n        selected: $setup.selectedUser && $setup.selectedUser.id === user.id\n      }]),\n      key: user.id,\n      onClick: $event => $setup.selectUser(user)\n    }, [_createVNode(_component_el_avatar, {\n      src: user.avatar,\n      size: \"medium\"\n    }, null, 8 /* PROPS */, [\"src\"]), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"h6\", null, _toDisplayString(user.nickname), 1 /* TEXT */), _createElementVNode(\"p\", {\n      innerHTML: user.lastMessage\n    }, null, 8 /* PROPS */, _hoisted_8)]), _createVNode(_component_el_button, {\n      icon: \"el-icon-delete\",\n      size: \"small\",\n      type: \"danger\",\n      class: \"delete-btn\",\n      onClick: _withModifiers($event => $setup.deleteUser(index), [\"stop\"])\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n        default: _withCtx(() => [_createVNode($setup[\"Delete\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])], 10 /* CLASS, PROPS */, _hoisted_6);\n  }), 128 /* KEYED_FRAGMENT */))]), _createCommentVNode(\" 右侧：聊天窗口 \"), _createElementVNode(\"div\", _hoisted_9, [_createCommentVNode(\" 聊天窗口顶部 \"), _createElementVNode(\"div\", _hoisted_10, [$setup.selectedUser ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [_createVNode(_component_el_avatar, {\n    src: $setup.selectedUser.avatar,\n    size: \"medium\"\n  }, null, 8 /* PROPS */, [\"src\"]), _createElementVNode(\"h5\", null, _toDisplayString($setup.selectedUser.nickname), 1 /* TEXT */)])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_12, _cache[3] || (_cache[3] = [_createElementVNode(\"h5\", null, \"选择联系人开始聊天\", -1 /* HOISTED */)])))]), _createCommentVNode(\" 聊天记录 \"), $setup.selectedUser ? (_openBlock(), _createElementBlock(\"div\", _hoisted_13, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.messages, (message, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: _normalizeClass([\"message\", {\n        self: message.isSelf\n      }])\n    }, [_createCommentVNode(\" 左侧：用户头像 \"), !message.isSelf ? (_openBlock(), _createBlock(_component_el_avatar, {\n      key: 0,\n      src: $setup.selectedUser.avatar,\n      size: \"default\",\n      class: \"avatar\"\n    }, null, 8 /* PROPS */, [\"src\"])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 右侧：商家头像 \"), message.isSelf ? (_openBlock(), _createBlock(_component_el_avatar, {\n      key: 1,\n      src: $setup.shopForm.shopAvatar,\n      size: \"default\",\n      class: \"avatar\"\n    }, null, 8 /* PROPS */, [\"src\"])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 消息内容 \"), _createElementVNode(\"div\", _hoisted_14, [message.contentType === 'text' ? (_openBlock(), _createElementBlock(\"p\", {\n      key: 0,\n      innerHTML: message.content\n    }, null, 8 /* PROPS */, _hoisted_15)) : message.contentType === 'image' ? (_openBlock(), _createBlock(_component_el_image, {\n      key: 1,\n      src: message.content,\n      class: \"img-fluid\",\n      style: {\n        \"width\": \"100px\",\n        \"height\": \"auto\"\n      },\n      \"preview-src-list\": [message.content],\n      alt: \"Image\"\n    }, null, 8 /* PROPS */, [\"src\", \"preview-src-list\"])) : message.contentType === 'link' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_16, [_createElementVNode(\"img\", {\n      src: message.content.image,\n      alt: \"Product\",\n      class: \"me-2\",\n      style: {\n        \"width\": \"40px\",\n        \"height\": \"40px\"\n      }\n    }, null, 8 /* PROPS */, _hoisted_17), _createElementVNode(\"div\", null, [_createElementVNode(\"p\", _hoisted_18, _toDisplayString(message.content.name), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_19, _toDisplayString(message.content.price) + \" 元\", 1 /* TEXT */)])])) : _createCommentVNode(\"v-if\", true)]), message.isSelf ? (_openBlock(), _createElementBlock(\"div\", _hoisted_20, [message.isRead ? (_openBlock(), _createElementBlock(\"span\", _hoisted_21, \"已读\")) : (_openBlock(), _createElementBlock(\"span\", _hoisted_22, \"未读\"))])) : _createCommentVNode(\"v-if\", true)], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_23, _cache[4] || (_cache[4] = [_createElementVNode(\"p\", null, \"请选择联系人开始聊天\", -1 /* HOISTED */)]))), _createCommentVNode(\" 输入框 \"), $setup.selectedUser ? (_openBlock(), _createElementBlock(\"div\", _hoisted_24, [_createVNode(_Transition, {\n    name: \"fade\"\n  }, {\n    default: _withCtx(() => [$setup.showEmojiPicker ? (_openBlock(), _createBlock(_component_emoji_picker, {\n      key: 0,\n      onEmojiClick: $setup.addEmoji,\n      style: {\n        \"position\": \"absolute\",\n        \"bottom\": \"215px\",\n        \"left\": \"500px\"\n      }\n    })) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  }), _createElementVNode(\"i\", {\n    class: \"bi bi-emoji-smile me-3\",\n    style: {\n      \"font-size\": \"1.5rem\",\n      \"cursor\": \"pointer\"\n    },\n    onClick: $setup.toggleEmojiPicker\n  }), _createVNode(_component_el_upload, {\n    \"show-file-list\": false,\n    \"before-upload\": $setup.beforeUpload,\n    accept: \"image/*\"\n  }, {\n    default: _withCtx(() => _cache[5] || (_cache[5] = [_createElementVNode(\"i\", {\n      class: \"bi bi-card-image me-3\",\n      style: {\n        \"font-size\": \"1.5rem\",\n        \"cursor\": \"pointer\"\n      }\n    }, null, -1 /* HOISTED */)])),\n    _: 1 /* STABLE */\n  }), _createElementVNode(\"i\", {\n    class: \"bi bi-scissors me-3\",\n    style: {\n      \"font-size\": \"1.5rem\",\n      \"cursor\": \"pointer\"\n    },\n    onClick: $setup.takeScreenshot\n  }), _createVNode(_component_el_dialog, {\n    modelValue: $setup.dialogVisible,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.dialogVisible = $event),\n    width: \"60vw\",\n    \"before-close\": $setup.handleClose\n  }, {\n    default: _withCtx(() => [$setup.imageSrc ? (_openBlock(), _createBlock($setup[\"VueCropper\"], {\n      key: 0,\n      ref: \"cropper\",\n      src: $setup.imageSrc,\n      \"aspect-ratio\": 16 / 9,\n      \"view-mode\": 1,\n      \"auto-crop-area\": 0.5,\n      guides: true,\n      \"auto-crop\": true,\n      background: true,\n      \"drag-mode\": _ctx.move\n    }, null, 8 /* PROPS */, [\"src\", \"drag-mode\"])) : _createCommentVNode(\"v-if\", true), $setup.imageSrc ? (_openBlock(), _createElementBlock(\"div\", _hoisted_25, [_createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: $setup.cropImage,\n      style: {\n        \"border-radius\": \"20px\"\n      }\n    }, {\n      default: _withCtx(() => _cache[6] || (_cache[6] = [_createTextVNode(\"裁剪并发送\")])),\n      _: 1 /* STABLE */\n    })])) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"])])) : _createCommentVNode(\"v-if\", true), $setup.selectedUser ? (_openBlock(), _createElementBlock(\"div\", _hoisted_26, [_createVNode(_component_el_input, {\n    modelValue: $setup.inputMessage,\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.inputMessage = $event),\n    type: \"textarea\",\n    placeholder: \"请输入消息...\",\n    clearable: \"\",\n    maxlength: \"500\",\n    resize: \"none\",\n    autosize: {\n      minRows: 6,\n      maxRows: 8\n    },\n    onKeyup: _withKeys($setup.sendMessage, [\"enter\"])\n  }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_el_button, {\n    type: \"primary\",\n    onClick: $setup.sendMessage\n  }, {\n    default: _withCtx(() => _cache[7] || (_cache[7] = [_createTextVNode(\"发送\")])),\n    _: 1 /* STABLE */\n  })])) : _createCommentVNode(\"v-if\", true)])])])]);\n}","map":{"version":3,"names":["class","style","key","ref","_createElementBlock","_hoisted_1","_createVNode","$setup","onInitChat","handleInitChat","_createElementVNode","_hoisted_2","_hoisted_3","_createCommentVNode","_hoisted_4","_hoisted_5","_component_el_input","modelValue","searchQuery","_cache","$event","placeholder","size","clearable","_Fragment","_renderList","filteredUsers","user","index","_normalizeClass","selected","selectedUser","id","onClick","selectUser","_component_el_avatar","src","avatar","_hoisted_7","_toDisplayString","nickname","innerHTML","lastMessage","_hoisted_8","_component_el_button","icon","type","_withModifiers","deleteUser","default","_withCtx","_component_el_icon","_","_hoisted_6","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","messages","message","self","isSelf","_createBlock","shopForm","shopAvatar","_hoisted_14","contentType","content","_hoisted_15","_component_el_image","alt","_hoisted_16","image","_hoisted_17","_hoisted_18","name","_hoisted_19","price","_hoisted_20","isRead","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_Transition","showEmojiPicker","_component_emoji_picker","onEmojiClick","addEmoji","toggleEmojiPicker","_component_el_upload","beforeUpload","accept","takeScreenshot","_component_el_dialog","dialogVisible","width","handleClose","imageSrc","guides","background","_ctx","move","_hoisted_25","cropImage","_createTextVNode","_hoisted_26","inputMessage","maxlength","resize","autosize","minRows","maxRows","onKeyup","_withKeys","sendMessage"],"sources":["D:\\Cache\\Java\\shopping\\shoppping_c_frontend\\src\\views\\Store\\StoreTalkView.vue"],"sourcesContent":["<template>\r\n  <div class=\"d-flex\" style=\"height: 100vh; overflow: hidden;\">\r\n    <ShopSliderComponent ref=\"shopSlider\" @initChat=\"handleInitChat\"></ShopSliderComponent>\r\n\r\n    <div class=\"flex-grow-1 overflow-auto\" style=\"background: #f5f7fa;\">\r\n      <StoreHeaderView ref=\"storeHeader\"></StoreHeaderView>\r\n\r\n      <div class=\"chat-container\">\r\n        <!-- 左侧：用户列表 -->\r\n        <div class=\"user-list\">\r\n          <div class=\"search-bar\">\r\n            <el-input\r\n                v-model=\"searchQuery\"\r\n                placeholder=\"搜索联系人\"\r\n                prefix-icon=\"el-icon-search\"\r\n                size=\"small\"\r\n                clearable\r\n            />\r\n          </div>\r\n          <div\r\n              class=\"user-item\"\r\n              v-for=\"(user, index) in filteredUsers\"\r\n              :key=\"user.id\"\r\n              :class=\"{ selected: selectedUser && selectedUser.id === user.id }\"\r\n              @click=\"selectUser(user)\"\r\n          >\r\n            <el-avatar :src=\"user.avatar\" size=\"medium\"/>\r\n            <div class=\"user-info\">\r\n              <h6>{{ user.nickname }}</h6>\r\n              <p v-html=\"user.lastMessage\"></p>\r\n            </div>\r\n            <el-button\r\n                icon=\"el-icon-delete\"\r\n                size=\"small\"\r\n                type=\"danger\"\r\n                class=\"delete-btn\"\r\n                @click.stop=\"deleteUser(index)\"\r\n            >\r\n              <el-icon>\r\n                <Delete/>\r\n              </el-icon>\r\n            </el-button>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 右侧：聊天窗口 -->\r\n        <div class=\"chat-interface\">\r\n          <!-- 聊天窗口顶部 -->\r\n          <div class=\"chat-header\">\r\n            <div v-if=\"selectedUser\" class=\"d-flex align-items-center\">\r\n              <el-avatar :src=\"selectedUser.avatar\" size=\"medium\"/>\r\n              <h5>{{ selectedUser.nickname }}</h5>\r\n            </div>\r\n            <div v-else>\r\n              <h5>选择联系人开始聊天</h5>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- 聊天记录 -->\r\n          <div class=\"chat-body\" v-if=\"selectedUser\" ref=\"chatWindowRef\">\r\n            <div\r\n                v-for=\"(message, index) in messages\"\r\n                :key=\"index\"\r\n                class=\"message\"\r\n                :class=\"{ self: message.isSelf }\"\r\n            >\r\n              <!-- 左侧：用户头像 -->\r\n              <el-avatar\r\n                  v-if=\"!message.isSelf\"\r\n                  :src=\"selectedUser.avatar\"\r\n                  size=\"default\"\r\n                  class=\"avatar\"\r\n              ></el-avatar>\r\n              <!-- 右侧：商家头像 -->\r\n              <el-avatar\r\n                  v-if=\"message.isSelf\"\r\n                  :src=\"shopForm.shopAvatar\"\r\n                  size=\"default\"\r\n                  class=\"avatar\"\r\n              ></el-avatar>\r\n              <!-- 消息内容 -->\r\n              <div class=\"message-content\">\r\n                <p v-html=\"message.content\" v-if=\"message.contentType === 'text'\"></p>\r\n                <el-image :src=\"message.content\" v-else-if=\"message.contentType === 'image'\" class=\"img-fluid\"\r\n                          style=\"width: 100px; height: auto;\"\r\n                          :preview-src-list=\"[message.content]\"\r\n                          alt=\"Image\"/>\r\n                <div\r\n                    v-else-if=\"message.contentType === 'link'\"\r\n                    class=\"product-item d-flex align-items-center mb-2\"\r\n                    style=\"background-color: #f5f5f5; padding: 10px; border-radius: 10px;\"\r\n                >\r\n                  <img\r\n                      :src=\"message.content.image\"\r\n                      alt=\"Product\"\r\n                      class=\"me-2\"\r\n                      style=\"width: 40px; height: 40px;\"\r\n                  >\r\n                  <div>\r\n                    <p class=\"mb-1\">{{ message.content.name }}</p>\r\n                    <span class=\"text-muted\">{{ message.content.price }} 元</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div v-if=\"message.isSelf\" class=\"message-status\">\r\n                <span v-if=\"message.isRead\" class=\"read-status\">已读</span>\r\n                <span v-else class=\"unread-status\">未读</span>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n\r\n          <div v-else style=\"text-align: center;\">\r\n            <p>请选择联系人开始聊天</p>\r\n          </div>\r\n\r\n          <!-- 输入框 -->\r\n          <div class=\"input-toolbar d-flex align-items-center mb-2 p-2\" v-if=\"selectedUser\">\r\n            <transition name=\"fade\">\r\n              <emoji-picker\r\n                  v-if=\"showEmojiPicker\"\r\n                  @emoji-click=\"addEmoji\"\r\n                  style=\"position: absolute; bottom:215px; left: 500px;\"\r\n              ></emoji-picker>\r\n            </transition>\r\n            <i class=\"bi bi-emoji-smile me-3\" style=\"font-size: 1.5rem; cursor: pointer;\"\r\n               @click=\"toggleEmojiPicker\"></i>\r\n            <el-upload\r\n                :show-file-list=\"false\"\r\n                :before-upload=\"beforeUpload\"\r\n                accept=\"image/*\"\r\n            >\r\n              <i class=\"bi bi-card-image me-3\" style=\"font-size: 1.5rem; cursor: pointer;\"></i>\r\n            </el-upload>\r\n            <i class=\"bi bi-scissors me-3\" style=\"font-size: 1.5rem; cursor: pointer;\"\r\n               @click=\"takeScreenshot\"></i>\r\n            <el-dialog\r\n                v-model=\"dialogVisible\"\r\n                width=60vw\r\n                :before-close=\"handleClose\"\r\n            >\r\n              <vue-cropper\r\n                  v-if=\"imageSrc\"\r\n                  ref=\"cropper\"\r\n                  :src=\"imageSrc\"\r\n                  :aspect-ratio=\"16 / 9\"\r\n                  :view-mode=\"1\"\r\n                  :auto-crop-area=\"0.5\"\r\n                  :guides=\"true\"\r\n                  :auto-crop=\"true\"\r\n                  :background=\"true\"\r\n                  :drag-mode=\"move\"\r\n              ></vue-cropper>\r\n              <div v-if=\"imageSrc\">\r\n                <el-button type=\"primary\" @click=\"cropImage\" style=\"border-radius: 20px;\">裁剪并发送</el-button>\r\n              </div>\r\n            </el-dialog>\r\n          </div>\r\n          <div class=\"chat-input\" v-if=\"selectedUser\">\r\n            <el-input\r\n                v-model=\"inputMessage\"\r\n                type=\"textarea\"\r\n                placeholder=\"请输入消息...\"\r\n                clearable\r\n                maxlength=\"500\"\r\n                resize=\"none\"\r\n                :autosize=\"{ minRows: 6, maxRows: 8 }\"\r\n                @keyup.enter=\"sendMessage\"\r\n            />\r\n            <el-button type=\"primary\" @click=\"sendMessage\">发送</el-button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport ShopSliderComponent from \"@/components/ShopSliderComponent.vue\";\r\nimport StoreHeaderView from \"@/components/StoreHeaderView.vue\";\r\nimport {computed, nextTick, onMounted, ref} from \"vue\";\r\nimport {useUserShop} from \"@/composables/useShopUser\";\r\nimport {Delete} from \"@element-plus/icons-vue\";\r\nimport axios from \"axios\";\r\nimport {ElMessage} from \"element-plus\";\r\nimport 'emoji-picker-element';\r\nimport VueCropper from \"vue-cropperjs\";\r\nimport html2canvas from \"html2canvas\";\r\nimport 'cropperjs/dist/cropper.css';\r\n\r\nconst {shopForm, initUserSession, initShopInfo} = useUserShop();\r\nconst shopSlider = ref(null);\r\nconst storeHeader = ref(null);\r\n\r\nconst searchQuery = ref(\"\");\r\nconst users = ref([]);\r\n\r\nasync function initUserList() {\r\n  try {\r\n    const response = await axios.post('/api/shop/chat/getTalkList', {\r\n      shopID: shopForm.value.shopID,\r\n    }, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      withCredentials: true,\r\n    })\r\n    if (response.data != null && Array.isArray(response.data))\r\n      users.value = response.data;\r\n  } catch (err) {\r\n    ElMessage.error(\"获取联系人列表失败\")\r\n  }\r\n}\r\n\r\nconst messages = ref([]);\r\nconst chatData = ref({});\r\nconst selectedUser = ref(null);\r\n\r\nasync function IsInChatSession() {\r\n  const userId = new URLSearchParams(window.location.search).get('id');\r\n  if (userId) {\r\n    const user = users.value.find(user => user.id === parseInt(userId, 10));\r\n    if (user) {\r\n      await selectUser(user);\r\n    }\r\n  } else {\r\n    selectedUser.value = null;\r\n    messages.value = [];\r\n  }\r\n}\r\n\r\nconst inputMessage = ref(\"\");\r\n\r\nconst filteredUsers = computed(() =>\r\n    users.value.filter((user) => user.nickname.includes(searchQuery.value))\r\n);\r\n\r\nasync function selectUser(user) {\r\n  try {\r\n    const response = await axios.post('/api/shop/chat/getTalkDetail', {\r\n      shopID: shopForm.value.shopID,\r\n      userId: user.id,\r\n    }, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      withCredentials: true,\r\n    })\r\n    if (response.data != null) {\r\n      const chatId = Object.keys(response.data)[0];\r\n      chatData.value[chatId] = response.data[chatId].map(msg => ({\r\n        content: msg.content,\r\n        isSelf: msg.isSelf,\r\n        isRead: msg.isRead,\r\n        contentType: msg.contentType\r\n      }));\r\n      selectedUser.value = user;\r\n      messages.value = chatData.value[user.id] || [];\r\n    }\r\n  } catch (error) {\r\n    ElMessage.error(\"获取聊天记录失败\")\r\n  }\r\n}\r\n\r\nasync function handleInitChat(id) {\r\n  const user = users.value.find(user => user.id === parseInt(id, 10));\r\n  if (user) {\r\n    if (selectedUser.value && selectedUser.value.id === user.id) {\r\n      await selectUser(user);\r\n    }\r\n  }\r\n  await initUserList();\r\n}\r\n\r\nasync function deleteUser(index) {\r\n  const contactId = users.value[index].id;\r\n  try {\r\n    const response = await axios.post('/api/shop/chat/deleteChatSession', {\r\n      shopID: shopForm.value.shopID,\r\n      userId: contactId,\r\n    }, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      withCredentials: true\r\n    });\r\n    if (response.data.code === 200) {\r\n      delete chatData.value[contactId];\r\n      if (selectedUser.value && selectedUser.value.id === index) {\r\n        selectedUser.value = null;\r\n        messages.value = [];\r\n      }\r\n      await initUserList();\r\n    } else if (response.data.code === 400)\r\n      ElMessage.error('删除联系人失败，请稍后再试')\r\n  } catch (error) {\r\n    ElMessage.error('删除联系人失败，请稍后再试')\r\n  }\r\n}\r\n\r\nconst chatWindowRef = ref(null);\r\nconst showEmojiPicker = ref(false);\r\n\r\nconst toggleEmojiPicker = () => {\r\n  showEmojiPicker.value = !showEmojiPicker.value;\r\n};\r\n\r\nconst addEmoji = (event) => {\r\n  inputMessage.value += event.detail.unicode;\r\n};\r\n\r\nasync function uploadImage(file) {\r\n  try {\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    formData.append('userId', selectedUser.value.id);\r\n    formData.append('shopId', shopForm.value.shopID);\r\n    const response = await axios.post('/api/shop/chat/uploadImage', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      },\r\n      withCredentials: true\r\n    });\r\n    if (response.data.code === 200) {\r\n      await initUserList();\r\n      await selectUser(selectedUser.value);\r\n      await nextTick(() => {\r\n        const chatWindow = chatWindowRef.value;\r\n        if (chatWindow) {\r\n          chatWindow.scrollTop = chatWindow.scrollHeight;\r\n        }\r\n      });\r\n    } else\r\n      ElMessage.error('上传图片失败，请稍后再试')\r\n  } catch (err) {\r\n    ElMessage.error('上传图片失败，请稍后再试')\r\n  }\r\n}\r\n\r\nconst beforeUpload = async (file) => {\r\n  const isImage = file.type.startsWith('image/');\r\n  if (!isImage) {\r\n    ElMessage.error('请选择图片文件！');\r\n    return;\r\n  }\r\n  const isLt2M = file.size / 1024 / 1024 < 2;  // 限制文件大小为 2MB\r\n  if (!isLt2M) {\r\n    ElMessage.error('图片大小不能超过 2MB！');\r\n    return;\r\n  }\r\n  await uploadImage(file);\r\n};\r\n\r\nasync function sendMessage() {\r\n  if (inputMessage.value.trim() === \"\") {\r\n    ElMessage.error(\"消息不能为空\")\r\n    return;\r\n  }\r\n  try {\r\n    const response = await axios.post('/api/shop/chat/sendMessage', {\r\n      shopID: shopForm.value.shopID,\r\n      userId: selectedUser.value.id,\r\n      message: inputMessage.value,\r\n    }, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      withCredentials: true\r\n    })\r\n    if (response.data.code === 200) {\r\n      await selectUser(selectedUser.value);\r\n      await initUserList();\r\n      inputMessage.value = \"\";\r\n      await nextTick(() => {\r\n        const chatWindow = chatWindowRef.value;\r\n        if (chatWindow) {\r\n          chatWindow.scrollTop = chatWindow.scrollHeight;\r\n        }\r\n      });\r\n    } else if (response.data.code === 400) {\r\n      ElMessage.error(\"发送失败，请稍后再试\")\r\n    }\r\n  } catch (error) {\r\n    ElMessage.error(\"发送失败，请稍后再试\")\r\n  }\r\n}\r\n\r\nconst cropper = ref(null);\r\nconst imageSrc = ref(null);\r\nconst dialogVisible = ref(false);\r\n\r\nconst takeScreenshot = () => {\r\n  dialogVisible.value = true;\r\n  const element = document.body;\r\n  html2canvas(element).then(canvas => {\r\n    imageSrc.value = canvas.toDataURL('image/png');\r\n  });\r\n};\r\n\r\nasync function cropImage() {\r\n  const canvas = cropper.value.getCroppedCanvas();\r\n  const dataUrl = canvas.toDataURL('image/png');\r\n  const file = dataUrlToFile(dataUrl);\r\n  await uploadImage(file)\r\n  handleClose();\r\n}\r\n\r\nconst dataUrlToFile = (dataUrl) => {\r\n  const arr = dataUrl.split(',');\r\n  const mime = arr[0].match(/:(.*?);/)[1];\r\n  const bstr = atob(arr[1]);\r\n  let n = bstr.length;\r\n  const u8arr = new Uint8Array(n);\r\n  while (n--) {\r\n    u8arr[n] = bstr.charCodeAt(n);\r\n  }\r\n  return new File([u8arr], 'cropped-image.png', {type: mime});\r\n};\r\n\r\nconst handleClose = () => {\r\n  dialogVisible.value = false;\r\n  imageSrc.value = '';\r\n};\r\n\r\nonMounted(async () => {\r\n  initUserSession();\r\n  await initShopInfo();\r\n  shopSlider.value.setActiveIndex('5-1')\r\n  storeHeader.value.setTitle('客服');\r\n  await initUserList();\r\n  await IsInChatSession();\r\n});\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n.chat-container {\r\n  display: flex;\r\n  height: 100vh;\r\n  background: #f9f9f9;\r\n  font-family: \"Arial\", sans-serif;\r\n  max-height: 94vh;\r\n}\r\n\r\n/* 左侧用户列表 */\r\n.user-list {\r\n  width: 300px;\r\n  background: #ffffff;\r\n  border-right: 1px solid #e6e6e6;\r\n  overflow-y: auto;\r\n}\r\n\r\n.search-bar {\r\n  padding: 10px;\r\n  border-bottom: 1px solid #e6e6e6;\r\n  background: #f8f8f8;\r\n}\r\n\r\n.user-item {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 10px;\r\n  cursor: pointer;\r\n  border-bottom: 1px solid #e6e6e6;\r\n  position: relative;\r\n}\r\n\r\n.user-item:hover {\r\n  background: #f0f8ff;\r\n}\r\n\r\n.user-item.selected {\r\n  background: #e6f7ff;\r\n}\r\n\r\n.user-info {\r\n  flex-grow: 1;\r\n  margin-left: 10px;\r\n  overflow: hidden;\r\n}\r\n\r\n.user-info h6 {\r\n  margin: 0;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n}\r\n\r\n.user-info p {\r\n  margin: 0;\r\n  font-size: 12px;\r\n  color: #777;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n}\r\n\r\n.delete-btn {\r\n  display: none;\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n}\r\n\r\n.user-item:hover .delete-btn {\r\n  display: block;\r\n}\r\n\r\n/* 右侧聊天窗口 */\r\n.chat-interface {\r\n  flex-grow: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background: #fff;\r\n}\r\n\r\n.chat-header {\r\n  padding: 15px;\r\n  border-bottom: 1px solid #e6e6e6;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.chat-header h5 {\r\n  margin: 0;\r\n  margin-left: 10px;\r\n  font-size: 16px;\r\n  color: #333;\r\n}\r\n\r\n.chat-body {\r\n  flex-grow: 1;\r\n  padding: 15px;\r\n  overflow-y: auto;\r\n  background: #fafafa;\r\n}\r\n\r\n.message {\r\n  display: flex;\r\n  align-items: flex-start; /* 消息和头像垂直对齐 */\r\n  margin-bottom: 10px;\r\n\r\n  &.self {\r\n    flex-direction: row-reverse; /* 商家消息右侧显示 */\r\n  }\r\n\r\n  .avatar {\r\n    margin: 0 10px; /* 调整头像和消息的间距 */\r\n  }\r\n\r\n  .message-content {\r\n    padding: 10px;\r\n    border-radius: 8px;\r\n    max-width: 60%;\r\n    background: #e9ecef; /* 默认背景色 */\r\n  }\r\n\r\n  &.self .message-content {\r\n    background: #d4edda; /* 商家消息背景色 */\r\n    color: #155724; /* 商家消息文本颜色 */\r\n  }\r\n}\r\n\r\n.chat-input {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 10px;\r\n  border-top: 1px solid #e6e6e6;\r\n  background: #fff;\r\n}\r\n\r\n.fade-enter-active,\r\n.fade-leave-active {\r\n  transition: opacity 0.5s;\r\n}\r\n\r\n.fade-enter,\r\n.fade-leave-to {\r\n  opacity: 0;\r\n}\r\n\r\n.message-status {\r\n  font-size: 12px;\r\n  color: #999;\r\n  margin-top: 4px;\r\n  padding: 5px;\r\n}\r\n\r\n.read-status {\r\n  color: #67C23A; /* 已读状态颜色 */\r\n}\r\n\r\n.unread-status {\r\n  color: #F56C6C; /* 未读状态颜色 */\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
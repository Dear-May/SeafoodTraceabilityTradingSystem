{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport ShopSliderComponent from \"@/components/ShopSliderComponent.vue\";\nimport StoreHeaderView from \"@/components/StoreHeaderView.vue\";\nimport { ref, onMounted } from \"vue\";\nimport \"video.js/dist/video-js.css\";\nimport { useUserShop } from \"@/composables/useShopUser\";\nimport { ElMessage } from \"element-plus\";\nexport default {\n  __name: 'StoreLiveView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const shopSlider = ref(null);\n    const storeHeader = ref(null);\n    const {\n      shopForm,\n      initUserSession,\n      initShopInfo\n    } = useUserShop();\n    const loading = ref(false);\n    const isPublishing = ref(false); // 是否正在推流\n    const button_one = ref(null);\n    const button_two = ref(null);\n    const videoStream = ref(null);\n    const pc = ref(null);\n    const onlineUsers = [{\n      name: \"测试a\",\n      avatar: \"https://via.placeholder.com/40\"\n    }, {\n      name: \"测试b\",\n      avatar: \"https://via.placeholder.com/40\"\n    }];\n    const chatMessages = [{\n      sender: \"测试a\",\n      content: \"你好啊\",\n      avatar: \"https://via.placeholder.com/40\"\n    }, {\n      sender: \"测试b\",\n      content: \"正在看直播~\",\n      avatar: \"https://via.placeholder.com/40\"\n    }];\n    const chatInput = ref(\"\");\n    const sendMessage = () => {\n      if (chatInput.value.trim() === \"\") return;\n      chatMessages.push({\n        sender: \"我\",\n        content: chatInput.value.trim(),\n        avatar: shopForm.value.shopAvatar\n      });\n      chatInput.value = \"\"; // 清空输入框\n    };\n    async function publish() {\n      if (isPublishing.value) return;\n      const httpURL = \"http://localhost:1985/rtc/v1/publish/\";\n      const webRTCURL = `webRTC://localhost/live/${shopForm.value.shopID}`;\n      try {\n        // 捕获本地视频流\n        videoStream.value = await navigator.mediaDevices.getUserMedia({\n          video: {\n            frameRate: {\n              ideal: 30\n            },\n            width: 1280,\n            height: 720\n          },\n          audio: true\n        });\n\n        // 显示本地视频流\n        const localVideo = document.querySelector(\"#video\");\n        localVideo.srcObject = videoStream.value;\n        localVideo.play();\n\n        // 创建 RTCPeerConnection\n        pc.value = new RTCPeerConnection();\n\n        // 添加轨道到 RTCPeerConnection\n        videoStream.value.getTracks().forEach(track => {\n          pc.value.addTrack(track, videoStream.value);\n        });\n\n        // 创建 SDP offer\n        const offer = await pc.value.createOffer();\n        await pc.value.setLocalDescription(offer);\n        const data = {\n          api: httpURL,\n          streamurl: webRTCURL,\n          sdp: offer.sdp\n        };\n\n        // 与 SRS 信令交互\n        const response = await httpApi(httpURL, data);\n        await pc.value.setRemoteDescription(new RTCSessionDescription({\n          type: \"answer\",\n          sdp: response.sdp\n        }));\n        isPublishing.value = true;\n        ElMessage.success(\"开始直播\");\n      } catch (error) {\n        ElMessage.error(\"推流失败，请稍后再试\");\n      }\n    }\n    function close() {\n      if (!isPublishing.value) return;\n      if (pc.value) {\n        pc.value.close();\n        pc.value = null;\n      }\n      videoStream.value.getTracks().forEach(track => track.stop());\n      isPublishing.value = false;\n    }\n    function httpApi(httpURL, data) {\n      return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.open(\"POST\", httpURL, true);\n        xhr.setRequestHeader(\"Content-type\", \"application/json\");\n        xhr.send(JSON.stringify(data));\n        xhr.onload = () => {\n          if (xhr.status >= 200 && xhr.status < 300) {\n            resolve(JSON.parse(xhr.responseText));\n          } else {\n            reject(JSON.parse(xhr.responseText));\n          }\n        };\n      });\n    }\n    onMounted(async () => {\n      loading.value = true;\n      initUserSession();\n      await initShopInfo();\n      shopSlider.value.setActiveIndex(\"6-1\");\n      storeHeader.value.setTitle(\"直播间\");\n      loading.value = false;\n    });\n    const __returned__ = {\n      shopSlider,\n      storeHeader,\n      shopForm,\n      initUserSession,\n      initShopInfo,\n      loading,\n      isPublishing,\n      button_one,\n      button_two,\n      videoStream,\n      pc,\n      onlineUsers,\n      chatMessages,\n      chatInput,\n      sendMessage,\n      publish,\n      close,\n      httpApi,\n      ShopSliderComponent,\n      StoreHeaderView,\n      ref,\n      onMounted,\n      get useUserShop() {\n        return useUserShop;\n      },\n      get ElMessage() {\n        return ElMessage;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ShopSliderComponent","StoreHeaderView","ref","onMounted","useUserShop","ElMessage","shopSlider","storeHeader","shopForm","initUserSession","initShopInfo","loading","isPublishing","button_one","button_two","videoStream","pc","onlineUsers","name","avatar","chatMessages","sender","content","chatInput","sendMessage","value","trim","push","shopAvatar","publish","httpURL","webRTCURL","shopID","navigator","mediaDevices","getUserMedia","video","frameRate","ideal","width","height","audio","localVideo","document","querySelector","srcObject","play","RTCPeerConnection","getTracks","forEach","track","addTrack","offer","createOffer","setLocalDescription","data","api","streamurl","sdp","response","httpApi","setRemoteDescription","RTCSessionDescription","type","success","error","close","stop","Promise","resolve","reject","xhr","XMLHttpRequest","open","setRequestHeader","send","JSON","stringify","onload","status","parse","responseText","setActiveIndex","setTitle"],"sources":["D:/Cache/Java/shopping/shoppping_c_frontend/src/views/Store/StoreLiveView.vue"],"sourcesContent":["<template>\r\n  <div class=\"d-flex\" style=\"height: 100vh; overflow: hidden;\">\r\n    <ShopSliderComponent ref=\"shopSlider\"></ShopSliderComponent>\r\n    <div class=\"flex-grow-1 overflow-auto\" style=\"background: #f5f7fa;\">\r\n      <StoreHeaderView ref=\"storeHeader\"></StoreHeaderView>\r\n\r\n      <div class=\"p-4\" v-loading=\"loading\">\r\n        <div class=\"live-stream-container\">\r\n          <!-- 头部信息 -->\r\n          <div class=\"header bg-light d-flex align-items-center p-3 shadow-sm row\">\r\n            <div class=\"col-8\">\r\n              <el-button\r\n                  ref=\"button_one\"\r\n                  @click=\"publish\"\r\n                  type=\"primary\"\r\n                  size=\"large\"\r\n                  :disabled=\"isPublishing\"\r\n              >\r\n                开始直播\r\n              </el-button>\r\n              <el-button\r\n                  ref=\"button_two\"\r\n                  @click=\"close\"\r\n                  type=\"danger\"\r\n                  size=\"large\"\r\n                  :disabled=\"!isPublishing\"\r\n              >\r\n                停止直播\r\n              </el-button>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- 主体内容 -->\r\n          <div class=\"content-container d-flex\">\r\n            <!-- 视频播放区 -->\r\n            <div class=\"video-section flex-grow-1\">\r\n              <video id=\"video2\" ref=\"video2\" autoplay class=\"video-player\" muted playsinline\r\n                     style=\"width: 100%; height: 100%;\"></video>\r\n            </div>\r\n\r\n            <!-- 在线用户和聊天区域 -->\r\n            <div class=\"side-panel bg-light p-3\">\r\n              <!-- 在线用户列表 -->\r\n              <div class=\"online-users mb-4\">\r\n                <h6 class=\"text-danger\">在线人员 ({{ onlineUsers.length }})</h6>\r\n                <ul class=\"list-unstyled\">\r\n                  <li\r\n                      v-for=\"(user, index) in onlineUsers\"\r\n                      :key=\"index\"\r\n                      class=\"d-flex align-items-center mb-2\"\r\n                  >\r\n                    <img\r\n                        class=\"user-avatar-sm rounded-circle me-2\"\r\n                        :src=\"user.avatar\"\r\n                        alt=\"用户头像\"\r\n                    />\r\n                    <span>{{ user.name }}</span>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n\r\n              <!-- 聊天区 -->\r\n              <div class=\"chat-section\">\r\n                <h6 class=\"text-primary\">聊天区</h6>\r\n                <div class=\"chat-messages border rounded p-2 mb-3\">\r\n                  <div\r\n                      v-for=\"(message, index) in chatMessages\"\r\n                      :key=\"index\"\r\n                      class=\"d-flex align-items-start mb-2\"\r\n                  >\r\n                    <img\r\n                        class=\"user-avatar-sm rounded-circle me-2\"\r\n                        :src=\"message.avatar\"\r\n                        alt=\"用户头像\"\r\n                    />\r\n                    <div>\r\n                      <p class=\"mb-1\"><strong>{{ message.sender }}</strong></p>\r\n                      <p class=\"text-muted mb-0\">{{ message.content }}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <!-- 聊天输入框 -->\r\n                <div class=\"input-group\">\r\n                  <input\r\n                      type=\"text\"\r\n                      v-model=\"chatInput\"\r\n                      class=\"form-control\"\r\n                      placeholder=\"输入50字以内聊天内容~\"\r\n                      maxlength=\"50\"\r\n                  />\r\n                  <button class=\"btn btn-danger\" @click=\"sendMessage\">发送</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport ShopSliderComponent from \"@/components/ShopSliderComponent.vue\";\r\nimport StoreHeaderView from \"@/components/StoreHeaderView.vue\";\r\nimport {ref, onMounted} from \"vue\";\r\nimport \"video.js/dist/video-js.css\";\r\nimport {useUserShop} from \"@/composables/useShopUser\";\r\nimport {ElMessage} from \"element-plus\";\r\n\r\nconst shopSlider = ref(null);\r\nconst storeHeader = ref(null);\r\nconst {shopForm, initUserSession, initShopInfo} = useUserShop();\r\nconst loading = ref(false);\r\nconst isPublishing = ref(false); // 是否正在推流\r\nconst button_one = ref(null);\r\nconst button_two = ref(null);\r\n\r\nconst videoStream = ref(null);\r\nconst pc = ref(null);\r\n\r\nconst onlineUsers = [\r\n  {name: \"测试a\", avatar: \"https://via.placeholder.com/40\"},\r\n  {name: \"测试b\", avatar: \"https://via.placeholder.com/40\"},\r\n];\r\n\r\nconst chatMessages = [\r\n  {sender: \"测试a\", content: \"你好啊\", avatar: \"https://via.placeholder.com/40\"},\r\n  {sender: \"测试b\", content: \"正在看直播~\", avatar: \"https://via.placeholder.com/40\"},\r\n];\r\n\r\nconst chatInput = ref(\"\");\r\n\r\nconst sendMessage = () => {\r\n  if (chatInput.value.trim() === \"\") return;\r\n  chatMessages.push({\r\n    sender: \"我\",\r\n    content: chatInput.value.trim(),\r\n    avatar: shopForm.value.shopAvatar,\r\n  });\r\n  chatInput.value = \"\"; // 清空输入框\r\n};\r\n\r\nasync function publish() {\r\n  if (isPublishing.value) return;\r\n\r\n  const httpURL = \"http://localhost:1985/rtc/v1/publish/\";\r\n  const webRTCURL = `webRTC://localhost/live/${shopForm.value.shopID}`;\r\n\r\n  try {\r\n    // 捕获本地视频流\r\n    videoStream.value = await navigator.mediaDevices.getUserMedia({\r\n      video: {frameRate: {ideal: 30}, width: 1280, height: 720},\r\n      audio: true,\r\n    });\r\n\r\n    // 显示本地视频流\r\n    const localVideo = document.querySelector(\"#video\");\r\n    localVideo.srcObject = videoStream.value;\r\n    localVideo.play();\r\n\r\n    // 创建 RTCPeerConnection\r\n    pc.value = new RTCPeerConnection();\r\n\r\n    // 添加轨道到 RTCPeerConnection\r\n    videoStream.value.getTracks().forEach((track) => {\r\n      pc.value.addTrack(track, videoStream.value);\r\n    });\r\n\r\n    // 创建 SDP offer\r\n    const offer = await pc.value.createOffer();\r\n    await pc.value.setLocalDescription(offer);\r\n\r\n    const data = {\r\n      api: httpURL,\r\n      streamurl: webRTCURL,\r\n      sdp: offer.sdp,\r\n    };\r\n\r\n    // 与 SRS 信令交互\r\n    const response = await httpApi(httpURL, data);\r\n\r\n    await pc.value.setRemoteDescription(\r\n        new RTCSessionDescription({type: \"answer\", sdp: response.sdp})\r\n    );\r\n    isPublishing.value = true;\r\n    ElMessage.success(\"开始直播\");\r\n  } catch (error) {\r\n    ElMessage.error(\"推流失败，请稍后再试\");\r\n  }\r\n}\r\n\r\nfunction close() {\r\n  if (!isPublishing.value) return;\r\n\r\n  if (pc.value) {\r\n    pc.value.close();\r\n    pc.value = null;\r\n  }\r\n\r\n  videoStream.value.getTracks().forEach((track) => track.stop());\r\n  isPublishing.value = false;\r\n}\r\n\r\nfunction httpApi(httpURL, data) {\r\n  return new Promise((resolve, reject) => {\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.open(\"POST\", httpURL, true);\r\n    xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n    xhr.send(JSON.stringify(data));\r\n    xhr.onload = () => {\r\n      if (xhr.status >= 200 && xhr.status < 300) {\r\n        resolve(JSON.parse(xhr.responseText));\r\n      } else {\r\n        reject(JSON.parse(xhr.responseText));\r\n      }\r\n    };\r\n  });\r\n}\r\n\r\nonMounted(async () => {\r\n  loading.value = true;\r\n  initUserSession();\r\n  await initShopInfo();\r\n  shopSlider.value.setActiveIndex(\"6-1\");\r\n  storeHeader.value.setTitle(\"直播间\");\r\n  loading.value = false;\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.live-stream-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 80vh;\r\n}\r\n\r\n/* 头部信息样式 */\r\n.header {\r\n  display: flex;\r\n  align-items: center;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\n.user-avatar {\r\n  width: 50px;\r\n  height: 50px;\r\n}\r\n\r\n/* 主体内容布局 */\r\n.content-container {\r\n  flex: 1;\r\n  display: flex;\r\n  overflow: hidden;\r\n}\r\n\r\n/* 视频区域 */\r\n.video-section {\r\n  flex-grow: 1;\r\n  background: #000;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.video-player {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n/* 在线用户和聊天区域 */\r\n.side-panel {\r\n  width: 300px;\r\n  border-left: 1px solid #ddd;\r\n  overflow-y: auto;\r\n}\r\n\r\n.online-users img.user-avatar-sm {\r\n  width: 30px;\r\n  height: 30px;\r\n}\r\n\r\n.chat-section .chat-messages {\r\n  max-height: 300px;\r\n  overflow-y: auto;\r\n}\r\n\r\n.chat-section .input-group {\r\n  display: flex;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
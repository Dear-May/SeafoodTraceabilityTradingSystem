{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport ShopSliderComponent from \"@/components/ShopSliderComponent.vue\";\nimport { useUserShop } from \"@/composables/useShopUser\";\nimport { onMounted, ref } from \"vue\";\nimport StoreHeaderView from \"@/components/StoreHeaderView.vue\";\nimport axios from \"axios\";\nimport { ElMessage } from \"element-plus\";\nimport router from \"@/router\";\nexport default {\n  __name: 'StoreOrderReturnsView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const {\n      UserForm,\n      shopForm,\n      initUserSession,\n      initShopInfo\n    } = useUserShop();\n    const shopSlider = ref(null);\n    const storeHeader = ref(null);\n    const activeTab = ref('all');\n    const orderList = ref([]);\n    const filteredOrders = ref([]);\n    const orderCount = ref({\n      all: 0,\n      working: 0\n    });\n    async function initReturnOrdersInfo() {\n      try {\n        const response = await axios.post('/api/shop/return/getShopReturnInfo', {\n          shopID: shopForm.value.shopID\n        }, {\n          headers: {\n            'Content-Type': 'application/json;charset=UTF-8'\n          },\n          withCredentials: true\n        });\n        if (response.data !== null) {\n          orderList.value = response.data;\n          filteredOrders.value = orderList.value;\n          console.log(orderList.value);\n          orderCount.value.all = orderList.value.length;\n          orderCount.value.working = orderList.value.filter(order => order.status === '等待商家退款').length;\n        } else ElMessage.error(\"获取订单信息失败，请稍后再试。\");\n      } catch (err) {\n        ElMessage.error(\"获取订单信息失败，请稍后再试。\");\n      }\n    }\n    const searchQuery = ref(\"\");\n    function filterOrders() {\n      // 检查搜索查询是否为空\n      if (!searchQuery.value.trim() && activeTab.value === 'all') {\n        // 如果为空，直接展示所有历史数据\n        filteredOrders.value = orderList.value;\n        return;\n      }\n\n      // 根据关键词过滤历史数据\n      filteredOrders.value = filteredOrders.value.filter(item => item.orderId.toLowerCase().includes(searchQuery.value.toLowerCase()) || item.userName.toLowerCase().includes(searchQuery.value.toLowerCase())).map(item => ({\n        status: item.status,\n        createTime: item.createTime,\n        address: item.address,\n        shopId: item.shopId,\n        userName: item.userName,\n        totalPrice: item.totalPrice,\n        orderId: item.orderId,\n        orderItems: item.orderItems,\n        returnGood: item.returnGood,\n        workUserName: item.workUserName\n      }));\n    }\n    function filterOrdersStatus(status) {\n      if (status === '全部') {\n        filteredOrders.value = orderList.value;\n        return;\n      }\n      filteredOrders.value = orderList.value.filter(item => item.status === status);\n    }\n    function formatDate(dateString) {\n      const date = new Date(dateString);\n      const year = date.getFullYear();\n      const month = String(date.getMonth() + 1).padStart(2, '0'); // 月份需加1，并补零\n      const day = String(date.getDate()).padStart(2, '0'); // 补零\n\n      return `${year}-${month}-${day}`;\n    }\n    function handleToChat(shopId) {\n      router.push('/talkToStore?id=' + shopId);\n    }\n    const dialogVisible = ref(false);\n    const ReturnInfo = ref({});\n    const selectOrderID = ref();\n    const selectStatus = ref();\n    function handleToEvaluate(orderId) {\n      dialogVisible.value = true;\n      ReturnInfo.value = orderList.value.find(item => item.orderId === orderId);\n      selectStatus.value = ReturnInfo.value.status;\n      ReturnInfo.value = ReturnInfo.value.returnGood;\n      selectOrderID.value = orderId;\n    }\n    function handleClose() {\n      dialogVisible.value = false;\n      ReturnInfo.value = {};\n    }\n    async function summitApply(orderId, status) {\n      console.log(orderId, status);\n      try {\n        const response = await axios.post('/api/shop/return/changeReturnStatus', {\n          workUserID: UserForm.value.id,\n          orderId: orderId,\n          status: status\n        }, {\n          headers: {\n            'Content-Type': 'application/json;charset=UTF-8'\n          },\n          withCredentials: true\n        });\n        if (response.data.code === 200) {\n          ElMessage.success(\"操作成功\");\n          dialogVisible.value = false;\n          ReturnInfo.value = {};\n          selectOrderID.value = \"\";\n          await initReturnOrdersInfo();\n        } else {\n          ElMessage.error(\"操作失败，请稍后再试。\");\n        }\n      } catch (err) {\n        ElMessage.error(\"操作失败，请稍后再试。\");\n      }\n    }\n    onMounted(async () => {\n      initUserSession();\n      await initShopInfo();\n      shopSlider.value.setActiveIndex('3-2');\n      storeHeader.value.setTitle(\"退换货管理\");\n      await initReturnOrdersInfo();\n    });\n    const __returned__ = {\n      UserForm,\n      shopForm,\n      initUserSession,\n      initShopInfo,\n      shopSlider,\n      storeHeader,\n      activeTab,\n      orderList,\n      filteredOrders,\n      orderCount,\n      initReturnOrdersInfo,\n      searchQuery,\n      filterOrders,\n      filterOrdersStatus,\n      formatDate,\n      handleToChat,\n      dialogVisible,\n      ReturnInfo,\n      selectOrderID,\n      selectStatus,\n      handleToEvaluate,\n      handleClose,\n      summitApply,\n      ShopSliderComponent,\n      get useUserShop() {\n        return useUserShop;\n      },\n      onMounted,\n      ref,\n      StoreHeaderView,\n      get axios() {\n        return axios;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get router() {\n        return router;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ShopSliderComponent","useUserShop","onMounted","ref","StoreHeaderView","axios","ElMessage","router","UserForm","shopForm","initUserSession","initShopInfo","shopSlider","storeHeader","activeTab","orderList","filteredOrders","orderCount","all","working","initReturnOrdersInfo","response","post","shopID","value","headers","withCredentials","data","console","log","length","filter","order","status","error","err","searchQuery","filterOrders","trim","item","orderId","toLowerCase","includes","userName","map","createTime","address","shopId","totalPrice","orderItems","returnGood","workUserName","filterOrdersStatus","formatDate","dateString","date","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","handleToChat","push","dialogVisible","ReturnInfo","selectOrderID","selectStatus","handleToEvaluate","find","handleClose","summitApply","workUserID","id","code","success","setActiveIndex","setTitle"],"sources":["D:/Cache/Java/shopping/shoppping_c_frontend/src/views/Store/StoreOrderReturnsView.vue"],"sourcesContent":["<template>\r\n  <div class=\"d-flex\" style=\"height: 100vh; overflow: hidden;\">\r\n    <ShopSliderComponent ref=\"shopSlider\" @initApplications=\"initReturnOrdersInfo\"></ShopSliderComponent>\r\n    <div class=\"flex-grow-1 overflow-auto\" style=\"background: #f5f7fa;\">\r\n      <StoreHeaderView ref=\"storeHeader\"></StoreHeaderView>\r\n\r\n      <div class=\"p-4\">\r\n        <el-tabs class=\"demo-tabs\" v-model=\"activeTab\" @tab-click=\"handleTabClick\">\r\n          <el-tab-pane name=\"all\" label=\"全部订单\">\r\n            <template #label>\r\n        <span class=\"custom-tabs-label\" @click=\"filterOrdersStatus('全部')\">\r\n          <span :class=\"{isActive: activeTab==='all'}\"><i\r\n              class=\"bi bi-list order-icon\"></i>所有订单&nbsp;({{ orderCount.all }})</span>\r\n        </span>\r\n            </template>\r\n            <div class=\"search-container\">\r\n              <el-input type=\"text\" v-model=\"searchQuery\" placeholder=\"搜索用户名或者订单号...\" class=\"search-input\"\r\n                        @keyup.enter=\"filterOrders\"/>\r\n              <button @click=\"filterOrders\" class=\"search-button\">\r\n                <a class=\"bi bi-search\" style=\"color:whitesmoke;\"></a>\r\n              </button>\r\n            </div>\r\n            <div class=\"row\"\r\n                 style=\"background-color: #f5f5f5; padding: 10px; margin-bottom: 10px; margin-left: 40px; margin-right: 40px; font-weight: bold;\">\r\n              <span class=\"col-4\">商品</span>\r\n              <span class=\"col-1\">单价</span>\r\n              <span class=\"col-2\">数量</span>\r\n              <span class=\"col-3\">总计</span>\r\n              <span class=\"col-2\">操作</span>\r\n            </div>\r\n            <div class=\"order-list\">\r\n              <div v-for=\"(order) in filteredOrders\" :key=\"order.orderId\" class=\"order-items\">\r\n                <div class=\"order-item-header row\">\r\n                  <div class=\"col-4\" style=\"text-align: left;\">\r\n                    <span style=\"font-weight: bold; font-size: 16px;\">{{ formatDate(order.createTime) }}</span>&nbsp;&nbsp;\r\n                    <span style=\"font-size: 14px;\">订单号：{{ order.orderId }}</span>\r\n                  </div>\r\n                  <div class=\"col-5\" style=\"text-align: left;\">\r\n                    <span style=\"font-size: 14px;\" class=\"ellipsis\">{{ order.userName }}\r\n                    <a class=\"bi bi-chat shake-animation\" style=\"margin-left: 10px; color: #ff5000;\"\r\n                       @click=\"handleToChat(order.shopId)\"></a></span>\r\n                  </div>\r\n                  <div class=\"col-3\">\r\n                    <span style=\"font-size: 14px; font-weight: bold;\">状态：{{ order.status }}</span>\r\n                    <div v-if=\"order.status !== '等待商家退款'\">\r\n                      <span style=\"font-size: 14px; font-weight: bold;\">操作员：{{ order.workUserName }}</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"order-item-body row\">\r\n                  <div class=\"col-8\">\r\n                    <div class=\"row order-item-body-card\" v-for=\"(item,index) in order.orderItems\" :key=\"item.itemId\"\r\n                         style=\"text-align: left;\">\r\n                      <div class=\"col-2\">\r\n                        <img :src=\"item.specimg\" alt=\"\" style=\"width: 100px; height: 100px;\">\r\n                      </div>\r\n                      <div class=\"col-4 row\">\r\n                        <span style=\"font-size: 16px; font-weight: bold; text-align: left;\">{{ item.goodname }}</span>\r\n                        <span style=\"font-size: 12px; text-align: left; color: #555555;\">规格：{{ item.specname }}</span>\r\n                      </div>\r\n                      <div class=\"col-3\"\r\n                           style=\"border-left: 1px solid #e0e0e0; border-right: 1px solid #e0e0e0; align-items: center; justify-content: center; display: flex;\">\r\n                        <span style=\"font-size: 16px; font-weight: bold;\">￥{{ item.specprice }}</span>\r\n                      </div>\r\n                      <div class=\"col-3\"\r\n                           style=\"border-left: 1px solid #e0e0e0; border-right: 1px solid #e0e0e0; align-items: center; justify-content: center; display: flex;\">\r\n                        <span style=\"font-size: 16px; font-weight: bold;\">{{ item.specnumber }}</span>\r\n                      </div>\r\n                      <el-divider v-if=\"index < order.orderItems.length - 1\"></el-divider>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-4 row\"\r\n                       style=\"text-align: center; align-items: center; justify-content: center; display: flex;\">\r\n                    <div\r\n                        style=\"border-right: 1px solid #e0e0e0; height: 100%; align-items: center; justify-content: center; display: flex;\"\r\n                        class=\"col\">\r\n                  <span\r\n                      style=\"font-size: 16px; font-weight: bold;\">总计：￥{{\r\n                      order.totalPrice\r\n                    }}</span>\r\n                    </div>\r\n                    <div class=\"col\">\r\n                      <el-button type=\"success\" size=\"small\" @click=\"handleToEvaluate(order.orderId)\"\r\n                                 class=\"evaluate-button\"\r\n                                 style=\"background-color: transparent; border: none; color: #333333;\">查看申请原因\r\n                      </el-button>\r\n                      <div v-if=\"order.status === '等待商家退款'\">\r\n                        <el-button type=\"success\" size=\"small\" @click=\"summitApply(order.orderId,'success')\">通过申请\r\n                        </el-button>\r\n                        <el-button type=\"danger\" size=\"small\" @click=\"summitApply(order.orderId, 'fail')\">拒绝申请\r\n                        </el-button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </el-tab-pane>\r\n          <el-tab-pane name=\"paid\" label=\"未处理订单\">\r\n            <template #label>\r\n              <span class=\"custom-tabs-label\" @click=\"()=>{filterOrdersStatus('等待商家退款'); activeTab = 'paid';}\">\r\n                <span :class=\"{isActive: activeTab === 'paid'}\"><i\r\n                    class=\"bi bi-truck order-icon\"></i>待处理订单&nbsp;({{ orderCount.working }})</span>\r\n              </span>\r\n            </template>\r\n            <div class=\"search-container\">\r\n              <el-input type=\"text\" v-model=\"searchQuery\" placeholder=\"搜索用户名或者订单号...\" class=\"search-input\"\r\n                        @keyup.enter=\"filterOrders\"/>\r\n              <button @click=\"filterOrders\" class=\"search-button\">\r\n                <a class=\"bi bi-search\" style=\"color:whitesmoke;\"></a>\r\n              </button>\r\n            </div>\r\n            <div class=\"row\"\r\n                 style=\"background-color: #f5f5f5; padding: 10px; margin-bottom: 10px; margin-left: 40px; margin-right: 40px;\">\r\n              <span class=\"col-4\">商品</span>\r\n              <span class=\"col-1\">单价</span>\r\n              <span class=\"col-2\">数量</span>\r\n              <span class=\"col-3\">总计</span>\r\n              <span class=\"col-2\">操作</span>\r\n            </div>\r\n            <div class=\"order-list\">\r\n              <div v-for=\"(order) in filteredOrders\" :key=\"order.orderId\" class=\"order-items\">\r\n                <div class=\"order-item-header row\">\r\n                  <div class=\"col-4\" style=\"text-align: left;\">\r\n                    <span style=\"font-weight: bold; font-size: 16px;\">{{ formatDate(order.createTime) }}</span>&nbsp;&nbsp;\r\n                    <span style=\"font-size: 14px;\">订单号：{{ order.orderId }}</span>\r\n                  </div>\r\n                  <div class=\"col-5\" style=\"text-align: left;\">\r\n                    <span style=\"font-size: 14px;\" class=\"ellipsis\">{{ order.userName }}\r\n                    <a class=\"bi bi-chat shake-animation\" style=\"margin-left: 10px; color: #ff5000;\"\r\n                       @click=\"handleToChat(order.shopId)\"></a></span>\r\n                  </div>\r\n                  <div class=\"col-3\">\r\n                    <span style=\"font-size: 14px; font-weight: bold;\">状态：{{ order.status }}</span>\r\n                  </div>\r\n                </div>\r\n                <div class=\"order-item-body row\">\r\n                  <div class=\"col-8\">\r\n                    <div class=\"row order-item-body-card\" v-for=\"(item,index) in order.orderItems\" :key=\"item.itemId\"\r\n                         style=\"text-align: left;\">\r\n                      <div class=\"col-2\">\r\n                        <img :src=\"item.specimg\" alt=\"\" style=\"width: 100px; height: 100px;\">\r\n                      </div>\r\n                      <div class=\"col-4 row\">\r\n                        <span style=\"font-size: 16px; font-weight: bold; text-align: left;\">{{ item.goodname }}</span>\r\n                        <span style=\"font-size: 12px; text-align: left; color: #555555;\">规格：{{ item.specname }}</span>\r\n                      </div>\r\n                      <div class=\"col-3\"\r\n                           style=\"border-left: 1px solid #e0e0e0; border-right: 1px solid #e0e0e0; align-items: center; justify-content: center; display: flex;\">\r\n                        <span style=\"font-size: 16px; font-weight: bold;\">￥{{ item.specprice }}</span>\r\n                      </div>\r\n                      <div class=\"col-3\"\r\n                           style=\"border-left: 1px solid #e0e0e0; border-right: 1px solid #e0e0e0; align-items: center; justify-content: center; display: flex;\">\r\n                        <span style=\"font-size: 16px; font-weight: bold;\">{{ item.specnumber }}</span>\r\n                      </div>\r\n                      <el-divider v-if=\"index < order.orderItems.length - 1\"></el-divider>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-4 row\"\r\n                       style=\"text-align: center; align-items: center; justify-content: center; display: flex;\">\r\n                    <div\r\n                        style=\"border-right: 1px solid #e0e0e0; height: 100%; align-items: center; justify-content: center; display: flex;\"\r\n                        class=\"col\">\r\n                  <span\r\n                      style=\"font-size: 16px; font-weight: bold;\">总计：￥{{\r\n                      order.totalPrice\r\n                    }}</span>\r\n                    </div>\r\n                    <div class=\"col\">\r\n                      <el-button type=\"success\" size=\"small\" @click=\"handleToEvaluate(order.orderId)\"\r\n                                 class=\"evaluate-button\"\r\n                                 style=\"background-color: transparent; border: none; color: #333333;\">查看申请原因\r\n                      </el-button>\r\n                      <div>\r\n                        <el-button type=\"success\" size=\"small\" @click=\"summitApply(order.orderId,'success')\">通过申请\r\n                        </el-button>\r\n                        <el-button type=\"danger\" size=\"small\" @click=\"summitApply(order.orderId, 'fail')\">拒绝申请\r\n                        </el-button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </el-tab-pane>\r\n        </el-tabs>\r\n      </div>\r\n\r\n      <el-dialog\r\n          title=\"查看申请原因\"\r\n          v-model=\"dialogVisible\"\r\n          width=\"40%\"\r\n          :before-close=\"handleClose\">\r\n        <div style=\"text-align: center;\">\r\n          <p style=\"font-size: 16px; margin-top: 20px;\">退换货申请原因：{{ ReturnInfo.text }}</p>\r\n          <div v-for=\"(image,index) in ReturnInfo.images\" :key=\"index\">\r\n            <el-image\r\n                style=\"width: 100px; height: 100px\"\r\n                :src=\"image\"\r\n                :zoom-rate=\"1.2\"\r\n                :max-scale=\"7\"\r\n                :min-scale=\"0.2\"\r\n                :preview-src-list=\"[image]\"\r\n                :initial-index=\"4\"\r\n                fit=\"cover\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <template #footer>\r\n          <el-button type=\"success\" size=\"small\" @click=\"summitApply(selectOrderID,'success')\"\r\n                     v-if=\"selectStatus === '等待商家退款'\">通过申请\r\n          </el-button>\r\n          <el-button type=\"danger\" size=\"small\" @click=\"summitApply(selectOrderID, 'fail')\"\r\n                     v-if=\"selectStatus === '等待商家退款'\">拒绝申请\r\n          </el-button>\r\n          <el-button type=\"primary\" size=\"small\" @click=\"handleClose\">关闭</el-button>\r\n        </template>\r\n      </el-dialog>\r\n\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport ShopSliderComponent from \"@/components/ShopSliderComponent.vue\";\r\nimport {useUserShop} from \"@/composables/useShopUser\";\r\nimport {onMounted, ref} from \"vue\";\r\nimport StoreHeaderView from \"@/components/StoreHeaderView.vue\";\r\nimport axios from \"axios\";\r\nimport {ElMessage} from \"element-plus\";\r\nimport router from \"@/router\";\r\n\r\nconst {UserForm, shopForm, initUserSession, initShopInfo} = useUserShop();\r\nconst shopSlider = ref(null);\r\nconst storeHeader = ref(null);\r\n\r\nconst activeTab = ref('all');\r\nconst orderList = ref([]);\r\nconst filteredOrders = ref([]);\r\nconst orderCount = ref({\r\n  all: 0,\r\n  working: 0,\r\n});\r\n\r\nasync function initReturnOrdersInfo() {\r\n  try {\r\n    const response = await axios.post('/api/shop/return/getShopReturnInfo', {\r\n      shopID: shopForm.value.shopID\r\n    }, {\r\n      headers: {\r\n        'Content-Type': 'application/json;charset=UTF-8'\r\n      },\r\n      withCredentials: true\r\n    })\r\n    if (response.data !== null) {\r\n      orderList.value = response.data;\r\n      filteredOrders.value = orderList.value;\r\n      console.log(orderList.value);\r\n      orderCount.value.all = orderList.value.length;\r\n      orderCount.value.working = orderList.value.filter(order => order.status === '等待商家退款').length;\r\n    } else\r\n      ElMessage.error(\"获取订单信息失败，请稍后再试。\")\r\n  } catch (err) {\r\n    ElMessage.error(\"获取订单信息失败，请稍后再试。\")\r\n  }\r\n}\r\n\r\nconst searchQuery = ref(\"\");\r\n\r\nfunction filterOrders() {\r\n  // 检查搜索查询是否为空\r\n  if (!searchQuery.value.trim() && activeTab.value === 'all') {\r\n    // 如果为空，直接展示所有历史数据\r\n    filteredOrders.value = orderList.value;\r\n    return;\r\n  }\r\n\r\n  // 根据关键词过滤历史数据\r\n  filteredOrders.value = filteredOrders.value\r\n      .filter(item =>\r\n          item.orderId.toLowerCase().includes(searchQuery.value.toLowerCase()) ||\r\n          item.userName.toLowerCase().includes(searchQuery.value.toLowerCase())\r\n      )\r\n      .map(item => ({\r\n        status: item.status,\r\n        createTime: item.createTime,\r\n        address: item.address,\r\n        shopId: item.shopId,\r\n        userName: item.userName,\r\n        totalPrice: item.totalPrice,\r\n        orderId: item.orderId,\r\n        orderItems: item.orderItems,\r\n        returnGood: item.returnGood,\r\n        workUserName: item.workUserName,\r\n      }));\r\n}\r\n\r\nfunction filterOrdersStatus(status) {\r\n  if (status === '全部') {\r\n    filteredOrders.value = orderList.value;\r\n    return;\r\n  }\r\n  filteredOrders.value = orderList.value.filter(item => item.status === status);\r\n}\r\n\r\nfunction formatDate(dateString) {\r\n  const date = new Date(dateString);\r\n  const year = date.getFullYear();\r\n  const month = String(date.getMonth() + 1).padStart(2, '0'); // 月份需加1，并补零\r\n  const day = String(date.getDate()).padStart(2, '0'); // 补零\r\n\r\n  return `${year}-${month}-${day}`;\r\n}\r\n\r\nfunction handleToChat(shopId) {\r\n  router.push('/talkToStore?id=' + shopId);\r\n}\r\n\r\nconst dialogVisible = ref(false);\r\nconst ReturnInfo = ref({});\r\nconst selectOrderID = ref();\r\nconst selectStatus = ref();\r\n\r\nfunction handleToEvaluate(orderId) {\r\n  dialogVisible.value = true;\r\n  ReturnInfo.value = orderList.value.find(item => item.orderId === orderId);\r\n  selectStatus.value = ReturnInfo.value.status;\r\n  ReturnInfo.value = ReturnInfo.value.returnGood;\r\n  selectOrderID.value = orderId;\r\n}\r\n\r\nfunction handleClose() {\r\n  dialogVisible.value = false;\r\n  ReturnInfo.value = {};\r\n}\r\n\r\nasync function summitApply(orderId, status) {\r\n  console.log(orderId, status);\r\n  try {\r\n    const response = await axios.post('/api/shop/return/changeReturnStatus', {\r\n      workUserID: UserForm.value.id,\r\n      orderId: orderId,\r\n      status: status\r\n    }, {\r\n      headers: {\r\n        'Content-Type': 'application/json;charset=UTF-8'\r\n      },\r\n      withCredentials: true\r\n    });\r\n    if (response.data.code === 200) {\r\n      ElMessage.success(\"操作成功\");\r\n      dialogVisible.value = false;\r\n      ReturnInfo.value = {};\r\n      selectOrderID.value = \"\";\r\n      await initReturnOrdersInfo();\r\n    } else {\r\n      ElMessage.error(\"操作失败，请稍后再试。\");\r\n    }\r\n  } catch (err) {\r\n    ElMessage.error(\"操作失败，请稍后再试。\");\r\n  }\r\n}\r\n\r\nonMounted(async () => {\r\n  initUserSession();\r\n  await initShopInfo();\r\n  shopSlider.value.setActiveIndex('3-2')\r\n  storeHeader.value.setTitle(\"退换货管理\")\r\n  await initReturnOrdersInfo();\r\n});\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.demo-tabs > .el-tabs__content {\r\n  padding: 32px;\r\n  color: #ff5000;\r\n  font-size: 32px;\r\n  font-weight: 600;\r\n  background-color: #f5f7fa; /* 添加背景色 */\r\n  border-radius: 8px; /* 添加圆角效果 */\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1); /* 添加阴影 */\r\n}\r\n\r\n\r\n.demo-tabs .order-icon {\r\n  transition: transform 0.3s ease-in-out;\r\n  margin: 10px;\r\n}\r\n\r\n.active {\r\n  .span {\r\n    color: #e02020;\r\n    font-weight: bold;\r\n  }\r\n\r\n  .order-icon {\r\n    transform: rotate(180deg);\r\n  }\r\n}\r\n\r\n.demo-tabs .custom-tabs-label span {\r\n  vertical-align: middle;\r\n  margin-left: 4px;\r\n  font-size: 20px;\r\n  color: #4c4c4c; /* 改变字体颜色 */\r\n  font-weight: 500; /* 修改字体粗细 */\r\n\r\n  &.isActive {\r\n    color: #e02020;\r\n  }\r\n\r\n  &:hover {\r\n    color: #e02020;\r\n  }\r\n}\r\n\r\n.search-container {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n  padding-right: 20px;\r\n\r\n  .search-input {\r\n    padding: 10px;\r\n    font-size: 16px;\r\n    border: 2px solid #ccc;\r\n    border-radius: 8px 0 0 8px;\r\n    outline: none;\r\n    width: 200px;\r\n    border-right: none;\r\n  }\r\n\r\n  .search-input:hover {\r\n    border-color: #e02020;\r\n  }\r\n\r\n  .search-button {\r\n    padding: 10px 20px;\r\n    background-color: #e02020;\r\n    color: white;\r\n    font-size: 16px;\r\n    border: 2px solid #e02020;\r\n    border-radius: 0 8px 8px 0;\r\n    cursor: pointer;\r\n    font-weight: bold;\r\n  }\r\n\r\n  .search-button:hover {\r\n    background-color: #c21a1a;\r\n    border-color: #c21a1a;\r\n  }\r\n}\r\n\r\n.order-item-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n  font-size: 18px;\r\n  color: #4c4c4c; /* 改变字体颜色 */\r\n  font-weight: 500; /* 修改字体粗细 */\r\n}\r\n\r\n.order-list {\r\n  margin-top: 20px;\r\n\r\n  .order-items {\r\n    margin-bottom: 20px;\r\n    margin-left: 40px;\r\n    margin-right: 40px;\r\n    padding: 10px;\r\n    background-color: #e0e0e0; /* 添加背景色 */\r\n    border-radius: 8px; /* 添加圆角效果 */\r\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1); /* 添加阴影 */\r\n\r\n    .order-item-header {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      margin-bottom: 10px;\r\n      font-size: 18px;\r\n      color: #4c4c4c; /* 改变字体颜色 */\r\n      font-weight: 500; /* 修改字体粗细 */\r\n\r\n      .ellipsis:hover {\r\n        color: #e02020;\r\n      }\r\n\r\n      @keyframes shake {\r\n        0% {\r\n          transform: translateY(0);\r\n        }\r\n        25% {\r\n          transform: translateY(-5px);\r\n        }\r\n        50% {\r\n          transform: translateY(0);\r\n        }\r\n        75% {\r\n          transform: translateY(5px);\r\n        }\r\n        100% {\r\n          transform: translateY(0);\r\n        }\r\n      }\r\n\r\n      .shake-animation {\r\n        display: inline-block; /* 保持元素的行内块布局 */\r\n        animation: shake 1s infinite; /* 动画持续1秒，无限循环 */\r\n      }\r\n    }\r\n\r\n    .order-item-body {\r\n      background-color: #f5f7fa;\r\n    }\r\n\r\n    .order-item-body-card {\r\n      padding: 5px;\r\n\r\n      img {\r\n        width: 100px;\r\n        height: 100px;\r\n        border-radius: 8px;\r\n      }\r\n    }\r\n  }\r\n\r\n  .el-button.evaluate-button {\r\n    font-size: 14px;\r\n\r\n    &:hover {\r\n      color: #e02020;\r\n    }\r\n  }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
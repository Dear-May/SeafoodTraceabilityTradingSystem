{"ast":null,"code":"import HeaderComponent from \"@/components/HeaderComponent.vue\";\nimport RightWidgetComponent from \"@/components/RightWidgetComponent.vue\";\nimport FooterComponent from \"@/components/FooterComponent.vue\";\nimport useUser from \"@/composables/useUser\";\nimport { onMounted } from \"vue\";\nexport default {\n  __name: 'LiveView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const {\n      UserInfoForm,\n      initUserSession\n    } = useUser();\n    async function play() {\n      const httpURL = \"http://localhost:1985/rtc/v1/play/\";\n      const webRTCURL = \"webRTC://localhost/live/888\";\n      const localPc = new RTCPeerConnection();\n      const stream = new MediaStream();\n      const videoElement2 = document.querySelector(\"#video2\");\n      localPc.ontrack = event => {\n        stream.addTrack(event.track);\n        console.log(event.track);\n        videoElement2.srcObject = stream;\n      };\n      localPc.addTransceiver(\"audio\", {\n        direction: \"recvonly\"\n      });\n      localPc.addTransceiver(\"video\", {\n        direction: \"recvonly\"\n      });\n      const offer = await localPc.createOffer();\n      await localPc.setLocalDescription(offer);\n      const data = {\n        \"api\": httpURL,\n        \"streamurl\": webRTCURL,\n        \"sdp\": offer.sdp\n      };\n      httpApi(httpURL, data).then(async data => {\n        console.log(\"answer\", data);\n        await localPc.setRemoteDescription(new RTCSessionDescription({\n          type: 'answer',\n          sdp: data.sdp\n        }));\n      }).catch(data => {\n        if (data.code === 400) {\n          console.log(\"SDP交换失败\");\n        }\n      });\n    }\n    function httpApi(httpURL, data) {\n      return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.open('POST', httpURL, true);\n        xhr.setRequestHeader('Content-type', 'application/json');\n        xhr.send(JSON.stringify(data));\n        xhr.onload = () => {\n          if (xhr.readyState !== xhr.DONE) reject(xhr);\n          if (xhr.status !== 200 && xhr.status !== 201) reject(xhr);\n          const responseData = JSON.parse(xhr.responseText);\n          if (responseData.code === 0) {\n            resolve(responseData);\n          } else {\n            reject(responseData);\n          }\n        };\n      });\n    }\n    const onlineUsers = [{\n      name: \"测试a\",\n      avatar: \"https://via.placeholder.com/40\"\n    }, {\n      name: \"测试b\",\n      avatar: \"https://via.placeholder.com/40\"\n    }];\n    const chatMessages = [{\n      sender: \"测试a\",\n      content: \"你好啊\",\n      avatar: \"https://via.placeholder.com/40\"\n    }, {\n      sender: \"测试b\",\n      content: \"正在看直播~\",\n      avatar: \"https://via.placeholder.com/40\"\n    }];\n    onMounted(async () => {\n      initUserSession();\n      await play();\n    });\n    const __returned__ = {\n      UserInfoForm,\n      initUserSession,\n      play,\n      httpApi,\n      onlineUsers,\n      chatMessages,\n      HeaderComponent,\n      RightWidgetComponent,\n      FooterComponent,\n      get useUser() {\n        return useUser;\n      },\n      onMounted\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["HeaderComponent","RightWidgetComponent","FooterComponent","useUser","onMounted","UserInfoForm","initUserSession","play","httpURL","webRTCURL","localPc","RTCPeerConnection","stream","MediaStream","videoElement2","document","querySelector","ontrack","event","addTrack","track","console","log","srcObject","addTransceiver","direction","offer","createOffer","setLocalDescription","data","sdp","httpApi","then","setRemoteDescription","RTCSessionDescription","type","catch","code","Promise","resolve","reject","xhr","XMLHttpRequest","open","setRequestHeader","send","JSON","stringify","onload","readyState","DONE","status","responseData","parse","responseText","onlineUsers","name","avatar","chatMessages","sender","content"],"sources":["D:/Cache/Java/shopping/shoppping_c_frontend/src/views/LiveView.vue"],"sourcesContent":["<template>\r\n  <div class=\"my-haichao-page\">\r\n    <HeaderComponent/>\r\n    <div class=\"live-stream-container\">\r\n      <!-- 头部信息 -->\r\n      <div class=\"header bg-light d-flex align-items-center p-3 shadow-sm row\">\r\n        <div class=\"col-8\">\r\n          <el-button\r\n              ref=\"button_one\"\r\n              @click=\"publish\"\r\n              type=\"primary\"\r\n              size=\"large\"\r\n              :disabled=\"isPublishing\"\r\n          >\r\n            开始直播\r\n          </el-button>\r\n          <el-button\r\n              ref=\"button_two\"\r\n              @click=\"close\"\r\n              type=\"danger\"\r\n              size=\"large\"\r\n              :disabled=\"!isPublishing\"\r\n          >\r\n            停止直播\r\n          </el-button>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 主体内容 -->\r\n      <div class=\"content-container d-flex\">\r\n        <!-- 视频播放区 -->\r\n        <div class=\"video-section flex-grow-1\">\r\n          <video id=\"video2\" ref=\"video2\" autoplay\r\n                 style=\"width: 100%; height: 100%; object-fit: cover;\"></video>\r\n        </div>\r\n\r\n        <!-- 在线用户和聊天区域 -->\r\n        <div class=\"side-panel bg-light p-3\">\r\n          <!-- 在线用户列表 -->\r\n          <div class=\"online-users mb-4\">\r\n            <h6 class=\"text-danger\">在线人员 ({{ onlineUsers.length }})</h6>\r\n            <ul class=\"list-unstyled\">\r\n              <li\r\n                  v-for=\"(user, index) in onlineUsers\"\r\n                  :key=\"index\"\r\n                  class=\"d-flex align-items-center mb-2\"\r\n              >\r\n                <img\r\n                    class=\"user-avatar-sm rounded-circle me-2\"\r\n                    :src=\"user.avatar\"\r\n                    alt=\"用户头像\"\r\n                />\r\n                <span>{{ user.name }}</span>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n\r\n          <!-- 聊天区 -->\r\n          <div class=\"chat-section\">\r\n            <h6 class=\"text-primary\">聊天区</h6>\r\n            <div class=\"chat-messages border rounded p-2 mb-3\">\r\n              <div\r\n                  v-for=\"(message, index) in chatMessages\"\r\n                  :key=\"index\"\r\n                  class=\"d-flex align-items-start mb-2\"\r\n              >\r\n                <img\r\n                    class=\"user-avatar-sm rounded-circle me-2\"\r\n                    :src=\"message.avatar\"\r\n                    alt=\"用户头像\"\r\n                />\r\n                <div>\r\n                  <p class=\"mb-1\"><strong>{{ message.sender }}</strong></p>\r\n                  <p class=\"text-muted mb-0\">{{ message.content }}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- 聊天输入框 -->\r\n            <div class=\"input-group\">\r\n              <input\r\n                  type=\"text\"\r\n                  v-model=\"chatInput\"\r\n                  class=\"form-control\"\r\n                  placeholder=\"输入50字以内聊天内容~\"\r\n                  maxlength=\"50\"\r\n              />\r\n              <button class=\"btn btn-danger\" @click=\"sendMessage\">发送</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <FooterComponent/>\r\n  <RightWidgetComponent></RightWidgetComponent>\r\n</template>\r\n\r\n<script setup>\r\nimport HeaderComponent from \"@/components/HeaderComponent.vue\";\r\nimport RightWidgetComponent from \"@/components/RightWidgetComponent.vue\";\r\nimport FooterComponent from \"@/components/FooterComponent.vue\";\r\nimport useUser from \"@/composables/useUser\";\r\nimport {onMounted} from \"vue\";\r\n\r\nconst {UserInfoForm, initUserSession} = useUser()\r\n\r\nasync function play() {\r\n  const httpURL = \"http://localhost:1985/rtc/v1/play/\";\r\n  const webRTCURL = \"webRTC://localhost/live/888\";\r\n  const localPc = new RTCPeerConnection();\r\n  const stream = new MediaStream();\r\n  const videoElement2 = document.querySelector(\"#video2\");\r\n\r\n  localPc.ontrack = (event) => {\r\n    stream.addTrack(event.track);\r\n    console.log(event.track);\r\n    videoElement2.srcObject = stream;\r\n  };\r\n\r\n  localPc.addTransceiver(\"audio\", {direction: \"recvonly\"});\r\n  localPc.addTransceiver(\"video\", {direction: \"recvonly\"});\r\n\r\n  const offer = await localPc.createOffer();\r\n  await localPc.setLocalDescription(offer);\r\n  const data = {\r\n    \"api\": httpURL,\r\n    \"streamurl\": webRTCURL,\r\n    \"sdp\": offer.sdp\r\n  };\r\n\r\n  httpApi(httpURL, data).then(async (data) => {\r\n    console.log(\"answer\", data);\r\n    await localPc.setRemoteDescription(new RTCSessionDescription({type: 'answer', sdp: data.sdp}));\r\n  }).catch((data) => {\r\n    if (data.code === 400) {\r\n      console.log(\"SDP交换失败\");\r\n    }\r\n  });\r\n}\r\n\r\nfunction httpApi(httpURL, data) {\r\n  return new Promise((resolve, reject) => {\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.open('POST', httpURL, true);\r\n    xhr.setRequestHeader('Content-type', 'application/json');\r\n    xhr.send(JSON.stringify(data));\r\n    xhr.onload = () => {\r\n      if (xhr.readyState !== xhr.DONE) reject(xhr);\r\n      if (xhr.status !== 200 && xhr.status !== 201) reject(xhr);\r\n      const responseData = JSON.parse(xhr.responseText);\r\n      if (responseData.code === 0) {\r\n        resolve(responseData);\r\n      } else {\r\n        reject(responseData);\r\n      }\r\n    };\r\n  });\r\n}\r\n\r\nconst onlineUsers = [\r\n  {name: \"测试a\", avatar: \"https://via.placeholder.com/40\"},\r\n  {name: \"测试b\", avatar: \"https://via.placeholder.com/40\"},\r\n];\r\n\r\nconst chatMessages = [\r\n  {sender: \"测试a\", content: \"你好啊\", avatar: \"https://via.placeholder.com/40\"},\r\n  {sender: \"测试b\", content: \"正在看直播~\", avatar: \"https://via.placeholder.com/40\"},\r\n];\r\n\r\nonMounted(async () => {\r\n  initUserSession()\r\n  await play()\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.live-stream-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 80vh;\r\n  margin-top: 80px;\r\n}\r\n\r\n/* 头部信息样式 */\r\n.header {\r\n  display: flex;\r\n  align-items: center;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\n.user-avatar {\r\n  width: 50px;\r\n  height: 50px;\r\n}\r\n\r\n/* 主体内容布局 */\r\n.content-container {\r\n  flex: 1;\r\n  display: flex;\r\n  overflow: hidden;\r\n}\r\n\r\n/* 视频区域 */\r\n.video-section {\r\n  flex-grow: 1;\r\n  background: #000;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.video-player {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n/* 在线用户和聊天区域 */\r\n.side-panel {\r\n  width: 300px;\r\n  border-left: 1px solid #ddd;\r\n  overflow-y: auto;\r\n}\r\n\r\n.online-users img.user-avatar-sm {\r\n  width: 30px;\r\n  height: 30px;\r\n}\r\n\r\n.chat-section .chat-messages {\r\n  max-height: 300px;\r\n  overflow-y: auto;\r\n}\r\n\r\n.chat-section .input-group {\r\n  display: flex;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
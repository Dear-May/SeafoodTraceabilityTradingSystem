{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { computed, onMounted, ref, watch } from 'vue';\nimport router from \"@/router\";\nimport { useThemeStore } from '@/store/themeStore';\nimport { ElMessage } from 'element-plus';\nimport axios from 'axios';\nimport Vcode from \"vue3-puzzle-vcode\";\nimport FooterLoginComponent from \"@/components/FooterLoginComponent.vue\";\nexport default {\n  __name: 'AccessLoginView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const themeStore = useThemeStore();\n    const isNightMode = computed(() => themeStore.isNightMode);\n    const showBindForm = ref(true);\n    const showRegisterForm = ref(false);\n    const loginMethod = ref('password');\n    const bindForm = ref({\n      username: '',\n      password: '',\n      source: ' ',\n      thirdID: '',\n      thirdName: ''\n    });\n    const smsForm = ref({\n      phone: '',\n      code: ''\n    });\n    const registerForm = ref({\n      username: '',\n      phone: '',\n      email: '',\n      password: ''\n    });\n    const userInfo = ref(null);\n    const loginFormRef = ref(null);\n    const smsFormRef = ref(null);\n    const isEditingPhone = ref(false);\n    const password = ref('');\n    const passwordStrength = ref('弱');\n    const confirmPassword = ref('');\n    const verify = ref(false);\n    const canCompleteRegistration = computed(() => {\n      return password.value === confirmPassword.value && passwordStrength.value !== '弱';\n    });\n    watch(isNightMode, newVal => {\n      if (newVal) {\n        document.body.classList.add('night-mode');\n      } else {\n        document.body.classList.remove('night-mode');\n      }\n    });\n    function showLogin() {\n      showBindForm.value = true;\n      showRegisterForm.value = false;\n      isEditingPhone.value = false;\n      bindForm.value.username = '';\n      smsForm.value.phone = '';\n      smsForm.value.code = '';\n      loginMethod.value = 'password';\n    }\n    function showRegister() {\n      showBindForm.value = false;\n      showRegisterForm.value = true;\n      bindForm.value.username = '';\n      bindForm.value.password = '';\n      smsForm.value.phone = '';\n      smsForm.value.code = '';\n      loginMethod.value = 'password';\n    }\n    function passwordLogin() {\n      loginMethod.value = 'password';\n      smsForm.value.phone = '';\n      smsForm.value.code = '';\n    }\n    function smsLogin() {\n      loginMethod.value = 'sms';\n      bindForm.value.username = '';\n      bindForm.value.password = '';\n    }\n\n    // 验证码部分\n    const wait = ref(120);\n    const isButtonDisabled = ref(false);\n    const buttonText = ref('获取验证码');\n    const isShow = ref(false);\n    watch(wait, newValue => {\n      if (newValue === 0) {\n        isButtonDisabled.value = false;\n        buttonText.value = '获取验证码';\n        wait.value = 60; // 重置计时器\n      } else {\n        buttonText.value = `${newValue}秒后可以重新发送`;\n      }\n    });\n\n    // 人机验证部分\n    const onShow = () => {\n      isShow.value = true;\n    };\n    const onClose = () => {\n      isShow.value = false;\n    };\n    const onSuccess = () => {\n      onClose(); // 验证成功，需要手动关闭模态框\n      getMsgNum(); // 获取验证码\n    };\n\n    // 获取验证码\n    async function getMsgNum() {\n      setButtonStatus(); // 设置按钮状态\n      try {\n        const response = await axios.post('/api/sms/smsXxs', {\n          phoneNumber: smsForm.value.phone\n        }, {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          withCredentials: true\n        });\n        if (response.data.isOk === \"OK\") {\n          ElMessage.success('验证码已发送到您的手机，请注意查收！');\n        } else {\n          ElMessage.error('验证码发送失败，请稍后再试！');\n        }\n      } catch (error) {\n        console.error(\"发送验证码错误:\", error);\n      }\n    }\n\n    // 设置按钮状态\n    function setButtonStatus() {\n      isButtonDisabled.value = true;\n      wait.value = wait.value > 0 ? wait.value : 120; // 确保初始值有效\n      countdown();\n    }\n\n    // 计时功能\n    function countdown() {\n      if (wait.value > 0) {\n        setTimeout(() => {\n          wait.value -= 1;\n          countdown();\n        }, 1000);\n      }\n    }\n    async function handleLogin() {\n      try {\n        await loginFormRef.value.validate();\n        const response = await axios.post('/api/user/login', {\n          username: bindForm.value.username,\n          password: bindForm.value.password\n        }, {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          withCredentials: true\n        });\n        if (response.data.code === 200) {\n          console.log(bindForm.value);\n          await bindAccount();\n        } else if (response.data.code === 400) {\n          ElMessage.error('用户名或密码错误！请重新登录！');\n          bindForm.value.username = '';\n          bindForm.value.password = '';\n        } else if (response.data.code === 401) {\n          ElMessage.error('用户名不存在！请重新登录！');\n          bindForm.value.username = '';\n          bindForm.value.password = '';\n        }\n      } catch (error) {\n        console.error('Error during login:', error.message);\n      }\n    }\n    async function SelectPhone(phone) {\n      try {\n        const response = await axios.post('/api/user/register/selectPhone', {\n          phone: phone\n        }, {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          withCredentials: true\n        });\n        return response.data.code === 200;\n      } catch (error) {\n        ElMessage.error('服务器错误，请稍后再试！');\n        return false;\n      }\n    }\n    async function CheckPhoneNumber() {\n      if (smsForm.value.phone.length === 0) {\n        ElMessage.error('请输入手机号码！');\n        return;\n      } else if (!/^1[3-9]\\d{9}$/.test(smsForm.value.phone)) {\n        ElMessage.error('请输入正确的手机号码！');\n        return;\n      }\n      if ((await SelectPhone(smsForm.value.phone)) === true) {\n        onShow();\n      } else {\n        ElMessage.error('手机号已被占用，请重新输入！');\n      }\n    }\n    async function validateNum() {\n      if (smsForm.value.phone.length === 0 || smsForm.value.phone.length === 0) {\n        ElMessage.error('请输入手机号码和验证码！');\n        return;\n      }\n      const data = {\n        verifyCode: smsForm.value.code,\n        phone: smsForm.value.phone\n      };\n      try {\n        await smsFormRef.value.validate();\n        const response = await axios.post('/api/sms/validateNum', data, {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          withCredentials: true\n        });\n        console.log(response.data);\n        if (response.data.result === 404) {\n          ElMessage.error('过期验证码已失效!');\n        } else if (response.data.result === 500) {\n          ElMessage.error('验证码错误，请重新输入！');\n        } else if (response.data.result === 403) {\n          if (showBindForm.value === true) {\n            ElMessage.error('用户不存在，请注册账号！');\n          } else if (showRegisterForm.value === true) {\n            ElMessage.success('验证码验证成功');\n            registerForm.value.phone = smsForm.value.phone;\n            registerForm.value.username = \"user\" + Math.floor(Math.random() * 10000);\n            bindForm.value.username = smsForm.value.phone;\n            isEditingPhone.value = true;\n            verify.value = true;\n          }\n        } else {\n          if (showBindForm.value === true) {\n            bindForm.value.username = smsForm.value.phone;\n            await bindAccount();\n          }\n        }\n      } catch (error) {\n        console.error(\"验证错误:\", error);\n      }\n    }\n    async function getUserBaseInfo(username) {\n      try {\n        const response = await axios.post('/api/user/getUserBaseInfo', {\n          username: username\n        }, {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          withCredentials: true\n        });\n        if (response.data.id !== null) {\n          sessionStorage.setItem('userBaseInfo', JSON.stringify(response.data)); // 存储用户信息到sessionStorage\n          document.cookie = `userBaseInfo=${encodeURIComponent(JSON.stringify(response.data))}; path=/ max-age=604800`; // 存储用户信息到cookie\n        }\n      } catch (err) {\n        ElMessage.error('获取用户信息失败，请稍后再试！');\n      }\n    }\n    const bindAccount = async () => {\n      try {\n        const response = await axios.post('/api/user/bindAccount', bindForm.value, {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          withCredentials: true\n        });\n        if (response.data.code === 200) {\n          ElMessage.success('账号绑定成功');\n          setTimeout(async () => {\n            await getUserBaseInfo(bindForm.value.username);\n            await router.push('/');\n          }, 1500);\n        } else {\n          ElMessage.error('绑定失败，请检查您的信息');\n        }\n      } catch (error) {\n        ElMessage.error('绑定账号时出现错误');\n        console.error(error);\n      }\n    };\n    function checkPasswordStrength() {\n      const passwordValue = password.value;\n      let strength = '弱';\n\n      // 判断密码长度\n      const lengthCriteria = passwordValue.length >= 8;\n      const hasUpperCase = /[A-Z]/.test(passwordValue);\n      const hasLowerCase = /[a-z]/.test(passwordValue);\n      const hasNumbers = /\\d/.test(passwordValue);\n      const hasSpecialChars = /[!@#$%^&*(),.?\":{}|<>]/.test(passwordValue);\n\n      // 强度等级判断\n      const criteriaMet = [lengthCriteria, hasUpperCase, hasLowerCase, hasNumbers, hasSpecialChars].filter(Boolean).length;\n      if (criteriaMet >= 4) {\n        strength = '高';\n      } else if (criteriaMet >= 2) {\n        strength = '中';\n      }\n      passwordStrength.value = strength;\n    }\n    const passwordStrengthClass = computed(() => {\n      switch (passwordStrength.value) {\n        case '高':\n          return 'high-strength';\n        case '中':\n          return 'medium-strength';\n        case '弱':\n        default:\n          return 'low-strength';\n      }\n    });\n    function completeRegistration() {\n      if (password.value === confirmPassword.value && passwordStrength.value !== '弱') {\n        registerForm.value.password = password.value;\n        console.log(registerForm.value);\n        axios.post('/api/user/register', registerForm.value, {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          withCredentials: true\n        }).then(async response => {\n          if (response.data.code === 200) {\n            ElMessage.success('注册成功');\n            await bindAccount();\n          } else {\n            ElMessage.error('注册失败，请稍后再试！');\n          }\n        }).catch(error => {\n          console.error('Error during registration:', error.message);\n          ElMessage.error('注册失败，请稍后再试！');\n        });\n      } else {\n        ElMessage.error('密码不符合要求，请重新输入！');\n      }\n    }\n    onMounted(async () => {\n      try {\n        const urlParams = new URLSearchParams(window.location.search);\n        const token = urlParams.get('token');\n        if (token) {\n          axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n          const response = await axios.post('/api/callback/ThirdLogin/userInfo', {}, {\n            withCredentials: true\n          });\n          if (response.data && response.data.name) {\n            userInfo.value = response.data;\n            ElMessage.success(`欢迎回来, ${userInfo.value.name}`);\n            bindForm.value.source = userInfo.value.source;\n            bindForm.value.thirdID = userInfo.value.id;\n            bindForm.value.thirdName = userInfo.value.name;\n          }\n          urlParams.delete('token');\n          const newUrl = urlParams.toString() ? `${window.location.pathname}?${urlParams.toString()}` : window.location.pathname;\n          window.history.replaceState(null, '', newUrl);\n        } else {\n          await router.push('/login');\n        }\n      } catch (error) {\n        console.error('获取用户信息失败:', error);\n      }\n    });\n    const handleHome = async () => {\n      await router.push('/');\n    };\n    function handleForgotPassword() {\n      router.push('/forgotPassword');\n    }\n    const __returned__ = {\n      themeStore,\n      isNightMode,\n      showBindForm,\n      showRegisterForm,\n      loginMethod,\n      bindForm,\n      smsForm,\n      registerForm,\n      userInfo,\n      loginFormRef,\n      smsFormRef,\n      isEditingPhone,\n      password,\n      passwordStrength,\n      confirmPassword,\n      verify,\n      canCompleteRegistration,\n      showLogin,\n      showRegister,\n      passwordLogin,\n      smsLogin,\n      wait,\n      isButtonDisabled,\n      buttonText,\n      isShow,\n      onShow,\n      onClose,\n      onSuccess,\n      getMsgNum,\n      setButtonStatus,\n      countdown,\n      handleLogin,\n      SelectPhone,\n      CheckPhoneNumber,\n      validateNum,\n      getUserBaseInfo,\n      bindAccount,\n      checkPasswordStrength,\n      passwordStrengthClass,\n      completeRegistration,\n      handleHome,\n      handleForgotPassword,\n      computed,\n      onMounted,\n      ref,\n      watch,\n      get router() {\n        return router;\n      },\n      get useThemeStore() {\n        return useThemeStore;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get axios() {\n        return axios;\n      },\n      get Vcode() {\n        return Vcode;\n      },\n      FooterLoginComponent\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["computed","onMounted","ref","watch","router","useThemeStore","ElMessage","axios","Vcode","FooterLoginComponent","themeStore","isNightMode","showBindForm","showRegisterForm","loginMethod","bindForm","username","password","source","thirdID","thirdName","smsForm","phone","code","registerForm","email","userInfo","loginFormRef","smsFormRef","isEditingPhone","passwordStrength","confirmPassword","verify","canCompleteRegistration","value","newVal","document","body","classList","add","remove","showLogin","showRegister","passwordLogin","smsLogin","wait","isButtonDisabled","buttonText","isShow","newValue","onShow","onClose","onSuccess","getMsgNum","setButtonStatus","response","post","phoneNumber","headers","withCredentials","data","isOk","success","error","console","countdown","setTimeout","handleLogin","validate","log","bindAccount","message","SelectPhone","CheckPhoneNumber","length","test","validateNum","verifyCode","result","Math","floor","random","getUserBaseInfo","id","sessionStorage","setItem","JSON","stringify","cookie","encodeURIComponent","err","push","checkPasswordStrength","passwordValue","strength","lengthCriteria","hasUpperCase","hasLowerCase","hasNumbers","hasSpecialChars","criteriaMet","filter","Boolean","passwordStrengthClass","completeRegistration","then","catch","urlParams","URLSearchParams","window","location","search","token","get","defaults","common","name","delete","newUrl","toString","pathname","history","replaceState","handleHome","handleForgotPassword"],"sources":["D:/Cache/Java/shopping/shoppping_c_frontend/src/views/AccessLoginView.vue"],"sourcesContent":["<template xmlns=\"http://www.w3.org/1999/xhtml\">\r\n  <el-container class=\"band-container\" :class=\"{ 'night-mode': isNightMode }\">\r\n    <el-header class=\"band-logo header-left\">\r\n      <img src=\"../images/logo.png\" alt=\"Logo\" class=\"band-img\" @click=\"handleHome\"/>\r\n      <span class=\"header-title\">第三方登录</span>\r\n    </el-header>\r\n    <el-main class=\"band-content\">\r\n      <div class=\"band-section\" style=\"display: flex; width: 100%; align-items: center;\">\r\n        <p class=\"description\">检测到您的第三方账号尚未绑定系统，请选择以下操作：</p>\r\n        <div class=\"band-methods tab-buttons\">\r\n          <el-button :class=\"{'active-tab': showBindForm===true}\"\r\n                     @click=showLogin\r\n                     class=\"band-method-button\"><p style=\"font-size:24px\">绑定现有账号</p>\r\n          </el-button>\r\n          <span class=\"separator\">|</span>\r\n          <el-button :class=\"{'active-tab': showRegisterForm === true}\"\r\n                     @click=showRegister\r\n                     class=\"band-method-button\"><p style=\"font-size:24px\">注册新账号</p>\r\n          </el-button>\r\n\r\n        </div>\r\n        <div class=\"login-form\" style=\"display: flex; width: 100%; height: 100%; flex-direction: column;\">\r\n          <div class=\"login-options-container\" style=\"display: flex; height: 100%;\" v-if=\r\n              \"showBindForm === true\">\r\n            <div class=\"login-options\" style=\"flex: 1; display: flex; flex-direction: column; padding: 20px;\">\r\n              <br><br>\r\n              <el-button type=\"primary\" @click=passwordLogin style=\"margin-bottom: 10px;\"\r\n                         class=\"animated-button\">密码登录\r\n              </el-button>\r\n              <br>\r\n              <el-button type=\"primary\" @click=smsLogin class=\"animated-button\">手机号登录</el-button>\r\n            </div>\r\n            <div class=\"form-content\" style=\"flex: 3; padding: 20px;\">\r\n              <div v-if=\"loginMethod === 'password'\" class=\"password-login\">\r\n                <el-form :model=\"bindForm\" status-icon ref=\"loginFormRef\">\r\n                  <el-input v-model=\"bindForm.username\" placeholder=\"账号名/邮箱/手机号\"\r\n                            class=\"custom-input\"></el-input>\r\n                  <div class=\"password-input-container\">\r\n                    <el-input v-model=\"bindForm.password\" type=\"password\" placeholder=\"请输入登录密码\"\r\n                              class=\"custom-input password-input\">\r\n                      <template #append>\r\n                        <el-link type=\"info\" class=\"forgot-password-link no-unecoration\" @click=\"handleForgotPassword\">\r\n                          忘记密码\r\n                        </el-link>\r\n                      </template>\r\n                    </el-input>\r\n                  </div>\r\n                  <el-form-item>\r\n                    <el-button type=\"primary\" @click=\"handleLogin\" block class=\"login-button\">登录</el-button>\r\n                  </el-form-item>\r\n                </el-form>\r\n              </div>\r\n              <div v-if=\"loginMethod ==='sms'\" class=\"sms-login\">\r\n                <el-form :model=\"smsForm\" status-icon ref=\"smsFormRef\">\r\n                  <el-input v-model=\"smsForm.phone\" id=\"phone\" placeholder=\"手机号\" class=\"custom-input\"></el-input>\r\n                  <el-row :gutter=\"10\">\r\n                    <el-col :span=\"14\">\r\n                      <el-input v-model=\"smsForm.code\" placeholder=\"验证码\" class=\"custom-input\"></el-input>\r\n                    </el-col>\r\n                    <el-col :span=\"10\">\r\n                      <el-button\r\n                          id=\"captcha-button\"\r\n                          type=\"primary\"\r\n                          :disabled=\"isButtonDisabled\"\r\n                          @click=\"CheckPhoneNumber\"\r\n                          class=\"sms-code-button\">\r\n                        {{ buttonText }}\r\n                      </el-button>\r\n                    </el-col>\r\n                  </el-row>\r\n                  <Vcode :show=\"isShow\" @success=\"onSuccess\" @close=\"onClose\"/>\r\n                  <el-form-item>\r\n                    <el-button type=\"primary\" @click=\"validateNum\" block class=\"login-button\">登录</el-button>\r\n                  </el-form-item>\r\n                </el-form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div v-if=\"showRegisterForm === true\">\r\n            <div class=\"form-content\" style=\"padding: 20px;\">\r\n              <el-form :model=\"smsForm\" status-icon ref=\"smsFormRef\">\r\n                <el-input v-model=\"smsForm.phone\" id=\"phone\" placeholder=\"手机号\" class=\"custom-input\"\r\n                          :disabled=\"isEditingPhone\"></el-input>\r\n                <el-row :gutter=\"10\">\r\n                  <el-col :span=\"14\">\r\n                    <el-input v-model=\"smsForm.code\" placeholder=\"验证码\" class=\"custom-input\"></el-input>\r\n                  </el-col>\r\n                  <el-col :span=\"10\">\r\n                    <el-button\r\n                        id=\"captcha-button\"\r\n                        type=\"primary\"\r\n                        :disabled=\"isButtonDisabled\"\r\n                        @click=\"CheckPhoneNumber\"\r\n                        class=\"sms-code-button\">\r\n                      {{ buttonText }}\r\n                    </el-button>\r\n                  </el-col>\r\n                </el-row>\r\n                <Vcode :show=\"isShow\" @success=\"onSuccess\" @close=\"onClose\"/>\r\n                <el-form-item>\r\n                  <el-button type=\"primary\" @click=\"validateNum\" block class=\"login-button\">验证</el-button>\r\n                </el-form-item>\r\n              </el-form>\r\n            </div>\r\n            <div v-if=\"verify===true\">\r\n              <el-input v-model=\"password\" type=\"password\" placeholder=\"请输入密码\" @input=\"checkPasswordStrength\"\r\n                        show-password class=\"custom-input\"></el-input>\r\n              <div class=\"password-strength-wrapper\">\r\n                <div class=\"password-strength-bar\">\r\n                  <div class=\"strength-segment\"\r\n                       :class=\"{ 'low-strength-segment': passwordStrength === '弱' ,'medium-strength-segment': passwordStrength === '中' ,'high-strength-segment': passwordStrength === '高' }\"></div>\r\n                  <div class=\"strength-segment\"\r\n                       :class=\"{ 'medium-strength-segment': passwordStrength === '中','high-strength-segment': passwordStrength === '高' }\"></div>\r\n                  <div class=\"strength-segment\" :class=\"{ 'high-strength-segment': passwordStrength === '高' }\"></div>\r\n                </div>\r\n                <span :class=\"passwordStrengthClass\">{{ passwordStrength }}</span>\r\n              </div>\r\n              <el-input v-model=\"confirmPassword\" type=\"password\" placeholder=\"确认密码\" show-password\r\n                        class=\"custom-input\" @paste.prevent=\"\"></el-input>\r\n              <el-button type=\"primary\" :disabled=\"!canCompleteRegistration\"\r\n                         :class=\"{ 'disabled-button': !canCompleteRegistration }\" @click=\"completeRegistration\" block\r\n                         class=\"register-button\" style=\"margin-top: 10px;\">注册并绑定\r\n              </el-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </el-main>\r\n    <el-aside class=\"night-mode-toggle\">\r\n      <el-switch v-model=\"themeStore.isNightMode\" active-text=\"夜间模式\" inactive-text=\"白天模式\"></el-switch>\r\n    </el-aside>\r\n    <FooterLoginComponent/>\r\n  </el-container>\r\n</template>\r\n\r\n<script setup>\r\nimport {computed, onMounted, ref, watch} from 'vue';\r\nimport router from \"@/router\";\r\nimport {useThemeStore} from '@/store/themeStore';\r\nimport {ElMessage} from 'element-plus';\r\nimport axios from 'axios';\r\nimport Vcode from \"vue3-puzzle-vcode\";\r\nimport FooterLoginComponent from \"@/components/FooterLoginComponent.vue\";\r\n\r\nconst themeStore = useThemeStore();\r\nconst isNightMode = computed(() => themeStore.isNightMode);\r\nconst showBindForm = ref(true);\r\nconst showRegisterForm = ref(false);\r\nconst loginMethod = ref('password');\r\nconst bindForm = ref({username: '', password: '', source: ' ', thirdID: '', thirdName: ''});\r\nconst smsForm = ref({phone: '', code: ''});\r\nconst registerForm = ref({\r\n  username: '',\r\n  phone: '',\r\n  email: '',\r\n  password: ''\r\n});\r\nconst userInfo = ref(null);\r\nconst loginFormRef = ref(null);\r\nconst smsFormRef = ref(null);\r\nconst isEditingPhone = ref(false);\r\nconst password = ref('');\r\nconst passwordStrength = ref('弱');\r\nconst confirmPassword = ref('');\r\nconst verify = ref(false);\r\nconst canCompleteRegistration = computed(() => {\r\n  return password.value === confirmPassword.value && passwordStrength.value !== '弱';\r\n});\r\n\r\nwatch(isNightMode, (newVal) => {\r\n  if (newVal) {\r\n    document.body.classList.add('night-mode');\r\n  } else {\r\n    document.body.classList.remove('night-mode');\r\n  }\r\n});\r\n\r\nfunction showLogin() {\r\n  showBindForm.value = true;\r\n  showRegisterForm.value = false;\r\n  isEditingPhone.value = false;\r\n  bindForm.value.username = '';\r\n  smsForm.value.phone = '';\r\n  smsForm.value.code = '';\r\n  loginMethod.value = 'password';\r\n}\r\n\r\nfunction showRegister() {\r\n  showBindForm.value = false;\r\n  showRegisterForm.value = true;\r\n  bindForm.value.username = '';\r\n  bindForm.value.password = '';\r\n  smsForm.value.phone = '';\r\n  smsForm.value.code = '';\r\n  loginMethod.value = 'password';\r\n}\r\n\r\nfunction passwordLogin() {\r\n  loginMethod.value = 'password'\r\n  smsForm.value.phone = '';\r\n  smsForm.value.code = '';\r\n}\r\n\r\nfunction smsLogin() {\r\n  loginMethod.value = 'sms'\r\n  bindForm.value.username = '';\r\n  bindForm.value.password = '';\r\n}\r\n\r\n// 验证码部分\r\nconst wait = ref(120);\r\nconst isButtonDisabled = ref(false);\r\nconst buttonText = ref('获取验证码');\r\nconst isShow = ref(false);\r\n\r\nwatch(wait, (newValue) => {\r\n  if (newValue === 0) {\r\n    isButtonDisabled.value = false;\r\n    buttonText.value = '获取验证码';\r\n    wait.value = 60; // 重置计时器\r\n  } else {\r\n    buttonText.value = `${newValue}秒后可以重新发送`;\r\n  }\r\n});\r\n\r\n// 人机验证部分\r\nconst onShow = () => {\r\n  isShow.value = true;\r\n};\r\n\r\nconst onClose = () => {\r\n  isShow.value = false;\r\n};\r\n\r\nconst onSuccess = () => {\r\n  onClose(); // 验证成功，需要手动关闭模态框\r\n  getMsgNum(); // 获取验证码\r\n};\r\n\r\n// 获取验证码\r\nasync function getMsgNum() {\r\n  setButtonStatus(); // 设置按钮状态\r\n  try {\r\n    const response = await axios.post('/api/sms/smsXxs', {\r\n      phoneNumber: smsForm.value.phone,\r\n    }, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      withCredentials: true\r\n    });\r\n\r\n    if (response.data.isOk === \"OK\") {\r\n      ElMessage.success('验证码已发送到您的手机，请注意查收！');\r\n    } else {\r\n      ElMessage.error('验证码发送失败，请稍后再试！');\r\n    }\r\n  } catch (error) {\r\n    console.error(\"发送验证码错误:\", error);\r\n  }\r\n}\r\n\r\n// 设置按钮状态\r\nfunction setButtonStatus() {\r\n  isButtonDisabled.value = true;\r\n  wait.value = wait.value > 0 ? wait.value : 120; // 确保初始值有效\r\n  countdown();\r\n}\r\n\r\n// 计时功能\r\nfunction countdown() {\r\n  if (wait.value > 0) {\r\n    setTimeout(() => {\r\n      wait.value -= 1;\r\n      countdown();\r\n    }, 1000);\r\n  }\r\n}\r\n\r\nasync function handleLogin() {\r\n  try {\r\n    await loginFormRef.value.validate();\r\n    const response = await axios.post('/api/user/login', {\r\n      username: bindForm.value.username,\r\n      password: bindForm.value.password,\r\n    }, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      withCredentials: true\r\n    });\r\n    if (response.data.code === 200) {\r\n      console.log(bindForm.value);\r\n      await bindAccount();\r\n    } else if (response.data.code === 400) {\r\n      ElMessage.error('用户名或密码错误！请重新登录！');\r\n      bindForm.value.username = '';\r\n      bindForm.value.password = '';\r\n    } else if (response.data.code === 401) {\r\n      ElMessage.error('用户名不存在！请重新登录！');\r\n      bindForm.value.username = '';\r\n      bindForm.value.password = '';\r\n    }\r\n  } catch (error) {\r\n    console.error('Error during login:', error.message);\r\n  }\r\n}\r\n\r\nasync function SelectPhone(phone) {\r\n  try {\r\n    const response = await axios.post('/api/user/register/selectPhone', {\r\n      phone: phone\r\n    }, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      withCredentials: true\r\n    });\r\n    return response.data.code === 200;\r\n  } catch (error) {\r\n    ElMessage.error('服务器错误，请稍后再试！');\r\n    return false;\r\n  }\r\n}\r\n\r\nasync function CheckPhoneNumber() {\r\n  if (smsForm.value.phone.length === 0) {\r\n    ElMessage.error('请输入手机号码！');\r\n    return;\r\n  } else if (!/^1[3-9]\\d{9}$/.test(smsForm.value.phone)) {\r\n    ElMessage.error('请输入正确的手机号码！');\r\n    return;\r\n  }\r\n  if (await SelectPhone(smsForm.value.phone) === true) {\r\n    onShow();\r\n  } else {\r\n    ElMessage.error('手机号已被占用，请重新输入！');\r\n  }\r\n}\r\n\r\nasync function validateNum() {\r\n  if (smsForm.value.phone.length === 0 || smsForm.value.phone.length === 0) {\r\n    ElMessage.error('请输入手机号码和验证码！');\r\n    return;\r\n  }\r\n  const data = {\r\n    verifyCode: smsForm.value.code,\r\n    phone: smsForm.value.phone,\r\n  };\r\n\r\n  try {\r\n    await smsFormRef.value.validate();\r\n    const response = await axios.post('/api/sms/validateNum', data, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      withCredentials: true\r\n    });\r\n    console.log(response.data);\r\n    if (response.data.result === 404) {\r\n      ElMessage.error('过期验证码已失效!');\r\n    } else if (response.data.result === 500) {\r\n      ElMessage.error('验证码错误，请重新输入！');\r\n    } else if (response.data.result === 403) {\r\n      if (showBindForm.value === true) {\r\n        ElMessage.error('用户不存在，请注册账号！');\r\n      } else if (showRegisterForm.value === true) {\r\n        ElMessage.success('验证码验证成功');\r\n        registerForm.value.phone = smsForm.value.phone;\r\n        registerForm.value.username = \"user\" + Math.floor(Math.random() * 10000);\r\n        bindForm.value.username = smsForm.value.phone;\r\n        isEditingPhone.value = true;\r\n        verify.value = true;\r\n      }\r\n    } else {\r\n      if (showBindForm.value === true) {\r\n        bindForm.value.username = smsForm.value.phone;\r\n        await bindAccount();\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.error(\"验证错误:\", error);\r\n  }\r\n}\r\n\r\nasync function getUserBaseInfo(username) {\r\n  try {\r\n    const response = await axios.post('/api/user/getUserBaseInfo', {\r\n      username: username\r\n    }, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      withCredentials: true\r\n    });\r\n    if (response.data.id !== null) {\r\n      sessionStorage.setItem('userBaseInfo', JSON.stringify(response.data)); // 存储用户信息到sessionStorage\r\n      document.cookie = `userBaseInfo=${encodeURIComponent(JSON.stringify(response.data))}; path=/ max-age=604800`; // 存储用户信息到cookie\r\n    }\r\n  } catch (err) {\r\n    ElMessage.error('获取用户信息失败，请稍后再试！');\r\n  }\r\n}\r\n\r\nconst bindAccount = async () => {\r\n  try {\r\n    const response = await axios.post('/api/user/bindAccount', bindForm.value, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      withCredentials: true\r\n    });\r\n    if (response.data.code === 200) {\r\n      ElMessage.success('账号绑定成功');\r\n      setTimeout(async () => {\r\n        await getUserBaseInfo(bindForm.value.username);\r\n        await router.push('/');\r\n      }, 1500);\r\n    } else {\r\n      ElMessage.error('绑定失败，请检查您的信息');\r\n    }\r\n  } catch (error) {\r\n    ElMessage.error('绑定账号时出现错误');\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nfunction checkPasswordStrength() {\r\n  const passwordValue = password.value;\r\n  let strength = '弱';\r\n\r\n  // 判断密码长度\r\n  const lengthCriteria = passwordValue.length >= 8;\r\n  const hasUpperCase = /[A-Z]/.test(passwordValue);\r\n  const hasLowerCase = /[a-z]/.test(passwordValue);\r\n  const hasNumbers = /\\d/.test(passwordValue);\r\n  const hasSpecialChars = /[!@#$%^&*(),.?\":{}|<>]/.test(passwordValue);\r\n\r\n  // 强度等级判断\r\n  const criteriaMet = [lengthCriteria, hasUpperCase, hasLowerCase, hasNumbers, hasSpecialChars].filter(Boolean).length;\r\n\r\n  if (criteriaMet >= 4) {\r\n    strength = '高';\r\n  } else if (criteriaMet >= 2) {\r\n    strength = '中';\r\n  }\r\n  passwordStrength.value = strength;\r\n}\r\n\r\nconst passwordStrengthClass = computed(() => {\r\n  switch (passwordStrength.value) {\r\n    case '高':\r\n      return 'high-strength';\r\n    case '中':\r\n      return 'medium-strength';\r\n    case '弱':\r\n    default:\r\n      return 'low-strength';\r\n  }\r\n});\r\n\r\nfunction completeRegistration() {\r\n  if (password.value === confirmPassword.value && passwordStrength.value !== '弱') {\r\n    registerForm.value.password = password.value;\r\n    console.log(registerForm.value);\r\n    axios.post('/api/user/register', registerForm.value, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      withCredentials: true\r\n    }).then(async response => {\r\n      if (response.data.code === 200) {\r\n        ElMessage.success('注册成功');\r\n        await bindAccount();\r\n      } else {\r\n        ElMessage.error('注册失败，请稍后再试！');\r\n      }\r\n    }).catch(error => {\r\n      console.error('Error during registration:', error.message);\r\n      ElMessage.error('注册失败，请稍后再试！');\r\n    });\r\n  } else {\r\n    ElMessage.error('密码不符合要求，请重新输入！');\r\n  }\r\n}\r\n\r\nonMounted(async () => {\r\n  try {\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const token = urlParams.get('token');\r\n    if (token) {\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      const response = await axios.post('/api/callback/ThirdLogin/userInfo', {}, {withCredentials: true});\r\n      if (response.data && response.data.name) {\r\n        userInfo.value = response.data;\r\n        ElMessage.success(`欢迎回来, ${userInfo.value.name}`);\r\n        bindForm.value.source = userInfo.value.source;\r\n        bindForm.value.thirdID = userInfo.value.id;\r\n        bindForm.value.thirdName = userInfo.value.name;\r\n      }\r\n      urlParams.delete('token');\r\n      const newUrl = urlParams.toString() ? `${window.location.pathname}?${urlParams.toString()}` : window.location.pathname;\r\n      window.history.replaceState(null, '', newUrl);\r\n    } else {\r\n      await router.push('/login');\r\n    }\r\n  } catch (error) {\r\n    console.error('获取用户信息失败:', error);\r\n  }\r\n});\r\n\r\nconst handleHome = async () => {\r\n  await router.push('/');\r\n};\r\n\r\nfunction handleForgotPassword() {\r\n  router.push('/forgotPassword');\r\n}\r\n\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.band-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 40px;\r\n  background-color: #f7f7f7;\r\n  height: 100vh;\r\n  justify-content: space-between;\r\n}\r\n\r\n.band-logo {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-top: 20px;\r\n  position: absolute;\r\n  top: 20px;\r\n  left: 20px;\r\n}\r\n\r\n.band-img {\r\n  height: 80px;\r\n}\r\n\r\n.header-title {\r\n  margin-left: 15px;\r\n  font-size: 28px;\r\n  color: #96CDCD;\r\n  font-weight: bold;\r\n  line-height: 1;\r\n}\r\n\r\n.band-content {\r\n  max-height: 68vh;\r\n  display: flex;\r\n  width: 100%;\r\n  max-width: 900px;\r\n  padding: 20px;\r\n  background-color: #fff;\r\n  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);\r\n  border-radius: 12px;\r\n  position: relative;\r\n  top: 20vh;\r\n}\r\n\r\n.band-section {\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n}\r\n\r\n.description {\r\n  font-size: 25px;\r\n  margin-bottom: 30px;\r\n  font-weight: bold;\r\n}\r\n\r\n.band-method-button {\r\n  color: #668B8B;\r\n  font-size: 20px;\r\n  padding: 10px;\r\n}\r\n\r\n.band-method-button {\r\n  font-size: 16px;\r\n  padding: 10px 20px;\r\n  border: none;\r\n  background-color: transparent;\r\n  color: #666;\r\n  cursor: pointer;\r\n}\r\n\r\n.active-tab {\r\n  font-weight: bold;\r\n  color: #668B8B;\r\n  border-bottom: 2px solid #668B8B;\r\n}\r\n\r\n.separator {\r\n  margin: 0 10px;\r\n}\r\n\r\n.login-form {\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  flex-direction: column;\r\n}\r\n\r\n.login-options-container {\r\n  display: flex;\r\n  height: 100%;\r\n}\r\n\r\n.login-options {\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 20px;\r\n}\r\n\r\n.form-content {\r\n  flex: 3;\r\n  padding: 20px;\r\n  justify-content: center;\r\n}\r\n\r\n.login-options el-button {\r\n  margin-bottom: 10px;\r\n  width: 100%;\r\n}\r\n\r\n.animated-button {\r\n  position: relative;\r\n  overflow: hidden;\r\n  font-size: 18px;\r\n  padding: 12px;\r\n  border-radius: 8px;\r\n  height: 48px;\r\n  transition: all 0.5s;\r\n  font-weight: bold;\r\n}\r\n\r\n.animated-button::after {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 0;\r\n  left: -100%;\r\n  width: 300%;\r\n  height: 100%;\r\n  background: rgba(255, 255, 255, 0.2);\r\n  transform: skewX(-45deg);\r\n  transition: all 0.5s;\r\n}\r\n\r\n.animated-button:hover::after {\r\n  left: 100%;\r\n}\r\n\r\n.password-login,\r\n.sms-login {\r\n  padding: 20px;\r\n}\r\n\r\n.custom-input {\r\n  border-radius: 10px;\r\n  padding: 16px;\r\n  font-size: 18px;\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.password-input {\r\n  border-right: none;\r\n}\r\n\r\n.forgot-password-link {\r\n  color: #666;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  border-left: none;\r\n  padding-left: 8px;\r\n  border-right: none;\r\n}\r\n\r\n.no-underline {\r\n  text-decoration: none;\r\n}\r\n\r\n.forgot-password-input {\r\n  text-align: right;\r\n  cursor: pointer;\r\n  color: #666;\r\n  font-size: 16px;\r\n}\r\n\r\n.sms-code-button {\r\n  margin-top: 15px;\r\n  height: 30px; /* 与输入框高度保持一致 */\r\n  padding: 0 20px; /* 左右内边距让按钮显得更舒展 */\r\n  font-size: 16px;\r\n  border-radius: 8px;\r\n  line-height: 48px; /* 与按钮高度一致，保证文字垂直居中 */\r\n  //居中显示\r\n  display: flex;\r\n\r\n}\r\n\r\n.login-button {\r\n  font-size: 18px;\r\n  padding: 12px;\r\n  border-radius: 8px;\r\n  width: 100%;\r\n}\r\n\r\n.password-strength-wrapper {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  margin-top: 20px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.password-strength-bar {\r\n  display: flex;\r\n  width: 70%;\r\n  height: 10px;\r\n  background-color: #e0e0e0;\r\n  border-radius: 5px;\r\n}\r\n\r\n.strength-segment {\r\n  flex: 1;\r\n  height: 100%;\r\n  margin-right: 2px;\r\n  border-radius: 5px;\r\n}\r\n\r\n.low-strength-segment {\r\n  background-color: #f56c6c;\r\n}\r\n\r\n.medium-strength-segment {\r\n  background-color: #e6a23c;\r\n}\r\n\r\n.high-strength-segment {\r\n  background-color: #67c23a;\r\n}\r\n\r\n.password-strength-text {\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n}\r\n\r\n.night-mode-toggle {\r\n  position: fixed;\r\n  top: 20px;\r\n  right: 20px;\r\n}\r\n\r\n.el-button--primary {\r\n  background-color: #96CDCD;\r\n  border-color: #96CDCD;\r\n}\r\n\r\n.el-button--primary:hover {\r\n  background-color: #668B8B;\r\n  border-color: #668B8B;\r\n}\r\n\r\nbody.night-mode, html.night-mode {\r\n  background-color: #1f1f1f;\r\n  color: #f7f7f7;\r\n}\r\n\r\n.night-mode .el-container {\r\n  background-color: #1f1f1f;\r\n}\r\n\r\nbody.night-mode .band-content {\r\n  background-color: #333;\r\n  color: #f7f7f7;\r\n}\r\n\r\nbody.night-mode .el-input,\r\nbody.night-mode .el-input__inner {\r\n  background-color: #444;\r\n  color: #f7f7f7;\r\n  border-color: #555;\r\n}\r\n\r\nbody.night-mode .el-button--primary {\r\n  background-color: #668B8B;\r\n  border-color: #668B8B;\r\n}\r\n\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
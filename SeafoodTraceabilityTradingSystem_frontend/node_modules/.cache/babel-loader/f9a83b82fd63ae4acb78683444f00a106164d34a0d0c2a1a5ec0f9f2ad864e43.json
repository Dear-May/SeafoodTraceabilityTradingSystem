{"ast":null,"code":"import \"core-js/modules/web.dom-exception.stack.js\";\nimport { computed, nextTick, onMounted, ref } from 'vue';\nimport HeaderComponent from \"@/components/HeaderComponent.vue\";\nimport FooterComponent from \"@/components/FooterComponent.vue\";\nimport RightWidgetComponent from \"@/components/RightWidgetComponent.vue\";\nimport useUser from \"@/composables/useUser\";\nimport axios from \"axios\";\nimport { ElMessage } from \"element-plus\";\nimport 'emoji-picker-element';\nimport html2canvas from 'html2canvas';\nimport VueCropper from 'vue-cropperjs';\nimport 'cropperjs/dist/cropper.css';\nexport default {\n  __name: 'TalkToStoreView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const {\n      UserInfoForm,\n      initUserSession\n    } = useUser();\n    const footer = ref(null);\n    const contacts = ref([]);\n    async function initContacts() {\n      try {\n        const response = await axios.post('/api/chat/getChatSession', {\n          userId: UserInfoForm.value.id\n        }, {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          withCredentials: true\n        });\n        if (response.data !== null) contacts.value = response.data;\n      } catch (err) {\n        ElMessage.error('获取聊天列表失败，请稍后再试');\n      }\n    }\n    async function IsInChatSession() {\n      const shopId = new URLSearchParams(window.location.search).get('id');\n      if (shopId) {\n        const contactExists = ref(false);\n        if (Array.isArray(contacts.value) && contacts.value.length > 0) {\n          contacts.value.forEach(contact => {\n            if (contact.id === parseInt(shopId)) {\n              contactExists.value = true;\n            }\n          });\n        }\n        if (!contactExists.value) {\n          try {\n            const response = await axios.post('/api/chat/createChatSession', {\n              userId: UserInfoForm.value.id,\n              shopId: parseInt(shopId)\n            }, {\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              withCredentials: true\n            });\n            if (response.data.code === 200) {\n              await initContacts();\n            } else {\n              ElMessage.error('获取聊天列表失败，请稍后再试');\n            }\n          } catch (err) {\n            ElMessage.error('获取聊天列表失败，请稍后再试');\n          }\n        }\n        contacts.value = contacts.value.map(contact => {\n          if (contact.id === parseInt(shopId)) {\n            selectedContact.value = contact;\n          }\n          return contact;\n        });\n        // 切换到指定联系人，并展示聊天窗口\n        selectedContactIndex.value = contacts.value.findIndex(contact => contact.id === parseInt(shopId));\n        await selectContact(selectedContactIndex.value);\n      }\n    }\n    const chatData = ref({});\n    const selectedContactIndex = ref(null);\n    const newMessage = ref('');\n    const selectedContact = computed(() => {\n      return selectedContactIndex.value !== null ? contacts.value[selectedContactIndex.value] : null;\n    });\n    async function selectContact(index) {\n      selectedContactIndex.value = index;\n      try {\n        const response = await axios.post('/api/chat/getChatDetail', {\n          userId: UserInfoForm.value.id,\n          shopId: contacts.value[index].id\n        }, {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          withCredentials: true\n        });\n        if (response.data !== null) {\n          const chatId = Object.keys(response.data)[0];\n          chatData.value[chatId] = response.data[chatId].map(msg => ({\n            content: msg.content,\n            isSelf: msg.isSelf,\n            isRead: msg.isRead,\n            contentType: msg.contentType\n          }));\n        }\n      } catch (err) {\n        ElMessage.error('获取聊天详情失败，请稍后再试');\n      }\n      await getProducts();\n    }\n    async function handleInitChat(chatId) {\n      if (chatId) {\n        selectedContactIndex.value = contacts.value.findIndex(contact => contact.id === parseInt(chatId));\n        await selectContact(selectedContactIndex.value);\n        await initContacts();\n      }\n    }\n    async function deleteContact(index) {\n      const contactId = contacts.value[index].id;\n      try {\n        const response = await axios.post('/api/chat/deleteChatSession', {\n          userId: UserInfoForm.value.id,\n          shopId: contactId\n        }, {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          withCredentials: true\n        });\n        if (response.data.code === 200) {\n          delete chatData.value[contactId];\n          if (selectedContactIndex.value === index) {\n            selectedContactIndex.value = null;\n          }\n          await initContacts();\n        } else if (response.data.code === 400) ElMessage.error('删除联系人失败，请稍后再试');\n      } catch (error) {\n        ElMessage.error('删除联系人失败，请稍后再试');\n      }\n    }\n    const chatWindowRef = ref(null);\n    const showEmojiPicker = ref(false);\n    const toggleEmojiPicker = () => {\n      showEmojiPicker.value = !showEmojiPicker.value;\n    };\n    const addEmoji = event => {\n      newMessage.value += event.detail.unicode;\n    };\n    async function uploadImage(file) {\n      try {\n        const formData = new FormData();\n        formData.append('file', file);\n        formData.append('userId', UserInfoForm.value.id);\n        formData.append('shopId', selectedContact.value.id);\n        const response = await axios.post('/api/chat/uploadImage', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          },\n          withCredentials: true\n        });\n        if (response.data.code === 200) {\n          await initContacts();\n          await selectContact(selectedContactIndex.value);\n          await nextTick(() => {\n            const chatWindow = chatWindowRef.value;\n            if (chatWindow) {\n              chatWindow.scrollTop = chatWindow.scrollHeight;\n            }\n          });\n        } else ElMessage.error('上传图片失败，请稍后再试');\n      } catch (err) {\n        ElMessage.error('上传图片失败，请稍后再试');\n      }\n    }\n    const beforeUpload = async file => {\n      const isImage = file.type.startsWith('image/');\n      if (!isImage) {\n        ElMessage.error('请选择图片文件！');\n        return;\n      }\n      const isLt2M = file.size / 1024 / 1024 < 2; // 限制文件大小为 2MB\n      if (!isLt2M) {\n        ElMessage.error('图片大小不能超过 2MB！');\n        return;\n      }\n      await uploadImage(file);\n    };\n    const cropper = ref(null);\n    const imageSrc = ref(null);\n    const dialogVisible = ref(false);\n    const takeScreenshot = () => {\n      dialogVisible.value = true;\n      const element = document.body;\n      html2canvas(element).then(canvas => {\n        imageSrc.value = canvas.toDataURL('image/png');\n      });\n    };\n    async function cropImage() {\n      const canvas = cropper.value.getCroppedCanvas();\n      const dataUrl = canvas.toDataURL('image/png');\n      const file = dataUrlToFile(dataUrl);\n      await uploadImage(file);\n      handleClose();\n    }\n    const dataUrlToFile = dataUrl => {\n      const arr = dataUrl.split(',');\n      const mime = arr[0].match(/:(.*?);/)[1];\n      const bstr = atob(arr[1]);\n      let n = bstr.length;\n      const u8arr = new Uint8Array(n);\n      while (n--) {\n        u8arr[n] = bstr.charCodeAt(n);\n      }\n      return new File([u8arr], 'cropped-image.png', {\n        type: mime\n      });\n    };\n    const handleClose = () => {\n      dialogVisible.value = false;\n      imageSrc.value = '';\n    };\n    async function send() {\n      if (newMessage.value.trim() === '') return;\n      try {\n        const response = await axios.post('/api/chat/sendMessage', {\n          userId: UserInfoForm.value.id,\n          shopId: selectedContact.value.id,\n          message: newMessage.value\n        }, {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          withCredentials: true\n        });\n        if (response.data.code === 200) {\n          await selectContact(selectedContactIndex.value);\n          await initContacts();\n          newMessage.value = '';\n          await nextTick(() => {\n            const chatWindow = chatWindowRef.value;\n            if (chatWindow) {\n              chatWindow.scrollTop = chatWindow.scrollHeight;\n            }\n          });\n        } else if (response.data.code === 400) {\n          ElMessage.error('发送消息失败，请稍后再试');\n        }\n      } catch (err) {\n        ElMessage.error('发送消息失败，请稍后再试');\n      }\n    }\n    const products = ref([]);\n    async function getProducts() {\n      try {\n        const response = await axios.post('/api/pay/chat/getChatOrderList', {\n          userId: UserInfoForm.value.id,\n          shopId: selectedContact.value.id\n        }, {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          withCredentials: true\n        });\n        if (response.data !== null) products.value = response.data;\n      } catch (err) {\n        ElMessage.error('获取商品列表失败，请稍后再试');\n      }\n    }\n    async function sendProductLink(product) {\n      const link = {\n        image: product.image,\n        price: product.price,\n        name: product.name,\n        id: product.id\n      };\n      try {\n        const response = await axios.post('/api/chat/sendOrderLink', {\n          userId: UserInfoForm.value.id,\n          shopId: selectedContact.value.id,\n          link: JSON.stringify(link)\n        }, {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          withCredentials: true\n        });\n        if (response.data.code === 200) {\n          await selectContact(selectedContactIndex.value);\n          await initContacts();\n          await nextTick(() => {\n            const chatWindow = chatWindowRef.value;\n            if (chatWindow) {\n              chatWindow.scrollTop = chatWindow.scrollHeight;\n            }\n          });\n        } else if (response.data.code === 400) {\n          ElMessage.error('发送商品链接失败，请稍后再试');\n        }\n      } catch (err) {\n        ElMessage.error('发送商品链接失败，请稍后再试');\n      }\n    }\n    onMounted(async () => {\n      initUserSession();\n      await initContacts();\n      await IsInChatSession();\n    });\n    const __returned__ = {\n      UserInfoForm,\n      initUserSession,\n      footer,\n      contacts,\n      initContacts,\n      IsInChatSession,\n      chatData,\n      selectedContactIndex,\n      newMessage,\n      selectedContact,\n      selectContact,\n      handleInitChat,\n      deleteContact,\n      chatWindowRef,\n      showEmojiPicker,\n      toggleEmojiPicker,\n      addEmoji,\n      uploadImage,\n      beforeUpload,\n      cropper,\n      imageSrc,\n      dialogVisible,\n      takeScreenshot,\n      cropImage,\n      dataUrlToFile,\n      handleClose,\n      send,\n      products,\n      getProducts,\n      sendProductLink,\n      computed,\n      nextTick,\n      onMounted,\n      ref,\n      HeaderComponent,\n      FooterComponent,\n      RightWidgetComponent,\n      get useUser() {\n        return useUser;\n      },\n      get axios() {\n        return axios;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get html2canvas() {\n        return html2canvas;\n      },\n      get VueCropper() {\n        return VueCropper;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["computed","nextTick","onMounted","ref","HeaderComponent","FooterComponent","RightWidgetComponent","useUser","axios","ElMessage","html2canvas","VueCropper","UserInfoForm","initUserSession","footer","contacts","initContacts","response","post","userId","value","id","headers","withCredentials","data","err","error","IsInChatSession","shopId","URLSearchParams","window","location","search","get","contactExists","Array","isArray","length","forEach","contact","parseInt","code","map","selectedContact","selectedContactIndex","findIndex","selectContact","chatData","newMessage","index","chatId","Object","keys","msg","content","isSelf","isRead","contentType","getProducts","handleInitChat","deleteContact","contactId","chatWindowRef","showEmojiPicker","toggleEmojiPicker","addEmoji","event","detail","unicode","uploadImage","file","formData","FormData","append","chatWindow","scrollTop","scrollHeight","beforeUpload","isImage","type","startsWith","isLt2M","size","cropper","imageSrc","dialogVisible","takeScreenshot","element","document","body","then","canvas","toDataURL","cropImage","getCroppedCanvas","dataUrl","dataUrlToFile","handleClose","arr","split","mime","match","bstr","atob","n","u8arr","Uint8Array","charCodeAt","File","send","trim","message","products","sendProductLink","product","link","image","price","name","JSON","stringify"],"sources":["D:/Cache/Java/shopping/shoppping_c_frontend/src/views/TalkToStoreView.vue"],"sourcesContent":["<template>\r\n  <HeaderComponent/>\r\n  <div class=\"container-fluid mt-5\">\r\n    <div class=\"row\">\r\n      <!-- Sidebar -->\r\n      <div class=\"col-1 sidebar p-0\" style=\"margin-top: 5vh;\">\r\n        <div class=\"d-flex flex-column flex-shrink-0 bg-light\" style=\"height: 79vh\">\r\n          <ul class=\"nav nav-pills nav-flush flex-column mb-auto text-center\">\r\n            <el-tooltip\r\n                class=\"box-item\"\r\n                effect=\"dark\"\r\n                content=\"商家消息\"\r\n                placement=\"right\"\r\n            >\r\n              <li class=\"nav-item\">\r\n                <a href=\"#\" class=\"nav-link active py-3 border-bottom rounded-0\" aria-current=\"page\"\r\n                   data-bs-toggle=\"tooltip\" data-bs-placement=\"right\">\r\n                  <i class=\"bi bi-chat-right-text-fill\" style=\"font-size: 1.5rem;\"></i>\r\n                </a>\r\n              </li>\r\n            </el-tooltip>\r\n            <el-tooltip\r\n                class=\"box-item\"\r\n                effect=\"dark\"\r\n                content=\"用户消息\"\r\n                placement=\"right\"\r\n            >\r\n              <li>\r\n                <a href=\"#\" class=\"nav-link py-3 border-bottom rounded-0\" title=\"Dashboard\" data-bs-toggle=\"tooltip\"\r\n                   data-bs-placement=\"right\">\r\n                  <i class=\"bi bi-people-fill\" style=\"font-size: 1.5rem;\"></i>\r\n                </a>\r\n              </li>\r\n            </el-tooltip>\r\n            <el-tooltip\r\n                class=\"box-item\"\r\n                effect=\"dark\"\r\n                content=\"官方客服\"\r\n                placement=\"right\"\r\n            >\r\n              <li>\r\n                <a href=\"#\" class=\"nav-link py-3 border-bottom rounded-0\" title=\"Orders\" data-bs-toggle=\"tooltip\"\r\n                   data-bs-placement=\"right\">\r\n                  <i class=\"bi bi-table\"></i>\r\n                </a>\r\n              </li>\r\n            </el-tooltip>\r\n            <el-tooltip\r\n                class=\"box-item\"\r\n                effect=\"dark\"\r\n                content=\"官方消息\"\r\n                placement=\"right\"\r\n            >\r\n              <li>\r\n                <a href=\"#\" class=\"nav-link py-3 border-bottom rounded-0\" title=\"Products\" data-bs-toggle=\"tooltip\"\r\n                   data-bs-placement=\"right\">\r\n                  <i class=\"bi bi-grid\"></i>\r\n                </a>\r\n              </li>\r\n            </el-tooltip>\r\n            <li>\r\n              <a href=\"#\" class=\"nav-link py-3 border-bottom rounded-0\" title=\"Customers\" data-bs-toggle=\"tooltip\"\r\n                 data-bs-placement=\"right\">\r\n                <i class=\"bi bi-people\"></i>\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <!-- Main Content -->\r\n      <div class=\"col-11 main-content\" style=\"padding: 5px;\">\r\n        <div class=\"chat-container d-flex\">\r\n          <!-- Contact List Section -->\r\n          <div class=\"contact-list bg-white border-end p-2\" style=\"width: 25%; border-radius:20px 0 0 20px;\">\r\n            <div class=\"search-box mb-3\">\r\n              <div style=\"text-align: start\" class=\"mb-1\">\r\n                <i class=\"bi bi-chat-heart\"></i>&nbsp;&nbsp;<a style=\"font-weight: bold\">聊天列表</a>\r\n              </div>\r\n              <input type=\"text\" class=\"form-control\" placeholder=\"搜索最近联系人...\" style=\"border-radius: 20px;\">\r\n            </div>\r\n            <ul class=\"list-group list-group-flush\">\r\n              <li\r\n                  v-for=\"(contact, index) in contacts\"\r\n                  :key=\"index\"\r\n                  class=\"list-group-item d-flex justify-content-between align-items-center\"\r\n                  @click=\"selectContact(index)\"\r\n                  :class=\"{ 'active': selectedContactIndex === index }\">\r\n                <div>\r\n                  <img :src=\"contact.avatar\" alt=\"Avatar\" class=\"rounded-circle me-2\"\r\n                       style=\"width: 30px; height: 30px;\">\r\n                  <span>{{ contact.name }}</span>\r\n                  <p class=\"text-secondary\" v-html=\"contact.lastMessage\"></p>\r\n                </div>\r\n                <div>\r\n                  <span v-if=\"contact.unread > 0\" class=\"badge bg-danger text-white rounded-pill me-2\">{{\r\n                      contact.unread\r\n                    }}</span>\r\n                  <span class=\"text-muted\">{{ contact.time }}</span>\r\n                  <button @click.stop=\"deleteContact(index)\" class=\"btn btn-close ms-2\"></button>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <!-- Chat Section -->\r\n          <el-container>\r\n            <div v-if=\"selectedContactIndex !== null\" class=\"chat-section flex-grow-1 p-2\">\r\n              <el-header>\r\n                <div class=\"chat-header border-bottom pb-2 mb-3\" style=\"text-align: start\">\r\n                  <h5>{{ selectedContact.name }}</h5>\r\n                </div>\r\n              </el-header>\r\n              <div class=\"chat-messages mb-3\" style=\"height: 50vh; overflow-y: auto;\" ref=\"chatWindowRef\">\r\n                <div\r\n                    v-for=\"(message, messageIndex) in chatData[selectedContact.id]\"\r\n                    :key=\"messageIndex\"\r\n                    class=\"message\"\r\n                    :class=\"{ self: message.isSelf }\"\r\n                >\r\n                  <el-avatar\r\n                      v-if=\"!message.isSelf\"\r\n                      :src=\"selectedContact.avatar\"\r\n                      size=\"default\"\r\n                      class=\"avatar\"\r\n                  ></el-avatar>\r\n                  <el-avatar\r\n                      v-if=\"message.isSelf\"\r\n                      :src=\"UserInfoForm.avatar\"\r\n                      size=\"default\"\r\n                      class=\"avatar\"\r\n                  ></el-avatar>\r\n                  <div class=\"message-content\">\r\n                    <p v-html=\"message.content\" v-if=\"message.contentType === 'text'\"></p>\r\n                    <el-image :src=\"message.content\" v-else-if=\"message.contentType === 'image'\" class=\"img-fluid\"\r\n                              style=\"width: 100px; height: auto;\"\r\n                              :preview-src-list=\"[message.content]\"\r\n                              alt=\"Image\"/>\r\n                    <div\r\n                        v-else-if=\"message.contentType === 'link'\"\r\n                        class=\"product-item d-flex align-items-center mb-2\"\r\n                        style=\"background-color: #f5f5f5; padding: 10px; border-radius: 10px;\"\r\n                    >\r\n                      <img\r\n                          :src=\"message.content.image\"\r\n                          alt=\"Product\"\r\n                          class=\"me-2\"\r\n                          style=\"width: 40px; height: 40px;\"\r\n                      >\r\n                      <div>\r\n                        <p class=\"mb-1\">{{ message.content.name }}</p>\r\n                        <span class=\"text-muted\">{{ message.content.price }} 元</span>\r\n                      </div>\r\n                    </div>\r\n\r\n                  </div>\r\n                  <div v-if=\"message.isSelf\" class=\"message-status\">\r\n                    <span v-if=\"message.isRead\" class=\"read-status\">已读</span>\r\n                    <span v-else class=\"unread-status\">未读</span>\r\n                  </div>\r\n                </div>\r\n                <!-- Additional messages here -->\r\n              </div>\r\n              <el-footer>\r\n                <div class=\"input-toolbar d-flex align-items-center mb-2\">\r\n                  <transition name=\"fade\">\r\n                    <emoji-picker\r\n                        v-if=\"showEmojiPicker\"\r\n                        @emoji-click=\"addEmoji\"\r\n                        style=\"position: absolute; bottom:300px; left: 600px;\"\r\n                    ></emoji-picker>\r\n                  </transition>\r\n                  <i class=\"bi bi-emoji-smile me-3\" style=\"font-size: 1.5rem; cursor: pointer;\"\r\n                     @click=\"toggleEmojiPicker\"></i>\r\n                  <el-upload\r\n                      :show-file-list=\"false\"\r\n                      :before-upload=\"beforeUpload\"\r\n                      accept=\"image/*\"\r\n                  >\r\n                    <i class=\"bi bi-card-image me-3\" style=\"font-size: 1.5rem; cursor: pointer;\"></i>\r\n                  </el-upload>\r\n                  <i class=\"bi bi-scissors me-3\" style=\"font-size: 1.5rem; cursor: pointer;\"\r\n                     @click=\"takeScreenshot\"></i>\r\n                  <el-dialog\r\n                      v-model=\"dialogVisible\"\r\n                      width=60vw\r\n                      :before-close=\"handleClose\"\r\n                  >\r\n                    <vue-cropper\r\n                        v-if=\"imageSrc\"\r\n                        ref=\"cropper\"\r\n                        :src=\"imageSrc\"\r\n                        :aspect-ratio=\"16 / 9\"\r\n                        :view-mode=\"1\"\r\n                        :auto-crop-area=\"0.5\"\r\n                        :guides=\"true\"\r\n                        :auto-crop=\"true\"\r\n                        :background=\"true\"\r\n                        :drag-mode=\"move\"\r\n                    ></vue-cropper>\r\n                    <div v-if=\"imageSrc\">\r\n                      <el-button type=\"primary\" @click=\"cropImage\" style=\"border-radius: 20px;\">裁剪并发送</el-button>\r\n                    </div>\r\n                  </el-dialog>\r\n                </div>\r\n                <div class=\"input-group\">\r\n                  <textarea v-model=\"newMessage\"\r\n                            class=\"form-control border-0 bg-transparent\"\r\n                            placeholder=\"请输入消息，按Enter键 或 点击发送按钮发送\"\r\n                            @keydown.enter=\"send\"\r\n                            style=\"min-height: 95px; resize: none;\"></textarea>\r\n                </div>\r\n                <div style=\"text-align: right;\">\r\n                  <el-button type=\"primary\" @click=\"send\" style=\"border-radius: 20px;\">发送</el-button>\r\n                </div>\r\n              </el-footer>\r\n            </div>\r\n          </el-container>\r\n          <!-- Additional Info Section -->\r\n          <div class=\"additional-info bg-white border-start p-2\" v-if=\"selectedContactIndex !== null\"\r\n               style=\"width: 20%; margin-top: 5vh; border-radius: 0 20px 20px 0;\">\r\n\r\n            <div class=\"info-header mb-3\">\r\n              <h6>正在咨询的宝贝</h6>\r\n            </div>\r\n            <div v-for=\"product in products\" :key=\"product.id\" class=\"product-item d-flex align-items-center mb-2\">\r\n              <img :src=\"product.image\" alt=\"Product\" class=\"me-2\" style=\"width: 40px; height: 40px;\">\r\n              <div>\r\n                <p class=\"mb-1\">{{ product.name }}</p>\r\n                <span class=\"text-muted\">{{ product.price }}</span>\r\n              </div>\r\n              <button class=\"btn btn-outline-primary btn-sm\" style=\"border-radius: 20px;\"\r\n                      @click=\"sendProductLink(product)\">发送宝贝链接\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <RightWidgetComponent/>\r\n  <FooterComponent ref=\"footer\" @initUserChat=\"handleInitChat\"></FooterComponent>\r\n</template>\r\n\r\n<script setup>\r\nimport {computed, nextTick, onMounted, ref} from 'vue';\r\nimport HeaderComponent from \"@/components/HeaderComponent.vue\";\r\nimport FooterComponent from \"@/components/FooterComponent.vue\";\r\nimport RightWidgetComponent from \"@/components/RightWidgetComponent.vue\";\r\nimport useUser from \"@/composables/useUser\";\r\nimport axios from \"axios\";\r\nimport {ElMessage} from \"element-plus\";\r\nimport 'emoji-picker-element';\r\nimport html2canvas from 'html2canvas';\r\nimport VueCropper from 'vue-cropperjs';\r\nimport 'cropperjs/dist/cropper.css';\r\n\r\nconst {UserInfoForm, initUserSession} = useUser();\r\nconst footer = ref(null);\r\nconst contacts = ref([]);\r\n\r\nasync function initContacts() {\r\n  try {\r\n    const response = await axios.post('/api/chat/getChatSession', {\r\n      userId: UserInfoForm.value.id\r\n    }, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      withCredentials: true\r\n    });\r\n    if (response.data !== null)\r\n      contacts.value = response.data;\r\n  } catch (err) {\r\n    ElMessage.error('获取聊天列表失败，请稍后再试')\r\n  }\r\n}\r\n\r\nasync function IsInChatSession() {\r\n  const shopId = new URLSearchParams(window.location.search).get('id');\r\n  if (shopId) {\r\n    const contactExists = ref(false);\r\n    if (Array.isArray(contacts.value) && contacts.value.length > 0) {\r\n      contacts.value.forEach(contact => {\r\n        if (contact.id === parseInt(shopId)) {\r\n          contactExists.value = true;\r\n        }\r\n      });\r\n    }\r\n    if (!contactExists.value) {\r\n      try {\r\n        const response = await axios.post('/api/chat/createChatSession', {\r\n          userId: UserInfoForm.value.id,\r\n          shopId: parseInt(shopId)\r\n        }, {\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          withCredentials: true\r\n        });\r\n        if (response.data.code === 200) {\r\n          await initContacts();\r\n        } else {\r\n          ElMessage.error('获取聊天列表失败，请稍后再试')\r\n        }\r\n      } catch (err) {\r\n        ElMessage.error('获取聊天列表失败，请稍后再试')\r\n      }\r\n    }\r\n    contacts.value = contacts.value.map(contact => {\r\n      if (contact.id === parseInt(shopId)) {\r\n        selectedContact.value = contact;\r\n      }\r\n      return contact;\r\n    });\r\n    // 切换到指定联系人，并展示聊天窗口\r\n    selectedContactIndex.value = contacts.value.findIndex(contact => contact.id === parseInt(shopId));\r\n    await selectContact(selectedContactIndex.value);\r\n  }\r\n}\r\n\r\nconst chatData = ref({});\r\n\r\nconst selectedContactIndex = ref(null);\r\nconst newMessage = ref('');\r\n\r\nconst selectedContact = computed(() => {\r\n  return selectedContactIndex.value !== null ? contacts.value[selectedContactIndex.value] : null;\r\n});\r\n\r\nasync function selectContact(index) {\r\n  selectedContactIndex.value = index;\r\n  try {\r\n    const response = await axios.post('/api/chat/getChatDetail', {\r\n      userId: UserInfoForm.value.id,\r\n      shopId: contacts.value[index].id\r\n    }, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      withCredentials: true\r\n    });\r\n    if (response.data !== null) {\r\n      const chatId = Object.keys(response.data)[0];\r\n      chatData.value[chatId] = response.data[chatId].map(msg => ({\r\n        content: msg.content,\r\n        isSelf: msg.isSelf,\r\n        isRead: msg.isRead,\r\n        contentType: msg.contentType\r\n      }));\r\n    }\r\n  } catch (err) {\r\n    ElMessage.error('获取聊天详情失败，请稍后再试')\r\n  }\r\n  await getProducts();\r\n}\r\n\r\nasync function handleInitChat(chatId) {\r\n  if (chatId) {\r\n    selectedContactIndex.value = contacts.value.findIndex(contact => contact.id === parseInt(chatId));\r\n    await selectContact(selectedContactIndex.value);\r\n    await initContacts();\r\n  }\r\n}\r\n\r\nasync function deleteContact(index) {\r\n  const contactId = contacts.value[index].id;\r\n  try {\r\n    const response = await axios.post('/api/chat/deleteChatSession', {\r\n      userId: UserInfoForm.value.id,\r\n      shopId: contactId\r\n    }, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      withCredentials: true\r\n    });\r\n    if (response.data.code === 200) {\r\n      delete chatData.value[contactId];\r\n      if (selectedContactIndex.value === index) {\r\n        selectedContactIndex.value = null;\r\n      }\r\n      await initContacts();\r\n    } else if (response.data.code === 400)\r\n      ElMessage.error('删除联系人失败，请稍后再试')\r\n  } catch (error) {\r\n    ElMessage.error('删除联系人失败，请稍后再试')\r\n  }\r\n}\r\n\r\nconst chatWindowRef = ref(null);\r\nconst showEmojiPicker = ref(false);\r\n\r\nconst toggleEmojiPicker = () => {\r\n  showEmojiPicker.value = !showEmojiPicker.value;\r\n};\r\n\r\nconst addEmoji = (event) => {\r\n  newMessage.value += event.detail.unicode;\r\n};\r\n\r\nasync function uploadImage(file) {\r\n  try {\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    formData.append('userId', UserInfoForm.value.id);\r\n    formData.append('shopId', selectedContact.value.id);\r\n    const response = await axios.post('/api/chat/uploadImage', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      },\r\n      withCredentials: true\r\n    });\r\n    if (response.data.code === 200) {\r\n      await initContacts();\r\n      await selectContact(selectedContactIndex.value);\r\n      await nextTick(() => {\r\n        const chatWindow = chatWindowRef.value;\r\n        if (chatWindow) {\r\n          chatWindow.scrollTop = chatWindow.scrollHeight;\r\n        }\r\n      });\r\n    } else\r\n      ElMessage.error('上传图片失败，请稍后再试')\r\n  } catch (err) {\r\n    ElMessage.error('上传图片失败，请稍后再试')\r\n  }\r\n}\r\n\r\nconst beforeUpload = async (file) => {\r\n  const isImage = file.type.startsWith('image/');\r\n  if (!isImage) {\r\n    ElMessage.error('请选择图片文件！');\r\n    return;\r\n  }\r\n  const isLt2M = file.size / 1024 / 1024 < 2;  // 限制文件大小为 2MB\r\n  if (!isLt2M) {\r\n    ElMessage.error('图片大小不能超过 2MB！');\r\n    return;\r\n  }\r\n  await uploadImage(file);\r\n};\r\n\r\nconst cropper = ref(null);\r\nconst imageSrc = ref(null);\r\nconst dialogVisible = ref(false);\r\n\r\nconst takeScreenshot = () => {\r\n  dialogVisible.value = true;\r\n  const element = document.body;\r\n  html2canvas(element).then(canvas => {\r\n    imageSrc.value = canvas.toDataURL('image/png');\r\n  });\r\n};\r\n\r\nasync function cropImage() {\r\n  const canvas = cropper.value.getCroppedCanvas();\r\n  const dataUrl = canvas.toDataURL('image/png');\r\n  const file = dataUrlToFile(dataUrl);\r\n  await uploadImage(file)\r\n  handleClose();\r\n}\r\n\r\nconst dataUrlToFile = (dataUrl) => {\r\n  const arr = dataUrl.split(',');\r\n  const mime = arr[0].match(/:(.*?);/)[1];\r\n  const bstr = atob(arr[1]);\r\n  let n = bstr.length;\r\n  const u8arr = new Uint8Array(n);\r\n  while (n--) {\r\n    u8arr[n] = bstr.charCodeAt(n);\r\n  }\r\n  return new File([u8arr], 'cropped-image.png', {type: mime});\r\n};\r\n\r\nconst handleClose = () => {\r\n  dialogVisible.value = false;\r\n  imageSrc.value = '';\r\n};\r\n\r\nasync function send() {\r\n  if (newMessage.value.trim() === '') return;\r\n  try {\r\n    const response = await axios.post('/api/chat/sendMessage', {\r\n      userId: UserInfoForm.value.id,\r\n      shopId: selectedContact.value.id,\r\n      message: newMessage.value\r\n    }, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      withCredentials: true\r\n    });\r\n    if (response.data.code === 200) {\r\n      await selectContact(selectedContactIndex.value);\r\n      await initContacts();\r\n      newMessage.value = '';\r\n      await nextTick(() => {\r\n        const chatWindow = chatWindowRef.value;\r\n        if (chatWindow) {\r\n          chatWindow.scrollTop = chatWindow.scrollHeight;\r\n        }\r\n      });\r\n    } else if (response.data.code === 400) {\r\n      ElMessage.error('发送消息失败，请稍后再试')\r\n    }\r\n  } catch (err) {\r\n    ElMessage.error('发送消息失败，请稍后再试')\r\n  }\r\n}\r\n\r\nconst products = ref([]);\r\n\r\nasync function getProducts() {\r\n  try {\r\n    const response = await axios.post('/api/pay/chat/getChatOrderList', {\r\n      userId: UserInfoForm.value.id,\r\n      shopId: selectedContact.value.id\r\n    }, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      withCredentials: true\r\n    });\r\n    if (response.data !== null)\r\n      products.value = response.data;\r\n  } catch (err) {\r\n    ElMessage.error('获取商品列表失败，请稍后再试')\r\n  }\r\n}\r\n\r\nasync function sendProductLink(product) {\r\n  const link = {\r\n    image: product.image,\r\n    price: product.price,\r\n    name: product.name,\r\n    id: product.id\r\n  };\r\n  try {\r\n    const response = await axios.post('/api/chat/sendOrderLink', {\r\n      userId: UserInfoForm.value.id,\r\n      shopId: selectedContact.value.id,\r\n      link: JSON.stringify(link)\r\n    }, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      withCredentials: true\r\n    });\r\n    if (response.data.code === 200) {\r\n      await selectContact(selectedContactIndex.value);\r\n      await initContacts();\r\n      await nextTick(() => {\r\n        const chatWindow = chatWindowRef.value;\r\n        if (chatWindow) {\r\n          chatWindow.scrollTop = chatWindow.scrollHeight;\r\n        }\r\n      });\r\n    } else if (response.data.code === 400) {\r\n      ElMessage.error('发送商品链接失败，请稍后再试')\r\n    }\r\n  } catch (err) {\r\n    ElMessage.error('发送商品链接失败，请稍后再试')\r\n  }\r\n}\r\n\r\nonMounted(async () => {\r\n  initUserSession();\r\n  await initContacts();\r\n  await IsInChatSession();\r\n});\r\n\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n.sidebar {\r\n  background-color: #f8f9fa;\r\n}\r\n\r\n.nav-link {\r\n  color: #495057;\r\n\r\n  &:hover {\r\n    background-color: #96CDCD;\r\n    color: #e9ecef;\r\n  }\r\n\r\n  &.active {\r\n    background-color: #e9ecef;\r\n    color: #96CDCD;\r\n  }\r\n}\r\n\r\n.main-content {\r\n  font-size: 16px;\r\n  background-color: #f1f1f1;\r\n  margin-top: 5vh;\r\n}\r\n\r\n.chat-container {\r\n  height: 100%;\r\n}\r\n\r\n.contact-list {\r\n  overflow-y: auto;\r\n}\r\n\r\n.chat-section {\r\n  overflow-y: auto;\r\n}\r\n\r\n.additional-info {\r\n  overflow-y: auto;\r\n}\r\n\r\n.input-group {\r\n  position: sticky;\r\n  bottom: 0;\r\n}\r\n\r\n.input-toolbar {\r\n  color: #495057;\r\n}\r\n\r\n.btn-primary {\r\n  background-color: #007bff;\r\n  border-color: #007bff;\r\n}\r\n\r\np.text-secondary {\r\n  margin: 0;\r\n  font-size: 0.9em;\r\n}\r\n\r\n.badge.bg-danger {\r\n  padding: 4px 8px;\r\n  font-size: 0.75em;\r\n}\r\n\r\n.chat-list {\r\n  width: 25%;\r\n}\r\n\r\n.chat-section {\r\n  width: 75%;\r\n}\r\n\r\n.active {\r\n  background-color: #e9ecef;\r\n  cursor: pointer;\r\n}\r\n\r\n.message-item.other {\r\n  background-color: #e9ecef;\r\n  text-align: left;\r\n}\r\n\r\n.message-item.self {\r\n  background-color: #dcf8c6;\r\n  text-align: right;\r\n}\r\n\r\n.message {\r\n  display: flex;\r\n  align-items: flex-start; /* 消息和头像垂直对齐 */\r\n  margin-bottom: 10px;\r\n\r\n  &.self {\r\n    flex-direction: row-reverse; /* 商家消息右侧显示 */\r\n  }\r\n\r\n  .avatar {\r\n    margin: 0 10px; /* 调整头像和消息的间距 */\r\n  }\r\n\r\n  .message-content {\r\n    padding: 10px;\r\n    border-radius: 8px;\r\n    max-width: 60%;\r\n    background: #e9ecef; /* 默认背景色 */\r\n  }\r\n\r\n  &.self .message-content {\r\n    background: #d4edda; /* 商家消息背景色 */\r\n    color: #155724; /* 商家消息文本颜色 */\r\n  }\r\n}\r\n\r\n.fade-enter-active,\r\n.fade-leave-active {\r\n  transition: opacity 0.5s;\r\n}\r\n\r\n.fade-enter,\r\n.fade-leave-to {\r\n  opacity: 0;\r\n}\r\n\r\n.message-status {\r\n  font-size: 12px;\r\n  color: #999;\r\n  margin-top: 4px;\r\n  padding: 5px;\r\n}\r\n\r\n.read-status {\r\n  color: #67C23A; /* 已读状态颜色 */\r\n}\r\n\r\n.unread-status {\r\n  color: #F56C6C; /* 未读状态颜色 */\r\n}\r\n\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { useCssVars as _useCssVars, unref as _unref } from 'vue';\nimport { computed, ref, watch } from 'vue';\nimport router from \"@/router\";\nimport axios from \"axios\";\nimport Vcode from \"vue3-puzzle-vcode\";\nimport { ElMessage } from \"element-plus\";\nimport { useThemeStore } from '@/store/themeStore';\nimport FooterLoginComponent from \"@/components/FooterLoginComponent.vue\";\nexport default {\n  __name: 'RegisterView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    _useCssVars(_ctx => ({\n      \"03589122-usernameCheckMessageColor\": usernameCheckMessageColor.value\n    }));\n    const currentStep = ref(1);\n    const username = ref('');\n    const isUsernameValid = ref(false);\n    const phoneNumber = ref('');\n    const email = ref('');\n    const isEditingPhone = ref(false);\n    const isEditingEmail = ref(false);\n    const isPhoneVerified = ref(false);\n    const password = ref('');\n    const confirmPassword = ref('');\n    const passwordStrength = ref('弱');\n    const themeStore = useThemeStore();\n    const isNightMode = computed(() => themeStore.isNightMode);\n    const usernameCheckMessage = ref('');\n    const usernameCheckMessageColor = ref('');\n    const registerForm = ref({\n      username: '',\n      phone: '',\n      email: '',\n      password: ''\n    });\n    watch(isNightMode, newVal => {\n      if (newVal) {\n        console.log(themeStore.isNightMode);\n        document.body.classList.add('night-mode');\n      } else {\n        console.log(themeStore.isNightMode);\n        document.body.classList.remove('night-mode');\n      }\n    });\n    const canCompleteRegistration = computed(() => {\n      return password.value === confirmPassword.value && passwordStrength.value !== '弱';\n    });\n    const passwordStrengthClass = computed(() => {\n      switch (passwordStrength.value) {\n        case '高':\n          return 'high-strength';\n        case '中':\n          return 'medium-strength';\n        case '弱':\n        default:\n          return 'low-strength';\n      }\n    });\n    function handleUsernameChange() {\n      isUsernameValid.value = false; // 用户名修改后需要重新检查\n      usernameCheckMessage.value = ''; // 清除之前的检查消息\n    }\n    function isValidUsername(username) {\n      const usernameRegex = /^(?!\\d)[a-zA-Z0-9_]{3,15}$/;\n      return usernameRegex.test(username);\n    }\n    async function checkUsername() {\n      // 模拟检查用户名逻辑\n      if (isValidUsername(username.value)) {\n        try {\n          const response = await axios.post('/api/user/register/check-username', {\n            username: username.value\n          }, {\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n            },\n            withCredentials: true\n          });\n          if (response.data.code === 200) {\n            isUsernameValid.value = true;\n            usernameCheckMessage.value = '用户名可用';\n            usernameCheckMessageColor.value = '#67c23a';\n          } else {\n            isUsernameValid.value = false;\n            if (response.data.code === 400) {\n              usernameCheckMessage.value = '用户名已被占用';\n              usernameCheckMessageColor.value = '#f56c6c';\n            } else if (response.data.code === 402) {\n              usernameCheckMessage.value = '用户名格式错误';\n              usernameCheckMessageColor.value = '#f56c6c';\n            }\n          }\n        } catch (error) {\n          console.error('Error during redirect:', error.message);\n          isUsernameValid.value = false;\n          usernameCheckMessage.value = '服务器错误';\n          usernameCheckMessageColor.value = '#808080';\n        }\n      } else {\n        isUsernameValid.value = false;\n        usernameCheckMessage.value = '用户名无效，应符合3到15个字符，只能包含字母、数字和下划线，且不能以数字开头';\n        usernameCheckMessageColor.value = '#f56c6c';\n      }\n    }\n\n    // 手机验证码部分\n    const waitToSms = ref(120);\n    const isButtonDisabledToSms = ref(false);\n    const buttonTextToSms = ref('获取验证码');\n    const isShowToSms = ref(false);\n    const smsForm = ref({\n      phone: '',\n      code: ''\n    });\n    const smsFormRef = ref(null);\n    watch(waitToSms, newValueToSms => {\n      if (newValueToSms === 0) {\n        isButtonDisabledToSms.value = false;\n        buttonTextToSms.value = '获取验证码';\n        waitToSms.value = 60; // 重置计时器\n      } else {\n        buttonTextToSms.value = `${newValueToSms}秒后可以重新发送`;\n      }\n    });\n    async function SelectPhone(phone) {\n      try {\n        const response = await axios.post('/api/user/register/selectPhone', {\n          phone: phone\n        }, {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          withCredentials: true\n        });\n        return response.data.code === 200;\n      } catch (error) {\n        ElMessage.error('服务器错误，请稍后再试！');\n        return false;\n      }\n    }\n    async function CheckPhoneNumberToSms() {\n      if (smsForm.value.phone.length === 0) {\n        ElMessage.error('请输入手机号码！');\n        return;\n      } else if (!/^1[3-9]\\d{9}$/.test(smsForm.value.phone)) {\n        ElMessage.error('请输入正确的手机号码！');\n        return;\n      }\n      if ((await SelectPhone(smsForm.value.phone)) === true) {\n        onShowToSms();\n      } else {\n        ElMessage.error('手机号已被占用，请重新输入！');\n      }\n    }\n\n    // 人机验证部分\n    const onShowToSms = () => {\n      isShowToSms.value = true;\n    };\n    const onCloseToSms = () => {\n      isShowToSms.value = false;\n    };\n    const onSuccessToSms = () => {\n      onCloseToSms(); // 验证成功，需要手动关闭模态框\n      getMsgNumToSms(); // 获取验证码\n    };\n\n    // 获取验证码\n    async function getMsgNumToSms() {\n      setButtonStatusToSms(); // 设置按钮状态\n      try {\n        const response = await axios.post('/api/sms/smsXxs', {\n          phoneNumber: smsForm.value.phone\n        }, {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          withCredentials: true\n        });\n        if (response.data.isOk === \"OK\") {\n          ElMessage.success('验证码已发送到您的手机，请注意查收！');\n        } else {\n          ElMessage.error('验证码发送失败，请稍后再试！');\n        }\n      } catch (error) {\n        console.error(\"发送验证码错误:\", error);\n      }\n    }\n\n    // 设置按钮状态\n    function setButtonStatusToSms() {\n      isButtonDisabledToSms.value = true;\n      waitToSms.value = waitToSms.value > 0 ? waitToSms.value : 120; // 确保初始值有效\n      countdownToSms();\n    }\n\n    // 计时功能\n    function countdownToSms() {\n      if (waitToSms.value > 0) {\n        setTimeout(() => {\n          waitToSms.value -= 1;\n          countdownToSms();\n        }, 1000);\n      }\n    }\n    async function validateNumToSms() {\n      if (smsForm.value.phone.length === 0 || smsForm.value.phone.length === 0) {\n        ElMessage.error('请输入手机号码和验证码！');\n        return;\n      }\n      const data = {\n        verifyCode: smsForm.value.code,\n        phone: smsForm.value.phone\n      };\n      try {\n        await smsFormRef.value.validate();\n        const response = await axios.post('/api/sms/validateNum', data, {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          withCredentials: true\n        });\n        console.log(response.data);\n        if (response.data.result === 404) {\n          ElMessage.error('过期验证码已失效!');\n        } else if (response.data.result === 500) {\n          ElMessage.error('验证码错误，请重新输入！');\n        } else {\n          ElMessage.success('验证成功！');\n          isPhoneVerified.value = true;\n          phoneNumber.value = smsForm.value.phone;\n          isEditingPhone.value = true;\n        }\n      } catch (error) {\n        console.error(\"验证错误:\", error);\n      }\n    }\n\n    // 邮箱验证部分\n    const waitToEmail = ref(120);\n    const isButtonDisabledToEmail = ref(false);\n    const buttonTextToEmail = ref('获取验证码');\n    const isShowToEmail = ref(false);\n    const emailForm = ref({\n      email: '',\n      code: ''\n    });\n    const emailFormRef = ref(null);\n    watch(waitToEmail, newValueToEmail => {\n      if (newValueToEmail === 0) {\n        isButtonDisabledToEmail.value = false;\n        buttonTextToEmail.value = '获取验证码';\n        waitToEmail.value = 30; // 重置计时器\n      } else {\n        buttonTextToEmail.value = `${newValueToEmail}秒后可以重新发送`;\n      }\n    });\n    async function SelectEmail(email) {\n      try {\n        const response = await axios.post('/api/user/register/selectEmail', {\n          email: email\n        }, {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          withCredentials: true\n        });\n        return response.data.code === 200;\n      } catch (error) {\n        ElMessage.error('服务器错误，请稍后再试！');\n        return false;\n      }\n    }\n    async function CheckPhoneNumberToEmail() {\n      console.log(emailForm.value.email);\n      if (emailForm.value.email.length === 0) {\n        ElMessage.error('请输入邮箱！');\n        return;\n      } else if (!/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/.test(emailForm.value.email)) {\n        ElMessage.error('请输入正确的邮箱地址！');\n        return;\n      }\n      if ((await SelectEmail(emailForm.value.email)) === true) {\n        onShowToEmail();\n      } else {\n        ElMessage.error('邮箱已被占用，请重新输入！');\n      }\n    }\n\n    // 人机验证部分\n    const onShowToEmail = () => {\n      isShowToEmail.value = true;\n    };\n    const onCloseToEmail = () => {\n      isShowToEmail.value = false;\n    };\n    const onSuccessToEmail = () => {\n      onCloseToEmail(); // 验证成功，需要手动关闭模态框\n      getMsgNumToEmail(); // 获取验证码\n    };\n\n    // 获取验证码\n    async function getMsgNumToEmail() {\n      setButtonStatusToEmail(); // 设置按钮状态\n      try {\n        const response = await axios.post('/api/email/send', {\n          email: emailForm.value.email\n        }, {}, {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          withCredentials: true\n        });\n        if (response.data.code === 200) {\n          ElMessage.success('验证码已发送到您的邮箱，请注意查收！');\n        } else {\n          ElMessage.error('验证码发送失败，请稍后再试！');\n        }\n      } catch (error) {\n        console.error(\"发送验证码错误:\", error);\n      }\n    }\n\n    // 设置按钮状态\n    function setButtonStatusToEmail() {\n      isButtonDisabledToEmail.value = true;\n      waitToEmail.value = waitToEmail.value > 0 ? waitToEmail.value : 30; // 确保初始值有效\n      countdownToEmail();\n    }\n\n    // 计时功能\n    function countdownToEmail() {\n      if (waitToEmail.value > 0) {\n        setTimeout(() => {\n          waitToEmail.value -= 1;\n          countdownToEmail();\n        }, 1000);\n      }\n    }\n    async function validateNumToEmail() {\n      if (emailForm.value.email.length === 0 || emailForm.value.code.length === 0) {\n        ElMessage.error('请输入邮箱和验证码！');\n        return;\n      }\n      const data = {\n        verCode: emailForm.value.code,\n        email: emailForm.value.email\n      };\n      try {\n        await emailFormRef.value.validate();\n        const response = await axios.post('/api/email/validateNum', data, {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          withCredentials: true\n        });\n        console.log(response.data);\n        if (response.data.code === 400) {\n          ElMessage.error('过期验证码已失效!');\n        } else if (response.data.code === 500) {\n          ElMessage.error('验证码错误，请重新输入！');\n        } else {\n          ElMessage.success('验证成功！');\n          registerForm.value.email = emailForm.value.email;\n          email.value = emailForm.value.email;\n          isEditingEmail.value = true;\n        }\n      } catch (error) {\n        console.error(\"验证错误:\", error);\n      }\n    }\n    function nextStep() {\n      registerForm.value.username = username.value;\n      registerForm.value.phone = phoneNumber.value;\n      registerForm.value.email = email.value;\n      registerForm.value.password = password.value;\n      console.log(registerForm.value);\n      currentStep.value++;\n    }\n    function checkPasswordStrength() {\n      const passwordValue = password.value;\n      let strength = '弱';\n\n      // 判断密码长度\n      const lengthCriteria = passwordValue.length >= 8;\n      const hasUpperCase = /[A-Z]/.test(passwordValue);\n      const hasLowerCase = /[a-z]/.test(passwordValue);\n      const hasNumbers = /\\d/.test(passwordValue);\n      const hasSpecialChars = /[!@#$%^&*(),.?\":{}|<>]/.test(passwordValue);\n\n      // 强度等级判断\n      const criteriaMet = [lengthCriteria, hasUpperCase, hasLowerCase, hasNumbers, hasSpecialChars].filter(Boolean).length;\n      if (criteriaMet >= 4) {\n        strength = '高';\n      } else if (criteriaMet >= 2) {\n        strength = '中';\n      }\n      passwordStrength.value = strength;\n    }\n    function completeRegistration() {\n      if (password.value === confirmPassword.value && passwordStrength.value !== '弱') {\n        registerForm.value.password = password.value;\n        console.log(registerForm.value);\n        axios.post('/api/user/register', registerForm.value, {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          withCredentials: true\n        }).then(response => {\n          if (response.data.code === 200) {\n            ElMessage.success('注册成功，即将跳转登录页面！');\n            setTimeout(() => {\n              handleHome();\n            }, 1500);\n          } else {\n            ElMessage.error('注册失败，请稍后再试！');\n          }\n        }).catch(error => {\n          console.error('Error during registration:', error.message);\n          ElMessage.error('注册失败，请稍后再试！');\n        });\n      } else {\n        ElMessage.error('密码不符合要求，请重新输入！');\n      }\n    }\n    function handleLogin() {\n      router.push('/login');\n    }\n    function handleMerchant() {\n      router.push('/store/login');\n    }\n    async function handleHome() {\n      await router.push('/');\n    }\n    const __returned__ = {\n      currentStep,\n      username,\n      isUsernameValid,\n      phoneNumber,\n      email,\n      isEditingPhone,\n      isEditingEmail,\n      isPhoneVerified,\n      password,\n      confirmPassword,\n      passwordStrength,\n      themeStore,\n      isNightMode,\n      usernameCheckMessage,\n      usernameCheckMessageColor,\n      registerForm,\n      canCompleteRegistration,\n      passwordStrengthClass,\n      handleUsernameChange,\n      isValidUsername,\n      checkUsername,\n      waitToSms,\n      isButtonDisabledToSms,\n      buttonTextToSms,\n      isShowToSms,\n      smsForm,\n      smsFormRef,\n      SelectPhone,\n      CheckPhoneNumberToSms,\n      onShowToSms,\n      onCloseToSms,\n      onSuccessToSms,\n      getMsgNumToSms,\n      setButtonStatusToSms,\n      countdownToSms,\n      validateNumToSms,\n      waitToEmail,\n      isButtonDisabledToEmail,\n      buttonTextToEmail,\n      isShowToEmail,\n      emailForm,\n      emailFormRef,\n      SelectEmail,\n      CheckPhoneNumberToEmail,\n      onShowToEmail,\n      onCloseToEmail,\n      onSuccessToEmail,\n      getMsgNumToEmail,\n      setButtonStatusToEmail,\n      countdownToEmail,\n      validateNumToEmail,\n      nextStep,\n      checkPasswordStrength,\n      completeRegistration,\n      handleLogin,\n      handleMerchant,\n      handleHome,\n      computed,\n      ref,\n      watch,\n      get router() {\n        return router;\n      },\n      get axios() {\n        return axios;\n      },\n      get Vcode() {\n        return Vcode;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get useThemeStore() {\n        return useThemeStore;\n      },\n      FooterLoginComponent\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["computed","ref","watch","router","axios","Vcode","ElMessage","useThemeStore","FooterLoginComponent","currentStep","username","isUsernameValid","phoneNumber","email","isEditingPhone","isEditingEmail","isPhoneVerified","password","confirmPassword","passwordStrength","themeStore","isNightMode","usernameCheckMessage","usernameCheckMessageColor","registerForm","phone","newVal","console","log","document","body","classList","add","remove","canCompleteRegistration","value","passwordStrengthClass","handleUsernameChange","isValidUsername","usernameRegex","test","checkUsername","response","post","headers","withCredentials","data","code","error","message","waitToSms","isButtonDisabledToSms","buttonTextToSms","isShowToSms","smsForm","smsFormRef","newValueToSms","SelectPhone","CheckPhoneNumberToSms","length","onShowToSms","onCloseToSms","onSuccessToSms","getMsgNumToSms","setButtonStatusToSms","isOk","success","countdownToSms","setTimeout","validateNumToSms","verifyCode","validate","result","waitToEmail","isButtonDisabledToEmail","buttonTextToEmail","isShowToEmail","emailForm","emailFormRef","newValueToEmail","SelectEmail","CheckPhoneNumberToEmail","onShowToEmail","onCloseToEmail","onSuccessToEmail","getMsgNumToEmail","setButtonStatusToEmail","countdownToEmail","validateNumToEmail","verCode","nextStep","checkPasswordStrength","passwordValue","strength","lengthCriteria","hasUpperCase","hasLowerCase","hasNumbers","hasSpecialChars","criteriaMet","filter","Boolean","completeRegistration","then","handleHome","catch","handleLogin","push","handleMerchant"],"sources":["D:/Cache/Java/shopping/shoppping_c_frontend/src/views/RegisterView.vue"],"sourcesContent":["<template xmlns=\"http://www.w3.org/1999/xhtml\">\r\n  <el-container class=\"register-container\" :class=\"{ 'night-mode': isNightMode }\">\r\n    <el-header class=\"register-logo header-left\">\r\n      <img src=\"../images/logo.png\" alt=\"Logo\" class=\"logo-img\" @click=\"handleHome\"/>\r\n      <span class=\"header-title\">用户注册</span>\r\n    </el-header>\r\n    <el-main class=\"register-content\">\r\n      <div class=\"register-section\" style=\"display: flex; width: 100%; align-items: center;\">\r\n        <div class=\"registration-steps-section\">\r\n          <div class=\"step-indicator\">\r\n            <p>\r\n              <span\r\n                  :class=\"['step-box step-box-enhanced', { 'active-step': currentStep === 1, 'breathing-border': currentStep === 1 }]\">\r\n                输入用户名</span>\r\n              <img src=\"../images/arrow.png\" alt=\"箭头\" class=\"arrow-icon\"/>\r\n              <span\r\n                  :class=\"['step-box step-box-enhanced', { 'active-step': currentStep === 2, 'breathing-border': currentStep === 2 }]\">\r\n                验证手机号和邮箱</span>\r\n              <img src=\"../images/arrow.png\" alt=\"箭头\" class=\"arrow-icon\"/>\r\n              <span\r\n                  :class=\"['step-box step-box-enhanced', { 'active-step': currentStep === 3, 'breathing-border': currentStep === 3 }]\">\r\n                输入密码</span>\r\n            </p>\r\n          </div>\r\n\r\n          <div v-if=\"currentStep === 1\" class=\"step-content\">\r\n            <h3 class=\"step-title\">步骤 1: 输入用户名</h3>\r\n            <div class=\"username-check-container\" style=\"display: flex; align-items: center; gap: 10px;\">\r\n              <el-input v-model=\"username\" placeholder=\"请输入用户名\" @input=\"handleUsernameChange\" clearable\r\n                        class=\"username-input\"></el-input>\r\n              <el-button type=\"primary\" @click=\"checkUsername\" class=\"check-username-button\">检查用户名</el-button>\r\n            </div>\r\n            <p v-if=\"usernameCheckMessage\" class=\"username-check-message\">{{ usernameCheckMessage }}</p>\r\n            <el-button type=\"primary\" :disabled=\"!isUsernameValid\" :class=\"{ 'disabled-button': !isUsernameValid }\"\r\n                       @click=\"nextStep\" block class=\"register-button\"\r\n                       style=\"margin-top: 10px;\">下一步\r\n            </el-button>\r\n          </div>\r\n          <div v-if=\"currentStep === 2\" class=\"step-content\">\r\n            <h3 class=\"step-title\">步骤 2: 验证手机号和邮箱</h3>\r\n            <el-form :model=\"smsForm\" status-icon ref=\"smsFormRef\">\r\n              <el-input v-model=\"smsForm.phone\" id=\"phone\" placeholder=\"手机号\" class=\"custom-input\"\r\n                        :disabled=\"isEditingPhone\"></el-input>\r\n              <el-row :gutter=\"10\">\r\n                <el-col :span=\"14\">\r\n                  <el-input v-model=\"smsForm.code\" placeholder=\"验证码\" class=\"custom-input\"></el-input>\r\n                </el-col>\r\n                <el-col :span=\"10\">\r\n                  <el-button\r\n                      id=\"captcha-button\"\r\n                      type=\"primary\"\r\n                      :disabled=\"isButtonDisabledToSms\"\r\n                      @click=\"CheckPhoneNumberToSms\"\r\n                      class=\"sms-code-button\">\r\n                    {{ buttonTextToSms }}\r\n                  </el-button>\r\n                </el-col>\r\n              </el-row>\r\n              <Vcode :show=\"isShowToSms\" @success=\"onSuccessToSms\" @close=\"onCloseToSms\"/>\r\n              <el-form-item>\r\n                <el-button type=\"primary\" @click=\"validateNumToSms\" block class=\"login-button\">验证</el-button>\r\n              </el-form-item>\r\n            </el-form>\r\n            <el-form :model=\"emailForm\" status-icon ref=\"emailFormRef\">\r\n              <el-input v-model=\"emailForm.email\" id=\"email\" placeholder=\"邮箱(选填)\" class=\"custom-input\"\r\n                        :disabled=\"isEditingEmail\"></el-input>\r\n              <el-row :gutter=\"10\">\r\n                <el-col :span=\"14\">\r\n                  <el-input v-model=\"emailForm.code\" placeholder=\"验证码\" class=\"custom-input\"></el-input>\r\n                </el-col>\r\n                <el-col :span=\"10\">\r\n                  <el-button\r\n                      id=\"captcha-button\"\r\n                      type=\"primary\"\r\n                      :disabled=\"isButtonDisabledToEmail\"\r\n                      @click=\"CheckPhoneNumberToEmail\"\r\n                      class=\"sms-code-button\">\r\n                    {{ buttonTextToEmail }}\r\n                  </el-button>\r\n                </el-col>\r\n              </el-row>\r\n              <Vcode :show=\"isShowToEmail\" @success=\"onSuccessToEmail\" @close=\"onCloseToEmail\"/>\r\n              <el-form-item>\r\n                <el-button type=\"primary\" @click=\"validateNumToEmail\" block class=\"login-button\">验证</el-button>\r\n              </el-form-item>\r\n            </el-form>\r\n            <el-button type=\"primary\" :disabled=\"!isPhoneVerified\" :class=\"{ 'disabled-button': !isPhoneVerified }\"\r\n                       @click=\"nextStep\" block class=\"register-button\"\r\n                       style=\"margin-top: 10px;\">下一步\r\n            </el-button>\r\n          </div>\r\n          <div v-if=\"currentStep === 3\" class=\"step-content\">\r\n            <h3 class=\"step-title\">步骤 3: 输入密码</h3>\r\n            <el-input v-model=\"password\" type=\"password\" placeholder=\"请输入密码\" @input=\"checkPasswordStrength\"\r\n                      show-password class=\"custom-input\"></el-input>\r\n            <div class=\"password-strength-wrapper\">\r\n              <div class=\"password-strength-bar\">\r\n                <div class=\"strength-segment\"\r\n                     :class=\"{ 'low-strength-segment': passwordStrength === '弱' ,'medium-strength-segment': passwordStrength === '中' ,'high-strength-segment': passwordStrength === '高' }\"></div>\r\n                <div class=\"strength-segment\"\r\n                     :class=\"{ 'medium-strength-segment': passwordStrength === '中','high-strength-segment': passwordStrength === '高' }\"></div>\r\n                <div class=\"strength-segment\" :class=\"{ 'high-strength-segment': passwordStrength === '高' }\"></div>\r\n              </div>\r\n              <span :class=\"passwordStrengthClass\">{{ passwordStrength }}</span>\r\n            </div>\r\n            <el-input v-model=\"confirmPassword\" type=\"password\" placeholder=\"确认密码\" show-password\r\n                      class=\"custom-input\" @paste.prevent=\"\"></el-input>\r\n            <el-button type=\"primary\" :disabled=\"!canCompleteRegistration\"\r\n                       :class=\"{ 'disabled-button': !canCompleteRegistration }\" @click=\"completeRegistration\" block\r\n                       class=\"register-button\" style=\"margin-top: 10px;\">完成注册\r\n            </el-button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <a href=\"/merchant\" class=\"merchant-link\" @click=\"handleMerchant\">成为商家，点我跳转</a>\r\n      <a @click=\"handleLogin\" class=\"login-link\">已有账号，返回登录</a>\r\n    </el-main>\r\n    <el-aside class=\"night-mode-toggle\">\r\n      <el-switch v-model=\"themeStore.isNightMode\" active-text=\"夜间模式\" inactive-text=\"白天模式\"></el-switch>\r\n    </el-aside>\r\n    <FooterLoginComponent/>\r\n  </el-container>\r\n</template>\r\n\r\n<script setup>\r\nimport {computed, ref, watch} from 'vue';\r\nimport router from \"@/router\";\r\nimport axios from \"axios\";\r\nimport Vcode from \"vue3-puzzle-vcode\";\r\nimport {ElMessage} from \"element-plus\";\r\nimport {useThemeStore} from '@/store/themeStore';\r\nimport FooterLoginComponent from \"@/components/FooterLoginComponent.vue\";\r\n\r\nconst currentStep = ref(1);\r\nconst username = ref('');\r\nconst isUsernameValid = ref(false);\r\nconst phoneNumber = ref('');\r\nconst email = ref('');\r\nconst isEditingPhone = ref(false);\r\nconst isEditingEmail = ref(false);\r\nconst isPhoneVerified = ref(false);\r\nconst password = ref('');\r\nconst confirmPassword = ref('');\r\nconst passwordStrength = ref('弱');\r\nconst themeStore = useThemeStore();\r\nconst isNightMode = computed(() => themeStore.isNightMode);\r\nconst usernameCheckMessage = ref('');\r\nconst usernameCheckMessageColor = ref('');\r\n\r\nconst registerForm = ref({\r\n  username: '',\r\n  phone: '',\r\n  email: '',\r\n  password: ''\r\n});\r\n\r\nwatch(isNightMode, (newVal) => {\r\n  if (newVal) {\r\n    console.log(themeStore.isNightMode);\r\n    document.body.classList.add('night-mode');\r\n  } else {\r\n    console.log(themeStore.isNightMode);\r\n    document.body.classList.remove('night-mode');\r\n  }\r\n});\r\n\r\nconst canCompleteRegistration = computed(() => {\r\n  return password.value === confirmPassword.value && passwordStrength.value !== '弱';\r\n});\r\n\r\nconst passwordStrengthClass = computed(() => {\r\n  switch (passwordStrength.value) {\r\n    case '高':\r\n      return 'high-strength';\r\n    case '中':\r\n      return 'medium-strength';\r\n    case '弱':\r\n    default:\r\n      return 'low-strength';\r\n  }\r\n});\r\n\r\nfunction handleUsernameChange() {\r\n  isUsernameValid.value = false; // 用户名修改后需要重新检查\r\n  usernameCheckMessage.value = ''; // 清除之前的检查消息\r\n}\r\n\r\nfunction isValidUsername(username) {\r\n  const usernameRegex = /^(?!\\d)[a-zA-Z0-9_]{3,15}$/;\r\n\r\n  return usernameRegex.test(username);\r\n}\r\n\r\nasync function checkUsername() {\r\n  // 模拟检查用户名逻辑\r\n  if (isValidUsername(username.value)) {\r\n    try {\r\n      const response = await axios.post('/api/user/register/check-username', {\r\n        username: username.value,\r\n      }, {\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json'\r\n        },\r\n        withCredentials: true\r\n      });\r\n      if (response.data.code === 200) {\r\n        isUsernameValid.value = true;\r\n        usernameCheckMessage.value = '用户名可用';\r\n        usernameCheckMessageColor.value = '#67c23a';\r\n      } else {\r\n        isUsernameValid.value = false;\r\n        if (response.data.code === 400) {\r\n          usernameCheckMessage.value = '用户名已被占用';\r\n          usernameCheckMessageColor.value = '#f56c6c';\r\n        } else if (response.data.code === 402) {\r\n          usernameCheckMessage.value = '用户名格式错误';\r\n          usernameCheckMessageColor.value = '#f56c6c';\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during redirect:', error.message);\r\n      isUsernameValid.value = false;\r\n      usernameCheckMessage.value = '服务器错误';\r\n      usernameCheckMessageColor.value = '#808080';\r\n    }\r\n  } else {\r\n    isUsernameValid.value = false;\r\n    usernameCheckMessage.value = '用户名无效，应符合3到15个字符，只能包含字母、数字和下划线，且不能以数字开头';\r\n    usernameCheckMessageColor.value = '#f56c6c';\r\n  }\r\n}\r\n\r\n// 手机验证码部分\r\nconst waitToSms = ref(120);\r\nconst isButtonDisabledToSms = ref(false);\r\nconst buttonTextToSms = ref('获取验证码');\r\nconst isShowToSms = ref(false);\r\nconst smsForm = ref({\r\n  phone: '',\r\n  code: ''\r\n});\r\nconst smsFormRef = ref(null);\r\n\r\nwatch(waitToSms, (newValueToSms) => {\r\n  if (newValueToSms === 0) {\r\n    isButtonDisabledToSms.value = false;\r\n    buttonTextToSms.value = '获取验证码';\r\n    waitToSms.value = 60; // 重置计时器\r\n  } else {\r\n    buttonTextToSms.value = `${newValueToSms}秒后可以重新发送`;\r\n  }\r\n});\r\n\r\nasync function SelectPhone(phone) {\r\n  try {\r\n    const response = await axios.post('/api/user/register/selectPhone', {\r\n      phone: phone\r\n    }, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      withCredentials: true\r\n    });\r\n    return response.data.code === 200;\r\n  } catch (error) {\r\n    ElMessage.error('服务器错误，请稍后再试！');\r\n    return false;\r\n  }\r\n}\r\n\r\nasync function CheckPhoneNumberToSms() {\r\n  if (smsForm.value.phone.length === 0) {\r\n    ElMessage.error('请输入手机号码！');\r\n    return;\r\n  } else if (!/^1[3-9]\\d{9}$/.test(smsForm.value.phone)) {\r\n    ElMessage.error('请输入正确的手机号码！');\r\n    return;\r\n  }\r\n  if (await SelectPhone(smsForm.value.phone) === true) {\r\n    onShowToSms();\r\n  } else {\r\n    ElMessage.error('手机号已被占用，请重新输入！');\r\n  }\r\n}\r\n\r\n// 人机验证部分\r\nconst onShowToSms = () => {\r\n  isShowToSms.value = true;\r\n};\r\n\r\nconst onCloseToSms = () => {\r\n  isShowToSms.value = false;\r\n};\r\n\r\nconst onSuccessToSms = () => {\r\n  onCloseToSms(); // 验证成功，需要手动关闭模态框\r\n  getMsgNumToSms(); // 获取验证码\r\n};\r\n\r\n// 获取验证码\r\nasync function getMsgNumToSms() {\r\n  setButtonStatusToSms(); // 设置按钮状态\r\n  try {\r\n    const response = await axios.post('/api/sms/smsXxs', {\r\n      phoneNumber: smsForm.value.phone,\r\n    }, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      withCredentials: true\r\n    });\r\n\r\n    if (response.data.isOk === \"OK\") {\r\n      ElMessage.success('验证码已发送到您的手机，请注意查收！');\r\n    } else {\r\n      ElMessage.error('验证码发送失败，请稍后再试！');\r\n    }\r\n  } catch (error) {\r\n    console.error(\"发送验证码错误:\", error);\r\n  }\r\n}\r\n\r\n// 设置按钮状态\r\nfunction setButtonStatusToSms() {\r\n  isButtonDisabledToSms.value = true;\r\n  waitToSms.value = waitToSms.value > 0 ? waitToSms.value : 120; // 确保初始值有效\r\n  countdownToSms();\r\n}\r\n\r\n// 计时功能\r\nfunction countdownToSms() {\r\n  if (waitToSms.value > 0) {\r\n    setTimeout(() => {\r\n      waitToSms.value -= 1;\r\n      countdownToSms();\r\n    }, 1000);\r\n  }\r\n}\r\n\r\nasync function validateNumToSms() {\r\n  if (smsForm.value.phone.length === 0 || smsForm.value.phone.length === 0) {\r\n    ElMessage.error('请输入手机号码和验证码！');\r\n    return;\r\n  }\r\n  const data = {\r\n    verifyCode: smsForm.value.code,\r\n    phone: smsForm.value.phone,\r\n  };\r\n\r\n  try {\r\n    await smsFormRef.value.validate();\r\n    const response = await axios.post('/api/sms/validateNum', data, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      withCredentials: true\r\n    });\r\n    console.log(response.data);\r\n    if (response.data.result === 404) {\r\n      ElMessage.error('过期验证码已失效!');\r\n    } else if (response.data.result === 500) {\r\n      ElMessage.error('验证码错误，请重新输入！');\r\n    } else {\r\n      ElMessage.success('验证成功！');\r\n      isPhoneVerified.value = true;\r\n      phoneNumber.value = smsForm.value.phone;\r\n      isEditingPhone.value = true;\r\n    }\r\n  } catch (error) {\r\n    console.error(\"验证错误:\", error);\r\n  }\r\n}\r\n\r\n// 邮箱验证部分\r\nconst waitToEmail = ref(120);\r\nconst isButtonDisabledToEmail = ref(false);\r\nconst buttonTextToEmail = ref('获取验证码');\r\nconst isShowToEmail = ref(false);\r\nconst emailForm = ref({\r\n  email: '',\r\n  code: ''\r\n});\r\nconst emailFormRef = ref(null);\r\n\r\nwatch(waitToEmail, (newValueToEmail) => {\r\n  if (newValueToEmail === 0) {\r\n    isButtonDisabledToEmail.value = false;\r\n    buttonTextToEmail.value = '获取验证码';\r\n    waitToEmail.value = 30; // 重置计时器\r\n  } else {\r\n    buttonTextToEmail.value = `${newValueToEmail}秒后可以重新发送`;\r\n  }\r\n});\r\n\r\nasync function SelectEmail(email) {\r\n  try {\r\n    const response = await axios.post('/api/user/register/selectEmail', {\r\n      email: email\r\n    }, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      withCredentials: true\r\n    });\r\n    return response.data.code === 200;\r\n  } catch (error) {\r\n    ElMessage.error('服务器错误，请稍后再试！');\r\n    return false;\r\n  }\r\n}\r\n\r\nasync function CheckPhoneNumberToEmail() {\r\n  console.log(emailForm.value.email);\r\n  if (emailForm.value.email.length === 0) {\r\n    ElMessage.error('请输入邮箱！');\r\n    return;\r\n  } else if (!/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/.test(emailForm.value.email)) {\r\n    ElMessage.error('请输入正确的邮箱地址！');\r\n    return;\r\n  }\r\n  if (await SelectEmail(emailForm.value.email) === true) {\r\n    onShowToEmail();\r\n  } else {\r\n    ElMessage.error('邮箱已被占用，请重新输入！');\r\n  }\r\n}\r\n\r\n// 人机验证部分\r\nconst onShowToEmail = () => {\r\n  isShowToEmail.value = true;\r\n};\r\n\r\nconst onCloseToEmail = () => {\r\n  isShowToEmail.value = false;\r\n};\r\n\r\nconst onSuccessToEmail = () => {\r\n  onCloseToEmail(); // 验证成功，需要手动关闭模态框\r\n  getMsgNumToEmail(); // 获取验证码\r\n};\r\n\r\n// 获取验证码\r\nasync function getMsgNumToEmail() {\r\n  setButtonStatusToEmail(); // 设置按钮状态\r\n  try {\r\n    const response = await axios.post('/api/email/send', {\r\n      email: emailForm.value.email,\r\n    }, {}, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      withCredentials: true\r\n    });\r\n\r\n    if (response.data.code === 200) {\r\n      ElMessage.success('验证码已发送到您的邮箱，请注意查收！');\r\n    } else {\r\n      ElMessage.error('验证码发送失败，请稍后再试！');\r\n    }\r\n  } catch (error) {\r\n    console.error(\"发送验证码错误:\", error);\r\n  }\r\n}\r\n\r\n// 设置按钮状态\r\nfunction setButtonStatusToEmail() {\r\n  isButtonDisabledToEmail.value = true;\r\n  waitToEmail.value = waitToEmail.value > 0 ? waitToEmail.value : 30; // 确保初始值有效\r\n  countdownToEmail();\r\n}\r\n\r\n// 计时功能\r\nfunction countdownToEmail() {\r\n  if (waitToEmail.value > 0) {\r\n    setTimeout(() => {\r\n      waitToEmail.value -= 1;\r\n      countdownToEmail();\r\n    }, 1000);\r\n  }\r\n}\r\n\r\nasync function validateNumToEmail() {\r\n  if (emailForm.value.email.length === 0 || emailForm.value.code.length === 0) {\r\n    ElMessage.error('请输入邮箱和验证码！');\r\n    return;\r\n  }\r\n  const data = {\r\n    verCode: emailForm.value.code,\r\n    email: emailForm.value.email,\r\n  };\r\n\r\n  try {\r\n    await emailFormRef.value.validate();\r\n    const response = await axios.post('/api/email/validateNum', data, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      withCredentials: true\r\n    });\r\n    console.log(response.data);\r\n    if (response.data.code === 400) {\r\n      ElMessage.error('过期验证码已失效!');\r\n    } else if (response.data.code === 500) {\r\n      ElMessage.error('验证码错误，请重新输入！');\r\n    } else {\r\n      ElMessage.success('验证成功！');\r\n      registerForm.value.email = emailForm.value.email;\r\n      email.value = emailForm.value.email;\r\n      isEditingEmail.value = true;\r\n    }\r\n  } catch (error) {\r\n    console.error(\"验证错误:\", error);\r\n  }\r\n}\r\n\r\nfunction nextStep() {\r\n  registerForm.value.username = username.value;\r\n  registerForm.value.phone = phoneNumber.value;\r\n  registerForm.value.email = email.value;\r\n  registerForm.value.password = password.value;\r\n  console.log(registerForm.value);\r\n  currentStep.value++;\r\n}\r\n\r\nfunction checkPasswordStrength() {\r\n  const passwordValue = password.value;\r\n  let strength = '弱';\r\n\r\n  // 判断密码长度\r\n  const lengthCriteria = passwordValue.length >= 8;\r\n  const hasUpperCase = /[A-Z]/.test(passwordValue);\r\n  const hasLowerCase = /[a-z]/.test(passwordValue);\r\n  const hasNumbers = /\\d/.test(passwordValue);\r\n  const hasSpecialChars = /[!@#$%^&*(),.?\":{}|<>]/.test(passwordValue);\r\n\r\n  // 强度等级判断\r\n  const criteriaMet = [lengthCriteria, hasUpperCase, hasLowerCase, hasNumbers, hasSpecialChars].filter(Boolean).length;\r\n\r\n  if (criteriaMet >= 4) {\r\n    strength = '高';\r\n  } else if (criteriaMet >= 2) {\r\n    strength = '中';\r\n  }\r\n  passwordStrength.value = strength;\r\n}\r\n\r\nfunction completeRegistration() {\r\n  if (password.value === confirmPassword.value && passwordStrength.value !== '弱') {\r\n    registerForm.value.password = password.value;\r\n    console.log(registerForm.value);\r\n    axios.post('/api/user/register', registerForm.value, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      withCredentials: true\r\n    }).then(response => {\r\n      if (response.data.code === 200) {\r\n        ElMessage.success('注册成功，即将跳转登录页面！');\r\n        setTimeout(() => {\r\n          handleHome();\r\n        }, 1500);\r\n      } else {\r\n        ElMessage.error('注册失败，请稍后再试！');\r\n      }\r\n    }).catch(error => {\r\n      console.error('Error during registration:', error.message);\r\n      ElMessage.error('注册失败，请稍后再试！');\r\n    });\r\n  } else {\r\n    ElMessage.error('密码不符合要求，请重新输入！');\r\n  }\r\n}\r\n\r\nfunction handleLogin() {\r\n  router.push('/login');\r\n}\r\n\r\n\r\nfunction handleMerchant() {\r\n  router.push('/store/login');\r\n}\r\n\r\nasync function handleHome() {\r\n  await router.push('/');\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.register-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 40px;\r\n  background-color: #f7f7f7;\r\n  height: 100vh;\r\n  justify-content: space-between;\r\n}\r\n\r\n.register-logo {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-top: 20px;\r\n  position: absolute;\r\n  top: 20px;\r\n  left: 20px;\r\n}\r\n\r\n.logo-img {\r\n  height: 80px;\r\n}\r\n\r\n.header-title {\r\n  margin-left: 15px;\r\n  font-size: 28px;\r\n  color: #668B8B;\r\n  font-weight: bold;\r\n  line-height: 1;\r\n}\r\n\r\n.register-content {\r\n  max-height: 65vh;\r\n  display: flex;\r\n  width: 100%;\r\n  max-width: 900px;\r\n  padding: 20px;\r\n  background-color: #fff;\r\n  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);\r\n  border-radius: 12px;\r\n  position: relative;\r\n  top: 20vh;\r\n}\r\n\r\n.register-section {\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n}\r\n\r\n.step-indicator {\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n  color: #333;\r\n}\r\n\r\n.arrow-icon {\r\n  width: 50px;\r\n  height: 50px;\r\n  margin: 0 20px;\r\n  vertical-align: middle;\r\n}\r\n\r\n.step-box {\r\n  padding: 15px 25px;\r\n  border: 2px solid transparent;\r\n  border-radius: 10px;\r\n  transition: border-color 0.5s ease;\r\n}\r\n\r\n.step-box-enhanced {\r\n  background-color: #B6D0E2;\r\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.15);\r\n  transition: transform 0.3s ease;\r\n}\r\n\r\n.step-box-enhanced:hover {\r\n  transform: scale(1.05);\r\n}\r\n\r\n.step-box.active-step {\r\n  font-weight: bold;\r\n  color: #668B8B;\r\n  border-bottom: 2px solid #668B8B;\r\n}\r\n\r\n.step-title {\r\n  font-size: 28px;\r\n  font-weight: bold;\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.custom-input {\r\n  width: 70%;\r\n  border-radius: 10px;\r\n  padding: 5px;\r\n  font-size: 18px;\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.sms-code-button {\r\n  margin-top: 15px;\r\n  height: 30px; /* 与输入框高度保持一致 */\r\n  padding: 0 20px; /* 左右内边距让按钮显得更舒展 */\r\n  font-size: 16px;\r\n  border-radius: 8px;\r\n  line-height: 48px; /* 与按钮高度一致，保证文字垂直居中 */\r\n  //居中显示\r\n  display: flex;\r\n}\r\n\r\n.login-button {\r\n  font-size: 18px;\r\n  padding: 12px;\r\n  border-radius: 8px;\r\n  width: 50%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.username-check-container {\r\n  gap: 20px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.username-input {\r\n  height: 50px;\r\n  font-size: 20px;\r\n}\r\n\r\n.check-username-button {\r\n  flex-shrink: 0;\r\n}\r\n\r\n.username-check-message {\r\n  color: v-bind(usernameCheckMessageColor);\r\n}\r\n\r\n.register-button {\r\n  margin-bottom: 45px;\r\n  font-size: 20px;\r\n  padding: 14px;\r\n  width: 200px;\r\n  position: absolute;\r\n  bottom: 20px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n}\r\n\r\n.disabled-button {\r\n  background-color: #c0c0c0 !important;\r\n  border-color: #c0c0c0 !important;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.verification-button {\r\n  margin-top: 15px;\r\n  height: 30px;\r\n  padding: 0 20px;\r\n  font-size: 16px;\r\n  border-radius: 8px;\r\n  line-height: 48px;\r\n  display: flex;\r\n}\r\n\r\n.password-strength {\r\n  margin-top: 20px;\r\n  font-size: 18px;\r\n}\r\n\r\n.high-strength {\r\n  color: #67c23a;\r\n  font-weight: bold;\r\n}\r\n\r\n.medium-strength {\r\n  color: #e6a23c;\r\n  font-weight: bold;\r\n}\r\n\r\n.low-strength {\r\n  color: #f56c6c;\r\n  font-weight: bold;\r\n}\r\n\r\n.merchant-link {\r\n  position: absolute;\r\n  bottom: 20px;\r\n  left: 20px;\r\n  color: #808080;\r\n  text-decoration: none;\r\n  font-size: 16px;\r\n  transition: color 0.3s ease;\r\n}\r\n\r\n.merchant-link:hover {\r\n  color: #668B8B;\r\n}\r\n\r\n.login-link {\r\n  position: absolute;\r\n  bottom: 20px;\r\n  right: 20px;\r\n  color: #808080;\r\n  text-decoration: none;\r\n  font-size: 16px;\r\n  transition: color 0.3s ease;\r\n}\r\n\r\n.login-link:hover {\r\n  color: #668B8B;\r\n}\r\n\r\n.night-mode-toggle {\r\n  position: fixed;\r\n  top: 20px;\r\n  right: 20px;\r\n}\r\n\r\n.el-button--primary {\r\n  background-color: #668B8B;\r\n  border-color: #668B8B;\r\n}\r\n\r\n.el-button--primary:hover {\r\n  background-color: #96CDCD;\r\n  border-color: #96CDCD;\r\n}\r\n\r\nbody.night-mode, html.night-mode {\r\n  background-color: #1f1f1f;\r\n  color: #f7f7f7;\r\n}\r\n\r\n.night-mode .el-container {\r\n  background-color: #1f1f1f;\r\n}\r\n\r\nbody.night-mode .register-content {\r\n  background-color: #333;\r\n  color: #f7f7f7;\r\n}\r\n\r\nbody.night-mode .el-input,\r\nbody.night-mode .el-input__inner {\r\n  background-color: #444;\r\n  color: #f7f7f7;\r\n  border-color: #555;\r\n}\r\n\r\nbody.night-mode .el-button--primary {\r\n  background-color: #96CDCD;\r\n  border-color: #96CDCD;\r\n}\r\n\r\n.password-strength-wrapper {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  margin-top: 20px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.password-strength-bar {\r\n  display: flex;\r\n  width: 70%;\r\n  height: 10px;\r\n  background-color: #e0e0e0;\r\n  border-radius: 5px;\r\n}\r\n\r\n.strength-segment {\r\n  flex: 1;\r\n  height: 100%;\r\n  margin-right: 2px;\r\n  border-radius: 5px;\r\n}\r\n\r\n.low-strength-segment {\r\n  background-color: #f56c6c;\r\n}\r\n\r\n.medium-strength-segment {\r\n  background-color: #e6a23c;\r\n}\r\n\r\n.high-strength-segment {\r\n  background-color: #67c23a;\r\n}\r\n\r\n.password-strength-text {\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n}\r\n\r\n\r\n</style>\r\n"],"mappings":";;AA6HA,SAAQA,QAAQ,EAAEC,GAAG,EAAEC,KAAK,QAAO,KAAK;AACxC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,mBAAmB;AACrC,SAAQC,SAAS,QAAO,cAAc;AACtC,SAAQC,aAAa,QAAO,oBAAoB;AAChD,OAAOC,oBAAoB,MAAM,uCAAuC;;;;;;;;;;IAExE,MAAMC,WAAW,GAAGR,GAAG,CAAC,CAAC,CAAC;IAC1B,MAAMS,QAAQ,GAAGT,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMU,eAAe,GAAGV,GAAG,CAAC,KAAK,CAAC;IAClC,MAAMW,WAAW,GAAGX,GAAG,CAAC,EAAE,CAAC;IAC3B,MAAMY,KAAK,GAAGZ,GAAG,CAAC,EAAE,CAAC;IACrB,MAAMa,cAAc,GAAGb,GAAG,CAAC,KAAK,CAAC;IACjC,MAAMc,cAAc,GAAGd,GAAG,CAAC,KAAK,CAAC;IACjC,MAAMe,eAAe,GAAGf,GAAG,CAAC,KAAK,CAAC;IAClC,MAAMgB,QAAQ,GAAGhB,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMiB,eAAe,GAAGjB,GAAG,CAAC,EAAE,CAAC;IAC/B,MAAMkB,gBAAgB,GAAGlB,GAAG,CAAC,GAAG,CAAC;IACjC,MAAMmB,UAAU,GAAGb,aAAa,CAAC,CAAC;IAClC,MAAMc,WAAW,GAAGrB,QAAQ,CAAC,MAAMoB,UAAU,CAACC,WAAW,CAAC;IAC1D,MAAMC,oBAAoB,GAAGrB,GAAG,CAAC,EAAE,CAAC;IACpC,MAAMsB,yBAAyB,GAAGtB,GAAG,CAAC,EAAE,CAAC;IAEzC,MAAMuB,YAAY,GAAGvB,GAAG,CAAC;MACvBS,QAAQ,EAAE,EAAE;MACZe,KAAK,EAAE,EAAE;MACTZ,KAAK,EAAE,EAAE;MACTI,QAAQ,EAAE;IACZ,CAAC,CAAC;IAEFf,KAAK,CAACmB,WAAW,EAAGK,MAAM,IAAK;MAC7B,IAAIA,MAAM,EAAE;QACVC,OAAO,CAACC,GAAG,CAACR,UAAU,CAACC,WAAW,CAAC;QACnCQ,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,YAAY,CAAC;MAC3C,CAAC,MAAM;QACLL,OAAO,CAACC,GAAG,CAACR,UAAU,CAACC,WAAW,CAAC;QACnCQ,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACE,MAAM,CAAC,YAAY,CAAC;MAC9C;IACF,CAAC,CAAC;IAEF,MAAMC,uBAAuB,GAAGlC,QAAQ,CAAC,MAAM;MAC7C,OAAOiB,QAAQ,CAACkB,KAAK,KAAKjB,eAAe,CAACiB,KAAK,IAAIhB,gBAAgB,CAACgB,KAAK,KAAK,GAAG;IACnF,CAAC,CAAC;IAEF,MAAMC,qBAAqB,GAAGpC,QAAQ,CAAC,MAAM;MAC3C,QAAQmB,gBAAgB,CAACgB,KAAK;QAC5B,KAAK,GAAG;UACN,OAAO,eAAe;QACxB,KAAK,GAAG;UACN,OAAO,iBAAiB;QAC1B,KAAK,GAAG;QACR;UACE,OAAO,cAAc;MACzB;IACF,CAAC,CAAC;IAEF,SAASE,oBAAoBA,CAAA,EAAG;MAC9B1B,eAAe,CAACwB,KAAK,GAAG,KAAK,CAAC,CAAC;MAC/Bb,oBAAoB,CAACa,KAAK,GAAG,EAAE,CAAC,CAAC;IACnC;IAEA,SAASG,eAAeA,CAAC5B,QAAQ,EAAE;MACjC,MAAM6B,aAAa,GAAG,4BAA4B;MAElD,OAAOA,aAAa,CAACC,IAAI,CAAC9B,QAAQ,CAAC;IACrC;IAEA,eAAe+B,aAAaA,CAAA,EAAG;MAC7B;MACA,IAAIH,eAAe,CAAC5B,QAAQ,CAACyB,KAAK,CAAC,EAAE;QACnC,IAAI;UACF,MAAMO,QAAQ,GAAG,MAAMtC,KAAK,CAACuC,IAAI,CAAC,mCAAmC,EAAE;YACrEjC,QAAQ,EAAEA,QAAQ,CAACyB;UACrB,CAAC,EAAE;YACDS,OAAO,EAAE;cACP,QAAQ,EAAE,kBAAkB;cAC5B,cAAc,EAAE;YAClB,CAAC;YACDC,eAAe,EAAE;UACnB,CAAC,CAAC;UACF,IAAIH,QAAQ,CAACI,IAAI,CAACC,IAAI,KAAK,GAAG,EAAE;YAC9BpC,eAAe,CAACwB,KAAK,GAAG,IAAI;YAC5Bb,oBAAoB,CAACa,KAAK,GAAG,OAAO;YACpCZ,yBAAyB,CAACY,KAAK,GAAG,SAAS;UAC7C,CAAC,MAAM;YACLxB,eAAe,CAACwB,KAAK,GAAG,KAAK;YAC7B,IAAIO,QAAQ,CAACI,IAAI,CAACC,IAAI,KAAK,GAAG,EAAE;cAC9BzB,oBAAoB,CAACa,KAAK,GAAG,SAAS;cACtCZ,yBAAyB,CAACY,KAAK,GAAG,SAAS;YAC7C,CAAC,MAAM,IAAIO,QAAQ,CAACI,IAAI,CAACC,IAAI,KAAK,GAAG,EAAE;cACrCzB,oBAAoB,CAACa,KAAK,GAAG,SAAS;cACtCZ,yBAAyB,CAACY,KAAK,GAAG,SAAS;YAC7C;UACF;QACF,CAAC,CAAC,OAAOa,KAAK,EAAE;UACdrB,OAAO,CAACqB,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAACC,OAAO,CAAC;UACtDtC,eAAe,CAACwB,KAAK,GAAG,KAAK;UAC7Bb,oBAAoB,CAACa,KAAK,GAAG,OAAO;UACpCZ,yBAAyB,CAACY,KAAK,GAAG,SAAS;QAC7C;MACF,CAAC,MAAM;QACLxB,eAAe,CAACwB,KAAK,GAAG,KAAK;QAC7Bb,oBAAoB,CAACa,KAAK,GAAG,yCAAyC;QACtEZ,yBAAyB,CAACY,KAAK,GAAG,SAAS;MAC7C;IACF;;IAEA;IACA,MAAMe,SAAS,GAAGjD,GAAG,CAAC,GAAG,CAAC;IAC1B,MAAMkD,qBAAqB,GAAGlD,GAAG,CAAC,KAAK,CAAC;IACxC,MAAMmD,eAAe,GAAGnD,GAAG,CAAC,OAAO,CAAC;IACpC,MAAMoD,WAAW,GAAGpD,GAAG,CAAC,KAAK,CAAC;IAC9B,MAAMqD,OAAO,GAAGrD,GAAG,CAAC;MAClBwB,KAAK,EAAE,EAAE;MACTsB,IAAI,EAAE;IACR,CAAC,CAAC;IACF,MAAMQ,UAAU,GAAGtD,GAAG,CAAC,IAAI,CAAC;IAE5BC,KAAK,CAACgD,SAAS,EAAGM,aAAa,IAAK;MAClC,IAAIA,aAAa,KAAK,CAAC,EAAE;QACvBL,qBAAqB,CAAChB,KAAK,GAAG,KAAK;QACnCiB,eAAe,CAACjB,KAAK,GAAG,OAAO;QAC/Be,SAAS,CAACf,KAAK,GAAG,EAAE,CAAC,CAAC;MACxB,CAAC,MAAM;QACLiB,eAAe,CAACjB,KAAK,GAAG,GAAGqB,aAAa,UAAU;MACpD;IACF,CAAC,CAAC;IAEF,eAAeC,WAAWA,CAAChC,KAAK,EAAE;MAChC,IAAI;QACF,MAAMiB,QAAQ,GAAG,MAAMtC,KAAK,CAACuC,IAAI,CAAC,gCAAgC,EAAE;UAClElB,KAAK,EAAEA;QACT,CAAC,EAAE;UACDmB,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,eAAe,EAAE;QACnB,CAAC,CAAC;QACF,OAAOH,QAAQ,CAACI,IAAI,CAACC,IAAI,KAAK,GAAG;MACnC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACd1C,SAAS,CAAC0C,KAAK,CAAC,cAAc,CAAC;QAC/B,OAAO,KAAK;MACd;IACF;IAEA,eAAeU,qBAAqBA,CAAA,EAAG;MACrC,IAAIJ,OAAO,CAACnB,KAAK,CAACV,KAAK,CAACkC,MAAM,KAAK,CAAC,EAAE;QACpCrD,SAAS,CAAC0C,KAAK,CAAC,UAAU,CAAC;QAC3B;MACF,CAAC,MAAM,IAAI,CAAC,eAAe,CAACR,IAAI,CAACc,OAAO,CAACnB,KAAK,CAACV,KAAK,CAAC,EAAE;QACrDnB,SAAS,CAAC0C,KAAK,CAAC,aAAa,CAAC;QAC9B;MACF;MACA,IAAI,OAAMS,WAAW,CAACH,OAAO,CAACnB,KAAK,CAACV,KAAK,CAAC,MAAK,IAAI,EAAE;QACnDmC,WAAW,CAAC,CAAC;MACf,CAAC,MAAM;QACLtD,SAAS,CAAC0C,KAAK,CAAC,gBAAgB,CAAC;MACnC;IACF;;IAEA;IACA,MAAMY,WAAW,GAAGA,CAAA,KAAM;MACxBP,WAAW,CAAClB,KAAK,GAAG,IAAI;IAC1B,CAAC;IAED,MAAM0B,YAAY,GAAGA,CAAA,KAAM;MACzBR,WAAW,CAAClB,KAAK,GAAG,KAAK;IAC3B,CAAC;IAED,MAAM2B,cAAc,GAAGA,CAAA,KAAM;MAC3BD,YAAY,CAAC,CAAC,CAAC,CAAC;MAChBE,cAAc,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC;;IAED;IACA,eAAeA,cAAcA,CAAA,EAAG;MAC9BC,oBAAoB,CAAC,CAAC,CAAC,CAAC;MACxB,IAAI;QACF,MAAMtB,QAAQ,GAAG,MAAMtC,KAAK,CAACuC,IAAI,CAAC,iBAAiB,EAAE;UACnD/B,WAAW,EAAE0C,OAAO,CAACnB,KAAK,CAACV;QAC7B,CAAC,EAAE;UACDmB,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,eAAe,EAAE;QACnB,CAAC,CAAC;QAEF,IAAIH,QAAQ,CAACI,IAAI,CAACmB,IAAI,KAAK,IAAI,EAAE;UAC/B3D,SAAS,CAAC4D,OAAO,CAAC,oBAAoB,CAAC;QACzC,CAAC,MAAM;UACL5D,SAAS,CAAC0C,KAAK,CAAC,gBAAgB,CAAC;QACnC;MACF,CAAC,CAAC,OAAOA,KAAK,EAAE;QACdrB,OAAO,CAACqB,KAAK,CAAC,UAAU,EAAEA,KAAK,CAAC;MAClC;IACF;;IAEA;IACA,SAASgB,oBAAoBA,CAAA,EAAG;MAC9Bb,qBAAqB,CAAChB,KAAK,GAAG,IAAI;MAClCe,SAAS,CAACf,KAAK,GAAGe,SAAS,CAACf,KAAK,GAAG,CAAC,GAAGe,SAAS,CAACf,KAAK,GAAG,GAAG,CAAC,CAAC;MAC/DgC,cAAc,CAAC,CAAC;IAClB;;IAEA;IACA,SAASA,cAAcA,CAAA,EAAG;MACxB,IAAIjB,SAAS,CAACf,KAAK,GAAG,CAAC,EAAE;QACvBiC,UAAU,CAAC,MAAM;UACflB,SAAS,CAACf,KAAK,IAAI,CAAC;UACpBgC,cAAc,CAAC,CAAC;QAClB,CAAC,EAAE,IAAI,CAAC;MACV;IACF;IAEA,eAAeE,gBAAgBA,CAAA,EAAG;MAChC,IAAIf,OAAO,CAACnB,KAAK,CAACV,KAAK,CAACkC,MAAM,KAAK,CAAC,IAAIL,OAAO,CAACnB,KAAK,CAACV,KAAK,CAACkC,MAAM,KAAK,CAAC,EAAE;QACxErD,SAAS,CAAC0C,KAAK,CAAC,cAAc,CAAC;QAC/B;MACF;MACA,MAAMF,IAAI,GAAG;QACXwB,UAAU,EAAEhB,OAAO,CAACnB,KAAK,CAACY,IAAI;QAC9BtB,KAAK,EAAE6B,OAAO,CAACnB,KAAK,CAACV;MACvB,CAAC;MAED,IAAI;QACF,MAAM8B,UAAU,CAACpB,KAAK,CAACoC,QAAQ,CAAC,CAAC;QACjC,MAAM7B,QAAQ,GAAG,MAAMtC,KAAK,CAACuC,IAAI,CAAC,sBAAsB,EAAEG,IAAI,EAAE;UAC9DF,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,eAAe,EAAE;QACnB,CAAC,CAAC;QACFlB,OAAO,CAACC,GAAG,CAACc,QAAQ,CAACI,IAAI,CAAC;QAC1B,IAAIJ,QAAQ,CAACI,IAAI,CAAC0B,MAAM,KAAK,GAAG,EAAE;UAChClE,SAAS,CAAC0C,KAAK,CAAC,WAAW,CAAC;QAC9B,CAAC,MAAM,IAAIN,QAAQ,CAACI,IAAI,CAAC0B,MAAM,KAAK,GAAG,EAAE;UACvClE,SAAS,CAAC0C,KAAK,CAAC,cAAc,CAAC;QACjC,CAAC,MAAM;UACL1C,SAAS,CAAC4D,OAAO,CAAC,OAAO,CAAC;UAC1BlD,eAAe,CAACmB,KAAK,GAAG,IAAI;UAC5BvB,WAAW,CAACuB,KAAK,GAAGmB,OAAO,CAACnB,KAAK,CAACV,KAAK;UACvCX,cAAc,CAACqB,KAAK,GAAG,IAAI;QAC7B;MACF,CAAC,CAAC,OAAOa,KAAK,EAAE;QACdrB,OAAO,CAACqB,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC;MAC/B;IACF;;IAEA;IACA,MAAMyB,WAAW,GAAGxE,GAAG,CAAC,GAAG,CAAC;IAC5B,MAAMyE,uBAAuB,GAAGzE,GAAG,CAAC,KAAK,CAAC;IAC1C,MAAM0E,iBAAiB,GAAG1E,GAAG,CAAC,OAAO,CAAC;IACtC,MAAM2E,aAAa,GAAG3E,GAAG,CAAC,KAAK,CAAC;IAChC,MAAM4E,SAAS,GAAG5E,GAAG,CAAC;MACpBY,KAAK,EAAE,EAAE;MACTkC,IAAI,EAAE;IACR,CAAC,CAAC;IACF,MAAM+B,YAAY,GAAG7E,GAAG,CAAC,IAAI,CAAC;IAE9BC,KAAK,CAACuE,WAAW,EAAGM,eAAe,IAAK;MACtC,IAAIA,eAAe,KAAK,CAAC,EAAE;QACzBL,uBAAuB,CAACvC,KAAK,GAAG,KAAK;QACrCwC,iBAAiB,CAACxC,KAAK,GAAG,OAAO;QACjCsC,WAAW,CAACtC,KAAK,GAAG,EAAE,CAAC,CAAC;MAC1B,CAAC,MAAM;QACLwC,iBAAiB,CAACxC,KAAK,GAAG,GAAG4C,eAAe,UAAU;MACxD;IACF,CAAC,CAAC;IAEF,eAAeC,WAAWA,CAACnE,KAAK,EAAE;MAChC,IAAI;QACF,MAAM6B,QAAQ,GAAG,MAAMtC,KAAK,CAACuC,IAAI,CAAC,gCAAgC,EAAE;UAClE9B,KAAK,EAAEA;QACT,CAAC,EAAE;UACD+B,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,eAAe,EAAE;QACnB,CAAC,CAAC;QACF,OAAOH,QAAQ,CAACI,IAAI,CAACC,IAAI,KAAK,GAAG;MACnC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACd1C,SAAS,CAAC0C,KAAK,CAAC,cAAc,CAAC;QAC/B,OAAO,KAAK;MACd;IACF;IAEA,eAAeiC,uBAAuBA,CAAA,EAAG;MACvCtD,OAAO,CAACC,GAAG,CAACiD,SAAS,CAAC1C,KAAK,CAACtB,KAAK,CAAC;MAClC,IAAIgE,SAAS,CAAC1C,KAAK,CAACtB,KAAK,CAAC8C,MAAM,KAAK,CAAC,EAAE;QACtCrD,SAAS,CAAC0C,KAAK,CAAC,QAAQ,CAAC;QACzB;MACF,CAAC,MAAM,IAAI,CAAC,kDAAkD,CAACR,IAAI,CAACqC,SAAS,CAAC1C,KAAK,CAACtB,KAAK,CAAC,EAAE;QAC1FP,SAAS,CAAC0C,KAAK,CAAC,aAAa,CAAC;QAC9B;MACF;MACA,IAAI,OAAMgC,WAAW,CAACH,SAAS,CAAC1C,KAAK,CAACtB,KAAK,CAAC,MAAK,IAAI,EAAE;QACrDqE,aAAa,CAAC,CAAC;MACjB,CAAC,MAAM;QACL5E,SAAS,CAAC0C,KAAK,CAAC,eAAe,CAAC;MAClC;IACF;;IAEA;IACA,MAAMkC,aAAa,GAAGA,CAAA,KAAM;MAC1BN,aAAa,CAACzC,KAAK,GAAG,IAAI;IAC5B,CAAC;IAED,MAAMgD,cAAc,GAAGA,CAAA,KAAM;MAC3BP,aAAa,CAACzC,KAAK,GAAG,KAAK;IAC7B,CAAC;IAED,MAAMiD,gBAAgB,GAAGA,CAAA,KAAM;MAC7BD,cAAc,CAAC,CAAC,CAAC,CAAC;MAClBE,gBAAgB,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC;;IAED;IACA,eAAeA,gBAAgBA,CAAA,EAAG;MAChCC,sBAAsB,CAAC,CAAC,CAAC,CAAC;MAC1B,IAAI;QACF,MAAM5C,QAAQ,GAAG,MAAMtC,KAAK,CAACuC,IAAI,CAAC,iBAAiB,EAAE;UACnD9B,KAAK,EAAEgE,SAAS,CAAC1C,KAAK,CAACtB;QACzB,CAAC,EAAE,CAAC,CAAC,EAAE;UACL+B,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,eAAe,EAAE;QACnB,CAAC,CAAC;QAEF,IAAIH,QAAQ,CAACI,IAAI,CAACC,IAAI,KAAK,GAAG,EAAE;UAC9BzC,SAAS,CAAC4D,OAAO,CAAC,oBAAoB,CAAC;QACzC,CAAC,MAAM;UACL5D,SAAS,CAAC0C,KAAK,CAAC,gBAAgB,CAAC;QACnC;MACF,CAAC,CAAC,OAAOA,KAAK,EAAE;QACdrB,OAAO,CAACqB,KAAK,CAAC,UAAU,EAAEA,KAAK,CAAC;MAClC;IACF;;IAEA;IACA,SAASsC,sBAAsBA,CAAA,EAAG;MAChCZ,uBAAuB,CAACvC,KAAK,GAAG,IAAI;MACpCsC,WAAW,CAACtC,KAAK,GAAGsC,WAAW,CAACtC,KAAK,GAAG,CAAC,GAAGsC,WAAW,CAACtC,KAAK,GAAG,EAAE,CAAC,CAAC;MACpEoD,gBAAgB,CAAC,CAAC;IACpB;;IAEA;IACA,SAASA,gBAAgBA,CAAA,EAAG;MAC1B,IAAId,WAAW,CAACtC,KAAK,GAAG,CAAC,EAAE;QACzBiC,UAAU,CAAC,MAAM;UACfK,WAAW,CAACtC,KAAK,IAAI,CAAC;UACtBoD,gBAAgB,CAAC,CAAC;QACpB,CAAC,EAAE,IAAI,CAAC;MACV;IACF;IAEA,eAAeC,kBAAkBA,CAAA,EAAG;MAClC,IAAIX,SAAS,CAAC1C,KAAK,CAACtB,KAAK,CAAC8C,MAAM,KAAK,CAAC,IAAIkB,SAAS,CAAC1C,KAAK,CAACY,IAAI,CAACY,MAAM,KAAK,CAAC,EAAE;QAC3ErD,SAAS,CAAC0C,KAAK,CAAC,YAAY,CAAC;QAC7B;MACF;MACA,MAAMF,IAAI,GAAG;QACX2C,OAAO,EAAEZ,SAAS,CAAC1C,KAAK,CAACY,IAAI;QAC7BlC,KAAK,EAAEgE,SAAS,CAAC1C,KAAK,CAACtB;MACzB,CAAC;MAED,IAAI;QACF,MAAMiE,YAAY,CAAC3C,KAAK,CAACoC,QAAQ,CAAC,CAAC;QACnC,MAAM7B,QAAQ,GAAG,MAAMtC,KAAK,CAACuC,IAAI,CAAC,wBAAwB,EAAEG,IAAI,EAAE;UAChEF,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,eAAe,EAAE;QACnB,CAAC,CAAC;QACFlB,OAAO,CAACC,GAAG,CAACc,QAAQ,CAACI,IAAI,CAAC;QAC1B,IAAIJ,QAAQ,CAACI,IAAI,CAACC,IAAI,KAAK,GAAG,EAAE;UAC9BzC,SAAS,CAAC0C,KAAK,CAAC,WAAW,CAAC;QAC9B,CAAC,MAAM,IAAIN,QAAQ,CAACI,IAAI,CAACC,IAAI,KAAK,GAAG,EAAE;UACrCzC,SAAS,CAAC0C,KAAK,CAAC,cAAc,CAAC;QACjC,CAAC,MAAM;UACL1C,SAAS,CAAC4D,OAAO,CAAC,OAAO,CAAC;UAC1B1C,YAAY,CAACW,KAAK,CAACtB,KAAK,GAAGgE,SAAS,CAAC1C,KAAK,CAACtB,KAAK;UAChDA,KAAK,CAACsB,KAAK,GAAG0C,SAAS,CAAC1C,KAAK,CAACtB,KAAK;UACnCE,cAAc,CAACoB,KAAK,GAAG,IAAI;QAC7B;MACF,CAAC,CAAC,OAAOa,KAAK,EAAE;QACdrB,OAAO,CAACqB,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC;MAC/B;IACF;IAEA,SAAS0C,QAAQA,CAAA,EAAG;MAClBlE,YAAY,CAACW,KAAK,CAACzB,QAAQ,GAAGA,QAAQ,CAACyB,KAAK;MAC5CX,YAAY,CAACW,KAAK,CAACV,KAAK,GAAGb,WAAW,CAACuB,KAAK;MAC5CX,YAAY,CAACW,KAAK,CAACtB,KAAK,GAAGA,KAAK,CAACsB,KAAK;MACtCX,YAAY,CAACW,KAAK,CAAClB,QAAQ,GAAGA,QAAQ,CAACkB,KAAK;MAC5CR,OAAO,CAACC,GAAG,CAACJ,YAAY,CAACW,KAAK,CAAC;MAC/B1B,WAAW,CAAC0B,KAAK,EAAE;IACrB;IAEA,SAASwD,qBAAqBA,CAAA,EAAG;MAC/B,MAAMC,aAAa,GAAG3E,QAAQ,CAACkB,KAAK;MACpC,IAAI0D,QAAQ,GAAG,GAAG;;MAElB;MACA,MAAMC,cAAc,GAAGF,aAAa,CAACjC,MAAM,IAAI,CAAC;MAChD,MAAMoC,YAAY,GAAG,OAAO,CAACvD,IAAI,CAACoD,aAAa,CAAC;MAChD,MAAMI,YAAY,GAAG,OAAO,CAACxD,IAAI,CAACoD,aAAa,CAAC;MAChD,MAAMK,UAAU,GAAG,IAAI,CAACzD,IAAI,CAACoD,aAAa,CAAC;MAC3C,MAAMM,eAAe,GAAG,wBAAwB,CAAC1D,IAAI,CAACoD,aAAa,CAAC;;MAEpE;MACA,MAAMO,WAAW,GAAG,CAACL,cAAc,EAAEC,YAAY,EAAEC,YAAY,EAAEC,UAAU,EAAEC,eAAe,CAAC,CAACE,MAAM,CAACC,OAAO,CAAC,CAAC1C,MAAM;MAEpH,IAAIwC,WAAW,IAAI,CAAC,EAAE;QACpBN,QAAQ,GAAG,GAAG;MAChB,CAAC,MAAM,IAAIM,WAAW,IAAI,CAAC,EAAE;QAC3BN,QAAQ,GAAG,GAAG;MAChB;MACA1E,gBAAgB,CAACgB,KAAK,GAAG0D,QAAQ;IACnC;IAEA,SAASS,oBAAoBA,CAAA,EAAG;MAC9B,IAAIrF,QAAQ,CAACkB,KAAK,KAAKjB,eAAe,CAACiB,KAAK,IAAIhB,gBAAgB,CAACgB,KAAK,KAAK,GAAG,EAAE;QAC9EX,YAAY,CAACW,KAAK,CAAClB,QAAQ,GAAGA,QAAQ,CAACkB,KAAK;QAC5CR,OAAO,CAACC,GAAG,CAACJ,YAAY,CAACW,KAAK,CAAC;QAC/B/B,KAAK,CAACuC,IAAI,CAAC,oBAAoB,EAAEnB,YAAY,CAACW,KAAK,EAAE;UACnDS,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,eAAe,EAAE;QACnB,CAAC,CAAC,CAAC0D,IAAI,CAAC7D,QAAQ,IAAI;UAClB,IAAIA,QAAQ,CAACI,IAAI,CAACC,IAAI,KAAK,GAAG,EAAE;YAC9BzC,SAAS,CAAC4D,OAAO,CAAC,gBAAgB,CAAC;YACnCE,UAAU,CAAC,MAAM;cACfoC,UAAU,CAAC,CAAC;YACd,CAAC,EAAE,IAAI,CAAC;UACV,CAAC,MAAM;YACLlG,SAAS,CAAC0C,KAAK,CAAC,aAAa,CAAC;UAChC;QACF,CAAC,CAAC,CAACyD,KAAK,CAACzD,KAAK,IAAI;UAChBrB,OAAO,CAACqB,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAACC,OAAO,CAAC;UAC1D3C,SAAS,CAAC0C,KAAK,CAAC,aAAa,CAAC;QAChC,CAAC,CAAC;MACJ,CAAC,MAAM;QACL1C,SAAS,CAAC0C,KAAK,CAAC,gBAAgB,CAAC;MACnC;IACF;IAEA,SAAS0D,WAAWA,CAAA,EAAG;MACrBvG,MAAM,CAACwG,IAAI,CAAC,QAAQ,CAAC;IACvB;IAGA,SAASC,cAAcA,CAAA,EAAG;MACxBzG,MAAM,CAACwG,IAAI,CAAC,cAAc,CAAC;IAC7B;IAEA,eAAeH,UAAUA,CAAA,EAAG;MAC1B,MAAMrG,MAAM,CAACwG,IAAI,CAAC,GAAG,CAAC;IACxB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
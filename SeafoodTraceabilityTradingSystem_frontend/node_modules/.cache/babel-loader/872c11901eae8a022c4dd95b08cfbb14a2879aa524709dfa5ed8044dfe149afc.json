{"ast":null,"code":"import \"core-js/modules/es.array-buffer.detached.js\";\nimport \"core-js/modules/es.array-buffer.transfer.js\";\nimport \"core-js/modules/es.array-buffer.transfer-to-fixed-length.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nimport \"core-js/modules/web.dom-exception.stack.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport ShopSliderComponent from \"@/components/ShopSliderComponent.vue\";\nimport StoreHeaderView from \"@/components/StoreHeaderView.vue\";\nimport { computed, nextTick, onMounted, ref } from \"vue\";\nimport { useUserShop } from \"@/composables/useShopUser\";\nimport { Delete } from \"@element-plus/icons-vue\";\nimport axios from \"axios\";\nimport { ElMessage } from \"element-plus\";\nimport 'emoji-picker-element';\nimport VueCropper from \"vue-cropperjs\";\nimport html2canvas from \"html2canvas\";\nimport 'cropperjs/dist/cropper.css';\nexport default {\n  __name: 'StoreTalkView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const {\n      shopForm,\n      initUserSession,\n      initShopInfo\n    } = useUserShop();\n    const shopSlider = ref(null);\n    const storeHeader = ref(null);\n    const searchQuery = ref(\"\");\n    const users = ref([]);\n    async function initUserList() {\n      try {\n        const response = await axios.post('/api/shop/chat/getTalkList', {\n          shopID: shopForm.value.shopID\n        }, {\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          withCredentials: true\n        });\n        if (response.data != null && Array.isArray(response.data)) users.value = response.data;\n      } catch (err) {\n        ElMessage.error(\"获取联系人列表失败\");\n      }\n    }\n    const messages = ref([]);\n    const chatData = ref({});\n    const selectedUser = ref(null);\n    async function IsInChatSession() {\n      const userId = new URLSearchParams(window.location.search).get('id');\n      if (userId) {\n        const user = users.value.find(user => user.id === parseInt(userId, 10));\n        if (user) {\n          await selectUser(user);\n        }\n      } else {\n        selectedUser.value = null;\n        messages.value = [];\n      }\n    }\n    const inputMessage = ref(\"\");\n    const filteredUsers = computed(() => users.value.filter(user => user.nickname.includes(searchQuery.value)));\n    async function selectUser(user) {\n      try {\n        const response = await axios.post('/api/shop/chat/getTalkDetail', {\n          shopID: shopForm.value.shopID,\n          userId: user.id\n        }, {\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          withCredentials: true\n        });\n        if (response.data != null) {\n          const chatId = Object.keys(response.data)[0];\n          chatData.value[chatId] = response.data[chatId].map(msg => ({\n            content: msg.content,\n            isSelf: msg.isSelf,\n            isRead: msg.isRead,\n            contentType: msg.contentType\n          }));\n          selectedUser.value = user;\n          messages.value = chatData.value[user.id] || [];\n        }\n      } catch (error) {\n        ElMessage.error(\"获取聊天记录失败\");\n      }\n    }\n    async function handleInitChat(id) {\n      const user = users.value.find(user => user.id === parseInt(id, 10));\n      if (user) {\n        if (selectedUser.value && selectedUser.value.id === user.id) {\n          await selectUser(user);\n        }\n      }\n      await initUserList();\n    }\n    async function deleteUser(index) {\n      const contactId = users.value[index].id;\n      try {\n        const response = await axios.post('/api/shop/chat/deleteChatSession', {\n          shopID: shopForm.value.shopID,\n          userId: contactId\n        }, {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          withCredentials: true\n        });\n        if (response.data.code === 200) {\n          delete chatData.value[contactId];\n          if (selectedUser.value && selectedUser.value.id === index) {\n            selectedUser.value = null;\n            messages.value = [];\n          }\n          await initUserList();\n        } else if (response.data.code === 400) ElMessage.error('删除联系人失败，请稍后再试');\n      } catch (error) {\n        ElMessage.error('删除联系人失败，请稍后再试');\n      }\n    }\n    const chatWindowRef = ref(null);\n    const showEmojiPicker = ref(false);\n    const toggleEmojiPicker = () => {\n      showEmojiPicker.value = !showEmojiPicker.value;\n    };\n    const addEmoji = event => {\n      inputMessage.value += event.detail.unicode;\n    };\n    async function uploadImage(file) {\n      try {\n        const formData = new FormData();\n        formData.append('file', file);\n        formData.append('userId', selectedUser.value.id);\n        formData.append('shopId', shopForm.value.shopID);\n        const response = await axios.post('/api/shop/chat/uploadImage', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          },\n          withCredentials: true\n        });\n        if (response.data.code === 200) {\n          await initUserList();\n          await selectUser(selectedUser.value);\n          await nextTick(() => {\n            const chatWindow = chatWindowRef.value;\n            if (chatWindow) {\n              chatWindow.scrollTop = chatWindow.scrollHeight;\n            }\n          });\n        } else ElMessage.error('上传图片失败，请稍后再试');\n      } catch (err) {\n        ElMessage.error('上传图片失败，请稍后再试');\n      }\n    }\n    const beforeUpload = async file => {\n      const isImage = file.type.startsWith('image/');\n      if (!isImage) {\n        ElMessage.error('请选择图片文件！');\n        return;\n      }\n      const isLt2M = file.size / 1024 / 1024 < 2; // 限制文件大小为 2MB\n      if (!isLt2M) {\n        ElMessage.error('图片大小不能超过 2MB！');\n        return;\n      }\n      await uploadImage(file);\n    };\n    async function sendMessage() {\n      if (inputMessage.value.trim() === \"\") {\n        ElMessage.error(\"消息不能为空\");\n        return;\n      }\n      try {\n        const response = await axios.post('/api/shop/chat/sendMessage', {\n          shopID: shopForm.value.shopID,\n          userId: selectedUser.value.id,\n          message: inputMessage.value\n        }, {\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          withCredentials: true\n        });\n        if (response.data.code === 200) {\n          await selectUser(selectedUser.value);\n          await initUserList();\n          inputMessage.value = \"\";\n          await nextTick(() => {\n            const chatWindow = chatWindowRef.value;\n            if (chatWindow) {\n              chatWindow.scrollTop = chatWindow.scrollHeight;\n            }\n          });\n        } else if (response.data.code === 400) {\n          ElMessage.error(\"发送失败，请稍后再试\");\n        }\n      } catch (error) {\n        ElMessage.error(\"发送失败，请稍后再试\");\n      }\n    }\n    const cropper = ref(null);\n    const imageSrc = ref(null);\n    const dialogVisible = ref(false);\n    const takeScreenshot = () => {\n      dialogVisible.value = true;\n      const element = document.body;\n      html2canvas(element).then(canvas => {\n        imageSrc.value = canvas.toDataURL('image/png');\n      });\n    };\n    async function cropImage() {\n      const canvas = cropper.value.getCroppedCanvas();\n      const dataUrl = canvas.toDataURL('image/png');\n      const file = dataUrlToFile(dataUrl);\n      await uploadImage(file);\n      handleClose();\n    }\n    const dataUrlToFile = dataUrl => {\n      const arr = dataUrl.split(',');\n      const mime = arr[0].match(/:(.*?);/)[1];\n      const bstr = atob(arr[1]);\n      let n = bstr.length;\n      const u8arr = new Uint8Array(n);\n      while (n--) {\n        u8arr[n] = bstr.charCodeAt(n);\n      }\n      return new File([u8arr], 'cropped-image.png', {\n        type: mime\n      });\n    };\n    const handleClose = () => {\n      dialogVisible.value = false;\n      imageSrc.value = '';\n    };\n    onMounted(async () => {\n      initUserSession();\n      await initShopInfo();\n      shopSlider.value.setActiveIndex('5-1');\n      storeHeader.value.setTitle('客服');\n      await initUserList();\n      await IsInChatSession();\n    });\n    const __returned__ = {\n      shopForm,\n      initUserSession,\n      initShopInfo,\n      shopSlider,\n      storeHeader,\n      searchQuery,\n      users,\n      initUserList,\n      messages,\n      chatData,\n      selectedUser,\n      IsInChatSession,\n      inputMessage,\n      filteredUsers,\n      selectUser,\n      handleInitChat,\n      deleteUser,\n      chatWindowRef,\n      showEmojiPicker,\n      toggleEmojiPicker,\n      addEmoji,\n      uploadImage,\n      beforeUpload,\n      sendMessage,\n      cropper,\n      imageSrc,\n      dialogVisible,\n      takeScreenshot,\n      cropImage,\n      dataUrlToFile,\n      handleClose,\n      ShopSliderComponent,\n      StoreHeaderView,\n      computed,\n      nextTick,\n      onMounted,\n      ref,\n      get useUserShop() {\n        return useUserShop;\n      },\n      get Delete() {\n        return Delete;\n      },\n      get axios() {\n        return axios;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get VueCropper() {\n        return VueCropper;\n      },\n      get html2canvas() {\n        return html2canvas;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ShopSliderComponent","StoreHeaderView","computed","nextTick","onMounted","ref","useUserShop","Delete","axios","ElMessage","VueCropper","html2canvas","shopForm","initUserSession","initShopInfo","shopSlider","storeHeader","searchQuery","users","initUserList","response","post","shopID","value","headers","withCredentials","data","Array","isArray","err","error","messages","chatData","selectedUser","IsInChatSession","userId","URLSearchParams","window","location","search","get","user","find","id","parseInt","selectUser","inputMessage","filteredUsers","filter","nickname","includes","chatId","Object","keys","map","msg","content","isSelf","isRead","contentType","handleInitChat","deleteUser","index","contactId","code","chatWindowRef","showEmojiPicker","toggleEmojiPicker","addEmoji","event","detail","unicode","uploadImage","file","formData","FormData","append","chatWindow","scrollTop","scrollHeight","beforeUpload","isImage","type","startsWith","isLt2M","size","sendMessage","trim","message","cropper","imageSrc","dialogVisible","takeScreenshot","element","document","body","then","canvas","toDataURL","cropImage","getCroppedCanvas","dataUrl","dataUrlToFile","handleClose","arr","split","mime","match","bstr","atob","n","length","u8arr","Uint8Array","charCodeAt","File","setActiveIndex","setTitle"],"sources":["D:/Cache/Java/shopping/shoppping_c_frontend/src/views/Store/StoreTalkView.vue"],"sourcesContent":["<template>\r\n  <div class=\"d-flex\" style=\"height: 100vh; overflow: hidden;\">\r\n    <ShopSliderComponent ref=\"shopSlider\" @initChat=\"handleInitChat\"></ShopSliderComponent>\r\n\r\n    <div class=\"flex-grow-1 overflow-auto\" style=\"background: #f5f7fa;\">\r\n      <StoreHeaderView ref=\"storeHeader\"></StoreHeaderView>\r\n\r\n      <div class=\"chat-container\">\r\n        <!-- 左侧：用户列表 -->\r\n        <div class=\"user-list\">\r\n          <div class=\"search-bar\">\r\n            <el-input\r\n                v-model=\"searchQuery\"\r\n                placeholder=\"搜索联系人\"\r\n                prefix-icon=\"el-icon-search\"\r\n                size=\"small\"\r\n                clearable\r\n            />\r\n          </div>\r\n          <div\r\n              class=\"user-item\"\r\n              v-for=\"(user, index) in filteredUsers\"\r\n              :key=\"user.id\"\r\n              :class=\"{ selected: selectedUser && selectedUser.id === user.id }\"\r\n              @click=\"selectUser(user)\"\r\n          >\r\n            <el-avatar :src=\"user.avatar\" size=\"medium\"/>\r\n            <div class=\"user-info\">\r\n              <h6>{{ user.nickname }}</h6>\r\n              <p v-html=\"user.lastMessage\"></p>\r\n            </div>\r\n            <el-button\r\n                icon=\"el-icon-delete\"\r\n                size=\"small\"\r\n                type=\"danger\"\r\n                class=\"delete-btn\"\r\n                @click.stop=\"deleteUser(index)\"\r\n            >\r\n              <el-icon>\r\n                <Delete/>\r\n              </el-icon>\r\n            </el-button>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 右侧：聊天窗口 -->\r\n        <div class=\"chat-interface\">\r\n          <!-- 聊天窗口顶部 -->\r\n          <div class=\"chat-header\">\r\n            <div v-if=\"selectedUser\" class=\"d-flex align-items-center\">\r\n              <el-avatar :src=\"selectedUser.avatar\" size=\"medium\"/>\r\n              <h5>{{ selectedUser.nickname }}</h5>\r\n            </div>\r\n            <div v-else>\r\n              <h5>选择联系人开始聊天</h5>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- 聊天记录 -->\r\n          <div class=\"chat-body\" v-if=\"selectedUser\" ref=\"chatWindowRef\">\r\n            <div\r\n                v-for=\"(message, index) in messages\"\r\n                :key=\"index\"\r\n                class=\"message\"\r\n                :class=\"{ self: message.isSelf }\"\r\n            >\r\n              <!-- 左侧：用户头像 -->\r\n              <el-avatar\r\n                  v-if=\"!message.isSelf\"\r\n                  :src=\"selectedUser.avatar\"\r\n                  size=\"default\"\r\n                  class=\"avatar\"\r\n              ></el-avatar>\r\n              <!-- 右侧：商家头像 -->\r\n              <el-avatar\r\n                  v-if=\"message.isSelf\"\r\n                  :src=\"shopForm.shopAvatar\"\r\n                  size=\"default\"\r\n                  class=\"avatar\"\r\n              ></el-avatar>\r\n              <!-- 消息内容 -->\r\n              <div class=\"message-content\">\r\n                <p v-html=\"message.content\" v-if=\"message.contentType === 'text'\"></p>\r\n                <el-image :src=\"message.content\" v-else-if=\"message.contentType === 'image'\" class=\"img-fluid\"\r\n                          style=\"width: 100px; height: auto;\"\r\n                          :preview-src-list=\"[message.content]\"\r\n                          alt=\"Image\"/>\r\n                <div\r\n                    v-else-if=\"message.contentType === 'link'\"\r\n                    class=\"product-item d-flex align-items-center mb-2\"\r\n                    style=\"background-color: #f5f5f5; padding: 10px; border-radius: 10px;\"\r\n                >\r\n                  <img\r\n                      :src=\"message.content.image\"\r\n                      alt=\"Product\"\r\n                      class=\"me-2\"\r\n                      style=\"width: 40px; height: 40px;\"\r\n                  >\r\n                  <div>\r\n                    <p class=\"mb-1\">{{ message.content.name }}</p>\r\n                    <span class=\"text-muted\">{{ message.content.price }} 元</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div v-if=\"message.isSelf\" class=\"message-status\">\r\n                <span v-if=\"message.isRead\" class=\"read-status\">已读</span>\r\n                <span v-else class=\"unread-status\">未读</span>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n\r\n          <div v-else style=\"text-align: center;\">\r\n            <p>请选择联系人开始聊天</p>\r\n          </div>\r\n\r\n          <!-- 输入框 -->\r\n          <div class=\"input-toolbar d-flex align-items-center mb-2 p-2\" v-if=\"selectedUser\">\r\n            <transition name=\"fade\">\r\n              <emoji-picker\r\n                  v-if=\"showEmojiPicker\"\r\n                  @emoji-click=\"addEmoji\"\r\n                  style=\"position: absolute; bottom:215px; left: 500px;\"\r\n              ></emoji-picker>\r\n            </transition>\r\n            <i class=\"bi bi-emoji-smile me-3\" style=\"font-size: 1.5rem; cursor: pointer;\"\r\n               @click=\"toggleEmojiPicker\"></i>\r\n            <el-upload\r\n                :show-file-list=\"false\"\r\n                :before-upload=\"beforeUpload\"\r\n                accept=\"image/*\"\r\n            >\r\n              <i class=\"bi bi-card-image me-3\" style=\"font-size: 1.5rem; cursor: pointer;\"></i>\r\n            </el-upload>\r\n            <i class=\"bi bi-scissors me-3\" style=\"font-size: 1.5rem; cursor: pointer;\"\r\n               @click=\"takeScreenshot\"></i>\r\n            <el-dialog\r\n                v-model=\"dialogVisible\"\r\n                width=60vw\r\n                :before-close=\"handleClose\"\r\n            >\r\n              <vue-cropper\r\n                  v-if=\"imageSrc\"\r\n                  ref=\"cropper\"\r\n                  :src=\"imageSrc\"\r\n                  :aspect-ratio=\"16 / 9\"\r\n                  :view-mode=\"1\"\r\n                  :auto-crop-area=\"0.5\"\r\n                  :guides=\"true\"\r\n                  :auto-crop=\"true\"\r\n                  :background=\"true\"\r\n                  :drag-mode=\"move\"\r\n              ></vue-cropper>\r\n              <div v-if=\"imageSrc\">\r\n                <el-button type=\"primary\" @click=\"cropImage\" style=\"border-radius: 20px;\">裁剪并发送</el-button>\r\n              </div>\r\n            </el-dialog>\r\n          </div>\r\n          <div class=\"chat-input\" v-if=\"selectedUser\">\r\n            <el-input\r\n                v-model=\"inputMessage\"\r\n                type=\"textarea\"\r\n                placeholder=\"请输入消息...\"\r\n                clearable\r\n                maxlength=\"500\"\r\n                resize=\"none\"\r\n                :autosize=\"{ minRows: 6, maxRows: 8 }\"\r\n                @keyup.enter=\"sendMessage\"\r\n            />\r\n            <el-button type=\"primary\" @click=\"sendMessage\">发送</el-button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport ShopSliderComponent from \"@/components/ShopSliderComponent.vue\";\r\nimport StoreHeaderView from \"@/components/StoreHeaderView.vue\";\r\nimport {computed, nextTick, onMounted, ref} from \"vue\";\r\nimport {useUserShop} from \"@/composables/useShopUser\";\r\nimport {Delete} from \"@element-plus/icons-vue\";\r\nimport axios from \"axios\";\r\nimport {ElMessage} from \"element-plus\";\r\nimport 'emoji-picker-element';\r\nimport VueCropper from \"vue-cropperjs\";\r\nimport html2canvas from \"html2canvas\";\r\nimport 'cropperjs/dist/cropper.css';\r\n\r\nconst {shopForm, initUserSession, initShopInfo} = useUserShop();\r\nconst shopSlider = ref(null);\r\nconst storeHeader = ref(null);\r\n\r\nconst searchQuery = ref(\"\");\r\nconst users = ref([]);\r\n\r\nasync function initUserList() {\r\n  try {\r\n    const response = await axios.post('/api/shop/chat/getTalkList', {\r\n      shopID: shopForm.value.shopID,\r\n    }, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      withCredentials: true,\r\n    })\r\n    if (response.data != null && Array.isArray(response.data))\r\n      users.value = response.data;\r\n  } catch (err) {\r\n    ElMessage.error(\"获取联系人列表失败\")\r\n  }\r\n}\r\n\r\nconst messages = ref([]);\r\nconst chatData = ref({});\r\nconst selectedUser = ref(null);\r\n\r\nasync function IsInChatSession() {\r\n  const userId = new URLSearchParams(window.location.search).get('id');\r\n  if (userId) {\r\n    const user = users.value.find(user => user.id === parseInt(userId, 10));\r\n    if (user) {\r\n      await selectUser(user);\r\n    }\r\n  } else {\r\n    selectedUser.value = null;\r\n    messages.value = [];\r\n  }\r\n}\r\n\r\nconst inputMessage = ref(\"\");\r\n\r\nconst filteredUsers = computed(() =>\r\n    users.value.filter((user) => user.nickname.includes(searchQuery.value))\r\n);\r\n\r\nasync function selectUser(user) {\r\n  try {\r\n    const response = await axios.post('/api/shop/chat/getTalkDetail', {\r\n      shopID: shopForm.value.shopID,\r\n      userId: user.id,\r\n    }, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      withCredentials: true,\r\n    })\r\n    if (response.data != null) {\r\n      const chatId = Object.keys(response.data)[0];\r\n      chatData.value[chatId] = response.data[chatId].map(msg => ({\r\n        content: msg.content,\r\n        isSelf: msg.isSelf,\r\n        isRead: msg.isRead,\r\n        contentType: msg.contentType\r\n      }));\r\n      selectedUser.value = user;\r\n      messages.value = chatData.value[user.id] || [];\r\n    }\r\n  } catch (error) {\r\n    ElMessage.error(\"获取聊天记录失败\")\r\n  }\r\n}\r\n\r\nasync function handleInitChat(id) {\r\n  const user = users.value.find(user => user.id === parseInt(id, 10));\r\n  if (user) {\r\n    if (selectedUser.value && selectedUser.value.id === user.id) {\r\n      await selectUser(user);\r\n    }\r\n  }\r\n  await initUserList();\r\n}\r\n\r\nasync function deleteUser(index) {\r\n  const contactId = users.value[index].id;\r\n  try {\r\n    const response = await axios.post('/api/shop/chat/deleteChatSession', {\r\n      shopID: shopForm.value.shopID,\r\n      userId: contactId,\r\n    }, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      withCredentials: true\r\n    });\r\n    if (response.data.code === 200) {\r\n      delete chatData.value[contactId];\r\n      if (selectedUser.value && selectedUser.value.id === index) {\r\n        selectedUser.value = null;\r\n        messages.value = [];\r\n      }\r\n      await initUserList();\r\n    } else if (response.data.code === 400)\r\n      ElMessage.error('删除联系人失败，请稍后再试')\r\n  } catch (error) {\r\n    ElMessage.error('删除联系人失败，请稍后再试')\r\n  }\r\n}\r\n\r\nconst chatWindowRef = ref(null);\r\nconst showEmojiPicker = ref(false);\r\n\r\nconst toggleEmojiPicker = () => {\r\n  showEmojiPicker.value = !showEmojiPicker.value;\r\n};\r\n\r\nconst addEmoji = (event) => {\r\n  inputMessage.value += event.detail.unicode;\r\n};\r\n\r\nasync function uploadImage(file) {\r\n  try {\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    formData.append('userId', selectedUser.value.id);\r\n    formData.append('shopId', shopForm.value.shopID);\r\n    const response = await axios.post('/api/shop/chat/uploadImage', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      },\r\n      withCredentials: true\r\n    });\r\n    if (response.data.code === 200) {\r\n      await initUserList();\r\n      await selectUser(selectedUser.value);\r\n      await nextTick(() => {\r\n        const chatWindow = chatWindowRef.value;\r\n        if (chatWindow) {\r\n          chatWindow.scrollTop = chatWindow.scrollHeight;\r\n        }\r\n      });\r\n    } else\r\n      ElMessage.error('上传图片失败，请稍后再试')\r\n  } catch (err) {\r\n    ElMessage.error('上传图片失败，请稍后再试')\r\n  }\r\n}\r\n\r\nconst beforeUpload = async (file) => {\r\n  const isImage = file.type.startsWith('image/');\r\n  if (!isImage) {\r\n    ElMessage.error('请选择图片文件！');\r\n    return;\r\n  }\r\n  const isLt2M = file.size / 1024 / 1024 < 2;  // 限制文件大小为 2MB\r\n  if (!isLt2M) {\r\n    ElMessage.error('图片大小不能超过 2MB！');\r\n    return;\r\n  }\r\n  await uploadImage(file);\r\n};\r\n\r\nasync function sendMessage() {\r\n  if (inputMessage.value.trim() === \"\") {\r\n    ElMessage.error(\"消息不能为空\")\r\n    return;\r\n  }\r\n  try {\r\n    const response = await axios.post('/api/shop/chat/sendMessage', {\r\n      shopID: shopForm.value.shopID,\r\n      userId: selectedUser.value.id,\r\n      message: inputMessage.value,\r\n    }, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      withCredentials: true\r\n    })\r\n    if (response.data.code === 200) {\r\n      await selectUser(selectedUser.value);\r\n      await initUserList();\r\n      inputMessage.value = \"\";\r\n      await nextTick(() => {\r\n        const chatWindow = chatWindowRef.value;\r\n        if (chatWindow) {\r\n          chatWindow.scrollTop = chatWindow.scrollHeight;\r\n        }\r\n      });\r\n    } else if (response.data.code === 400) {\r\n      ElMessage.error(\"发送失败，请稍后再试\")\r\n    }\r\n  } catch (error) {\r\n    ElMessage.error(\"发送失败，请稍后再试\")\r\n  }\r\n}\r\n\r\nconst cropper = ref(null);\r\nconst imageSrc = ref(null);\r\nconst dialogVisible = ref(false);\r\n\r\nconst takeScreenshot = () => {\r\n  dialogVisible.value = true;\r\n  const element = document.body;\r\n  html2canvas(element).then(canvas => {\r\n    imageSrc.value = canvas.toDataURL('image/png');\r\n  });\r\n};\r\n\r\nasync function cropImage() {\r\n  const canvas = cropper.value.getCroppedCanvas();\r\n  const dataUrl = canvas.toDataURL('image/png');\r\n  const file = dataUrlToFile(dataUrl);\r\n  await uploadImage(file)\r\n  handleClose();\r\n}\r\n\r\nconst dataUrlToFile = (dataUrl) => {\r\n  const arr = dataUrl.split(',');\r\n  const mime = arr[0].match(/:(.*?);/)[1];\r\n  const bstr = atob(arr[1]);\r\n  let n = bstr.length;\r\n  const u8arr = new Uint8Array(n);\r\n  while (n--) {\r\n    u8arr[n] = bstr.charCodeAt(n);\r\n  }\r\n  return new File([u8arr], 'cropped-image.png', {type: mime});\r\n};\r\n\r\nconst handleClose = () => {\r\n  dialogVisible.value = false;\r\n  imageSrc.value = '';\r\n};\r\n\r\nonMounted(async () => {\r\n  initUserSession();\r\n  await initShopInfo();\r\n  shopSlider.value.setActiveIndex('5-1')\r\n  storeHeader.value.setTitle('客服');\r\n  await initUserList();\r\n  await IsInChatSession();\r\n});\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n.chat-container {\r\n  display: flex;\r\n  height: 100vh;\r\n  background: #f9f9f9;\r\n  font-family: \"Arial\", sans-serif;\r\n  max-height: 94vh;\r\n}\r\n\r\n/* 左侧用户列表 */\r\n.user-list {\r\n  width: 300px;\r\n  background: #ffffff;\r\n  border-right: 1px solid #e6e6e6;\r\n  overflow-y: auto;\r\n}\r\n\r\n.search-bar {\r\n  padding: 10px;\r\n  border-bottom: 1px solid #e6e6e6;\r\n  background: #f8f8f8;\r\n}\r\n\r\n.user-item {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 10px;\r\n  cursor: pointer;\r\n  border-bottom: 1px solid #e6e6e6;\r\n  position: relative;\r\n}\r\n\r\n.user-item:hover {\r\n  background: #f0f8ff;\r\n}\r\n\r\n.user-item.selected {\r\n  background: #e6f7ff;\r\n}\r\n\r\n.user-info {\r\n  flex-grow: 1;\r\n  margin-left: 10px;\r\n  overflow: hidden;\r\n}\r\n\r\n.user-info h6 {\r\n  margin: 0;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n}\r\n\r\n.user-info p {\r\n  margin: 0;\r\n  font-size: 12px;\r\n  color: #777;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n}\r\n\r\n.delete-btn {\r\n  display: none;\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n}\r\n\r\n.user-item:hover .delete-btn {\r\n  display: block;\r\n}\r\n\r\n/* 右侧聊天窗口 */\r\n.chat-interface {\r\n  flex-grow: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background: #fff;\r\n}\r\n\r\n.chat-header {\r\n  padding: 15px;\r\n  border-bottom: 1px solid #e6e6e6;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.chat-header h5 {\r\n  margin: 0;\r\n  margin-left: 10px;\r\n  font-size: 16px;\r\n  color: #333;\r\n}\r\n\r\n.chat-body {\r\n  flex-grow: 1;\r\n  padding: 15px;\r\n  overflow-y: auto;\r\n  background: #fafafa;\r\n}\r\n\r\n.message {\r\n  display: flex;\r\n  align-items: flex-start; /* 消息和头像垂直对齐 */\r\n  margin-bottom: 10px;\r\n\r\n  &.self {\r\n    flex-direction: row-reverse; /* 商家消息右侧显示 */\r\n  }\r\n\r\n  .avatar {\r\n    margin: 0 10px; /* 调整头像和消息的间距 */\r\n  }\r\n\r\n  .message-content {\r\n    padding: 10px;\r\n    border-radius: 8px;\r\n    max-width: 60%;\r\n    background: #e9ecef; /* 默认背景色 */\r\n  }\r\n\r\n  &.self .message-content {\r\n    background: #d4edda; /* 商家消息背景色 */\r\n    color: #155724; /* 商家消息文本颜色 */\r\n  }\r\n}\r\n\r\n.chat-input {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 10px;\r\n  border-top: 1px solid #e6e6e6;\r\n  background: #fff;\r\n}\r\n\r\n.fade-enter-active,\r\n.fade-leave-active {\r\n  transition: opacity 0.5s;\r\n}\r\n\r\n.fade-enter,\r\n.fade-leave-to {\r\n  opacity: 0;\r\n}\r\n\r\n.message-status {\r\n  font-size: 12px;\r\n  color: #999;\r\n  margin-top: 4px;\r\n  padding: 5px;\r\n}\r\n\r\n.read-status {\r\n  color: #67C23A; /* 已读状态颜色 */\r\n}\r\n\r\n.unread-status {\r\n  color: #F56C6C; /* 未读状态颜色 */\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
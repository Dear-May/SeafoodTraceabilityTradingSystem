{"ast":null,"code":"import { onMounted, ref } from \"vue\";\nimport { ElMessage } from \"element-plus\";\nimport axios from \"axios\";\nimport useUser from \"@/composables/useUser\";\nconst MAX_FILE_SIZE = 3 * 1024 * 1024;\nexport default {\n  __name: 'AvatarChangComponent',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const {\n      UserInfoForm,\n      initUserSession\n    } = useUser();\n    const isHovering = ref(false);\n    const centerDialogVisible = ref(false);\n    const avatarUrl = ref('');\n    const fileInput = ref(null);\n    const errorMessage = ref('');\n    const triggerFileInput = () => {\n      fileInput.value.click();\n    };\n    const handleFileChange = event => {\n      const file = event.target.files[0];\n      if (file) {\n        // 检测文件是否为图片\n        if (!file.type.startsWith('image/')) {\n          ElMessage({\n            type: 'error',\n            message: '请选择图片文件（如 jpg、png 格式）'\n          });\n          // 重置文件选择框\n          resetAvatar();\n          return;\n        }\n\n        // 检测文件大小是否超过 3MB\n        if (file.size > MAX_FILE_SIZE) {\n          ElMessage({\n            type: 'error',\n            message: '文件大小不能超过 3MB'\n          });\n          // 重置文件选择框\n          resetAvatar();\n          return;\n        }\n        const reader = new FileReader();\n        reader.onload = e => {\n          avatarUrl.value = e.target.result;\n        };\n        reader.onerror = () => {\n          ElMessage({\n            type: 'error',\n            message: '文件读取失败，请重试'\n          });\n          resetAvatar();\n        };\n        reader.readAsDataURL(file);\n      }\n    };\n    const resetAvatar = () => {\n      avatarUrl.value = '';\n      fileInput.value.value = null;\n    };\n    async function uploadAvatar() {\n      const file = fileInput.value.files[0];\n      if (!file) {\n        errorMessage.value = '请选择一个图片文件';\n        return;\n      }\n      const formData = new FormData();\n      formData.append('avatar', file);\n      formData.append('username', UserInfoForm.value.name);\n      const response = await axios.post('/api/user/upload-avatar', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        withCredentials: true\n      });\n      if (response.data.code === 200) {\n        ElMessage.success('头像上传成功');\n        //更新session\n        sessionStorage.setItem('userBaseInfo', JSON.stringify({\n          id: UserInfoForm.value.id,\n          username: UserInfoForm.value.name,\n          avatar: \"https://oss.yy0313.fit/UserAvatar/\" + UserInfoForm.value.name + \".jpg\",\n          nickname: UserInfoForm.value.nickname\n        }));\n        setTimeout(() => {\n          window.location.reload();\n        }, 1000);\n      } else {\n        ElMessage.error('头像上传失败，请重试');\n      }\n    }\n    onMounted(() => {\n      initUserSession();\n    });\n    const __returned__ = {\n      UserInfoForm,\n      initUserSession,\n      isHovering,\n      centerDialogVisible,\n      avatarUrl,\n      fileInput,\n      MAX_FILE_SIZE,\n      errorMessage,\n      triggerFileInput,\n      handleFileChange,\n      resetAvatar,\n      uploadAvatar,\n      onMounted,\n      ref,\n      get ElMessage() {\n        return ElMessage;\n      },\n      get axios() {\n        return axios;\n      },\n      get useUser() {\n        return useUser;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["onMounted","ref","ElMessage","axios","useUser","MAX_FILE_SIZE","UserInfoForm","initUserSession","isHovering","centerDialogVisible","avatarUrl","fileInput","errorMessage","triggerFileInput","value","click","handleFileChange","event","file","target","files","type","startsWith","message","resetAvatar","size","reader","FileReader","onload","e","result","onerror","readAsDataURL","uploadAvatar","formData","FormData","append","name","response","post","headers","withCredentials","data","code","success","sessionStorage","setItem","JSON","stringify","id","username","avatar","nickname","setTimeout","window","location","reload","error"],"sources":["D:/Cache/Java/shopping/shoppping_c_frontend/src/components/AvatarChangComponent.vue"],"sourcesContent":["<template>\r\n  <a class=\"d-flex align-items-center mb-3 mb-md-0 me-md-auto link-body-emphasis text-decoration-none\">\r\n    <div class=\"profile-header card-wrapper\" @click=\"centerDialogVisible = true\">\r\n      <img :src=\"UserInfoForm.avatar\" alt=\"User Avatar\" class=\"profile-avatar\" @mouseover=\"isHovering = true\"\r\n           @mouseout=\"isHovering = false\">\r\n      <div v-if=\"isHovering\" class=\"edit-profile\">更换头像</div>\r\n    </div>\r\n    <span class=\"fs-4\" style=\"margin-left: 10px;\">{{ UserInfoForm.nickname }}</span>\r\n  </a>\r\n  <el-dialog v-model=\"centerDialogVisible\" title=\"更换头像\" width=\"600px\" align-center>\r\n    <div class=\"avatar-upload-container\">\r\n      <div class=\"avatar-preview\">\r\n        <img v-if=\"avatarUrl\" :src=\"avatarUrl\" alt=\"avatar preview\" class=\"avatar-preview-image\"/>\r\n        <div v-else class=\"avatar-placeholder\">\r\n          <span>头像预览</span>\r\n        </div>\r\n      </div>\r\n      <div class=\"avatar-actions\">\r\n        <div class=\"preview-sizes\">\r\n          <h4>预览</h4>\r\n          <div class=\"preview-size\">\r\n            <img v-if=\"avatarUrl\" :src=\"avatarUrl\" alt=\"avatar preview 100x100\" width=\"100\" height=\"100\"\r\n                 style=\"border-radius: 50%\"/>\r\n            <div v-else class=\"avatar-placeholder-small\"></div>\r\n            <span>100 x 100</span>\r\n          </div>\r\n          <div class=\"preview-size\">\r\n            <img v-if=\"avatarUrl\" :src=\"avatarUrl\" alt=\"avatar preview 50x50\" width=\"50\" height=\"50\"\r\n                 style=\"border-radius: 50%\"/>\r\n            <div v-else class=\"avatar-placeholder-small\"></div>\r\n            <span>50 x 50</span>\r\n          </div>\r\n        </div>\r\n        <div class=\"avatar-edit-buttons\">\r\n          <el-button type=\"primary\" @click=\"triggerFileInput\">\r\n            <i class=\"bi bi-upload\"></i>&nbsp;上传\r\n          </el-button>\r\n          <el-button type=\"danger\" @click=\"resetAvatar\">\r\n            <i class=\"bi bi-x-circle\"></i>&nbsp;重置\r\n          </el-button>\r\n          <input type=\"file\" ref=\"fileInput\" @change=\"handleFileChange\" accept=\"image/*\"\r\n                 style=\"display: none\"/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <template #footer>\r\n      <div class=\"dialog-footer\">\r\n        <el-button @click=\"() => {resetAvatar(); centerDialogVisible = false;}\">取消\r\n        </el-button>\r\n        <el-button type=\"primary\" @click=\"() => {uploadAvatar(); centerDialogVisible = false;}\">\r\n          确认\r\n        </el-button>\r\n      </div>\r\n    </template>\r\n  </el-dialog>\r\n</template>\r\n\r\n<script setup>\r\nimport {onMounted, ref} from \"vue\";\r\nimport {ElMessage} from \"element-plus\";\r\nimport axios from \"axios\";\r\nimport useUser from \"@/composables/useUser\";\r\n\r\nconst {UserInfoForm, initUserSession} = useUser()\r\n\r\nconst isHovering = ref(false);\r\nconst centerDialogVisible = ref(false);\r\nconst avatarUrl = ref('');\r\nconst fileInput = ref(null);\r\nconst MAX_FILE_SIZE = 3 * 1024 * 1024;\r\nconst errorMessage = ref('');\r\n\r\nconst triggerFileInput = () => {\r\n  fileInput.value.click();\r\n};\r\n\r\nconst handleFileChange = (event) => {\r\n  const file = event.target.files[0];\r\n\r\n  if (file) {\r\n    // 检测文件是否为图片\r\n    if (!file.type.startsWith('image/')) {\r\n      ElMessage({\r\n        type: 'error',\r\n        message: '请选择图片文件（如 jpg、png 格式）',\r\n      });\r\n      // 重置文件选择框\r\n      resetAvatar();\r\n      return;\r\n    }\r\n\r\n    // 检测文件大小是否超过 3MB\r\n    if (file.size > MAX_FILE_SIZE) {\r\n      ElMessage({\r\n        type: 'error',\r\n        message: '文件大小不能超过 3MB',\r\n      });\r\n      // 重置文件选择框\r\n      resetAvatar();\r\n      return;\r\n    }\r\n\r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      avatarUrl.value = e.target.result;\r\n    };\r\n    reader.onerror = () => {\r\n      ElMessage({\r\n        type: 'error',\r\n        message: '文件读取失败，请重试',\r\n      });\r\n      resetAvatar();\r\n    };\r\n    reader.readAsDataURL(file);\r\n  }\r\n};\r\n\r\nconst resetAvatar = () => {\r\n  avatarUrl.value = '';\r\n  fileInput.value.value = null;\r\n};\r\n\r\nasync function uploadAvatar() {\r\n  const file = fileInput.value.files[0];\r\n  if (!file) {\r\n    errorMessage.value = '请选择一个图片文件';\r\n    return;\r\n  }\r\n  const formData = new FormData();\r\n  formData.append('avatar', file);\r\n  formData.append('username', UserInfoForm.value.name)\r\n  const response = await axios.post('/api/user/upload-avatar', formData, {\r\n    headers: {\r\n      'Content-Type': 'multipart/form-data'\r\n    },\r\n    withCredentials: true\r\n  })\r\n  if (response.data.code === 200) {\r\n    ElMessage.success('头像上传成功');\r\n    //更新session\r\n    sessionStorage.setItem('userBaseInfo', JSON.stringify({\r\n      id: UserInfoForm.value.id,\r\n      username: UserInfoForm.value.name,\r\n      avatar: \"https://oss.yy0313.fit/UserAvatar/\" + UserInfoForm.value.name + \".jpg\",\r\n      nickname: UserInfoForm.value.nickname,\r\n    }));\r\n    setTimeout(() => {\r\n      window.location.reload();\r\n    }, 1000);\r\n  } else {\r\n    ElMessage.error('头像上传失败，请重试');\r\n  }\r\n}\r\n\r\nonMounted(() => {\r\n  initUserSession();\r\n});\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n.profile-card {\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.card-wrapper {\r\n  position: relative;\r\n}\r\n\r\n.profile-avatar {\r\n  width: 60px;\r\n  height: 60px;\r\n  border-radius: 50%;\r\n  position: relative;\r\n  z-index: 2;\r\n  cursor: pointer;\r\n}\r\n\r\n.edit-profile {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  font-size: 12px;\r\n  color: white;\r\n  padding: 5px;\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n  width: 100%;\r\n  height: 100%;\r\n  border-radius: 50%;\r\n  display: flex; /* 用于文字垂直居中 */\r\n  align-items: center; /* 垂直居中 */\r\n  justify-content: center; /* 水平居中 */\r\n  pointer-events: none;\r\n  z-index: 3;\r\n  opacity: 0.8;\r\n}\r\n\r\n.avatar-upload-container {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.avatar-preview {\r\n  width: 250px;\r\n  height: 250px;\r\n  border-radius: 50%;\r\n  border: 2px dashed #dcdcdc;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  position: relative;\r\n  background-color: #f5f5f5;\r\n  margin-top: 30px;\r\n  margin-left: 50px;\r\n}\r\n\r\n.avatar-placeholder {\r\n  font-size: 18px;\r\n  color: #888;\r\n  text-align: center;\r\n}\r\n\r\n.avatar-preview-image {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n  border-radius: 50%;\r\n}\r\n\r\n.avatar-actions {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 15px;\r\n}\r\n\r\n.preview-sizes {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n}\r\n\r\n.preview-size {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n}\r\n\r\n.avatar-placeholder-small {\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 50%;\r\n  background-color: #dcdcdc;\r\n}\r\n\r\n.avatar-edit-buttons {\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n</style>"],"mappings":"AA0DA,SAAQA,SAAS,EAAEC,GAAG,QAAO,KAAK;AAClC,SAAQC,SAAS,QAAO,cAAc;AACtC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,uBAAuB;AAQ3C,MAAMC,aAAa,GAAG,CAAC,GAAG,IAAI,GAAG,IAAI;;;;;;;IANrC,MAAM;MAACC,YAAY;MAAEC;IAAe,CAAC,GAAGH,OAAO,CAAC,CAAC;IAEjD,MAAMI,UAAU,GAAGP,GAAG,CAAC,KAAK,CAAC;IAC7B,MAAMQ,mBAAmB,GAAGR,GAAG,CAAC,KAAK,CAAC;IACtC,MAAMS,SAAS,GAAGT,GAAG,CAAC,EAAE,CAAC;IACzB,MAAMU,SAAS,GAAGV,GAAG,CAAC,IAAI,CAAC;IAE3B,MAAMW,YAAY,GAAGX,GAAG,CAAC,EAAE,CAAC;IAE5B,MAAMY,gBAAgB,GAAGA,CAAA,KAAM;MAC7BF,SAAS,CAACG,KAAK,CAACC,KAAK,CAAC,CAAC;IACzB,CAAC;IAED,MAAMC,gBAAgB,GAAIC,KAAK,IAAK;MAClC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MAElC,IAAIF,IAAI,EAAE;QACR;QACA,IAAI,CAACA,IAAI,CAACG,IAAI,CAACC,UAAU,CAAC,QAAQ,CAAC,EAAE;UACnCpB,SAAS,CAAC;YACRmB,IAAI,EAAE,OAAO;YACbE,OAAO,EAAE;UACX,CAAC,CAAC;UACF;UACAC,WAAW,CAAC,CAAC;UACb;QACF;;QAEA;QACA,IAAIN,IAAI,CAACO,IAAI,GAAGpB,aAAa,EAAE;UAC7BH,SAAS,CAAC;YACRmB,IAAI,EAAE,OAAO;YACbE,OAAO,EAAE;UACX,CAAC,CAAC;UACF;UACAC,WAAW,CAAC,CAAC;UACb;QACF;QAEA,MAAME,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;QAC/BD,MAAM,CAACE,MAAM,GAAIC,CAAC,IAAK;UACrBnB,SAAS,CAACI,KAAK,GAAGe,CAAC,CAACV,MAAM,CAACW,MAAM;QACnC,CAAC;QACDJ,MAAM,CAACK,OAAO,GAAG,MAAM;UACrB7B,SAAS,CAAC;YACRmB,IAAI,EAAE,OAAO;YACbE,OAAO,EAAE;UACX,CAAC,CAAC;UACFC,WAAW,CAAC,CAAC;QACf,CAAC;QACDE,MAAM,CAACM,aAAa,CAACd,IAAI,CAAC;MAC5B;IACF,CAAC;IAED,MAAMM,WAAW,GAAGA,CAAA,KAAM;MACxBd,SAAS,CAACI,KAAK,GAAG,EAAE;MACpBH,SAAS,CAACG,KAAK,CAACA,KAAK,GAAG,IAAI;IAC9B,CAAC;IAED,eAAemB,YAAYA,CAAA,EAAG;MAC5B,MAAMf,IAAI,GAAGP,SAAS,CAACG,KAAK,CAACM,KAAK,CAAC,CAAC,CAAC;MACrC,IAAI,CAACF,IAAI,EAAE;QACTN,YAAY,CAACE,KAAK,GAAG,WAAW;QAChC;MACF;MACA,MAAMoB,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAElB,IAAI,CAAC;MAC/BgB,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAE9B,YAAY,CAACQ,KAAK,CAACuB,IAAI,CAAC;MACpD,MAAMC,QAAQ,GAAG,MAAMnC,KAAK,CAACoC,IAAI,CAAC,yBAAyB,EAAEL,QAAQ,EAAE;QACrEM,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,eAAe,EAAE;MACnB,CAAC,CAAC;MACF,IAAIH,QAAQ,CAACI,IAAI,CAACC,IAAI,KAAK,GAAG,EAAE;QAC9BzC,SAAS,CAAC0C,OAAO,CAAC,QAAQ,CAAC;QAC3B;QACAC,cAAc,CAACC,OAAO,CAAC,cAAc,EAAEC,IAAI,CAACC,SAAS,CAAC;UACpDC,EAAE,EAAE3C,YAAY,CAACQ,KAAK,CAACmC,EAAE;UACzBC,QAAQ,EAAE5C,YAAY,CAACQ,KAAK,CAACuB,IAAI;UACjCc,MAAM,EAAE,oCAAoC,GAAG7C,YAAY,CAACQ,KAAK,CAACuB,IAAI,GAAG,MAAM;UAC/Ee,QAAQ,EAAE9C,YAAY,CAACQ,KAAK,CAACsC;QAC/B,CAAC,CAAC,CAAC;QACHC,UAAU,CAAC,MAAM;UACfC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;QAC1B,CAAC,EAAE,IAAI,CAAC;MACV,CAAC,MAAM;QACLtD,SAAS,CAACuD,KAAK,CAAC,YAAY,CAAC;MAC/B;IACF;IAEAzD,SAAS,CAAC,MAAM;MACdO,eAAe,CAAC,CAAC;IACnB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport { onMounted, onUnmounted, ref } from \"vue\";\nimport axios from \"axios\";\nimport { ElMessage } from \"element-plus\";\nimport router from \"@/router\";\nexport default {\n  __name: 'SubmitOrderView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const hostip = ref();\n    const token = ref();\n    const qrCode = ref(\"\"); // 二维码数据\n    const paymentStatus = ref(\"\"); // 支付状态\n    let previousStatus = \"\"; // 记录上一次的支付状态\n    let socket; // WebSocket 实例\n\n    // 获取二维码数据\n    const fetchQRCode = async () => {\n      try {\n        const response = await axios.post(\"/api/pay/generate_qr\", {\n          orderId: token.value // 订单号\n        });\n        qrCode.value = response.data.qrCode;\n      } catch (error) {\n        console.error(\"二维码生成失败\", error);\n        alert(\"生成二维码失败，请稍后重试\");\n      }\n    };\n    async function getHostIP() {\n      try {\n        const response = await axios.get(\"/api/other/getHostIp\");\n        if (response.data !== null) {\n          hostip.value = response.data;\n        } else hostip.value = \"192.168.1.20\";\n      } catch (error) {\n        ElMessage.error(\"获取服务器 IP 失败，请稍后重试\");\n      }\n    }\n\n    // 连接 WebSocket\n    const connectWebSocket = async () => {\n      await getHostIP();\n      socket = new WebSocket(\"ws://\" + hostip.value + \":8888/channel/payment/\" + token.value);\n      socket.onmessage = event => {\n        console.log(\"WebSocket 收到消息：\", event.data);\n        const message = JSON.parse(event.data);\n        const newStatus = message.status;\n        if (newStatus !== previousStatus) {\n          paymentStatus.value = newStatus;\n          previousStatus = newStatus;\n          handleMySpace(newStatus);\n        }\n        console.log(\"WebSocket 收到消息：\", message);\n      };\n      socket.onopen = () => {\n        console.log(\"WebSocket 连接已建立\");\n      };\n      socket.onclose = () => {\n        console.log(\"WebSocket 连接已关闭\");\n      };\n    };\n    async function handleMySpace(newStatus) {\n      if (newStatus !== \"已扫码\") {\n        if (newStatus === \"已支付\") {\n          try {\n            const response = await axios.post(\"/api/pay/changOrderStatus\", {\n              token: token.value,\n              status: newStatus\n            });\n            if (response.data.code === 200) ElMessage.success(\"支付成功！\");else ElMessage.error(\"订单状态更新失败，请稍后重试\");\n          } catch (error) {\n            ElMessage.error(\"订单状态更新失败，请稍后重试\");\n          }\n        } else if (newStatus === \"未支付\") {\n          ElMessage.error(\"未支付订单\");\n        }\n        setTimeout(() => {\n          router.replace(\"/mySpace\");\n        }, 1500);\n      }\n    }\n\n    // 销毁 WebSocket 连接\n    const disconnectWebSocket = () => {\n      if (socket) {\n        socket.close();\n      }\n    };\n\n    // 生命周期管理\n    onMounted(async () => {\n      const urlParams = new URLSearchParams(window.location.search);\n      token.value = urlParams.get(\"token\");\n      await fetchQRCode();\n      await connectWebSocket();\n    });\n    onUnmounted(() => {\n      disconnectWebSocket();\n    });\n    const __returned__ = {\n      hostip,\n      token,\n      qrCode,\n      paymentStatus,\n      get previousStatus() {\n        return previousStatus;\n      },\n      set previousStatus(v) {\n        previousStatus = v;\n      },\n      get socket() {\n        return socket;\n      },\n      set socket(v) {\n        socket = v;\n      },\n      fetchQRCode,\n      getHostIP,\n      connectWebSocket,\n      handleMySpace,\n      disconnectWebSocket,\n      onMounted,\n      onUnmounted,\n      ref,\n      get axios() {\n        return axios;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get router() {\n        return router;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["onMounted","onUnmounted","ref","axios","ElMessage","router","hostip","token","qrCode","paymentStatus","previousStatus","socket","fetchQRCode","response","post","orderId","value","data","error","console","alert","getHostIP","get","connectWebSocket","WebSocket","onmessage","event","log","message","JSON","parse","newStatus","status","handleMySpace","onopen","onclose","code","success","setTimeout","replace","disconnectWebSocket","close","urlParams","URLSearchParams","window","location","search"],"sources":["D:/Cache/Java/shopping/shoppping_c_frontend/src/views/SubmitOrderView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>支付二维码</h1>\r\n    <img v-if=\"qrCode\" :src=\"qrCode\" alt=\"支付二维码\"/>\r\n    <p v-else>二维码生成中，请稍候...</p>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport {onMounted, onUnmounted, ref} from \"vue\";\r\nimport axios from \"axios\";\r\nimport {ElMessage} from \"element-plus\";\r\nimport router from \"@/router\";\r\n\r\nconst hostip = ref();\r\nconst token = ref();\r\nconst qrCode = ref(\"\"); // 二维码数据\r\nconst paymentStatus = ref(\"\"); // 支付状态\r\nlet previousStatus = \"\"; // 记录上一次的支付状态\r\nlet socket; // WebSocket 实例\r\n\r\n// 获取二维码数据\r\nconst fetchQRCode = async () => {\r\n  try {\r\n    const response = await axios.post(\"/api/pay/generate_qr\", {\r\n      orderId: token.value, // 订单号\r\n    });\r\n    qrCode.value = response.data.qrCode;\r\n  } catch (error) {\r\n    console.error(\"二维码生成失败\", error);\r\n    alert(\"生成二维码失败，请稍后重试\");\r\n  }\r\n};\r\n\r\nasync function getHostIP() {\r\n  try {\r\n    const response = await axios.get(\"/api/other/getHostIp\");\r\n    if (response.data !== null) {\r\n      hostip.value = response.data;\r\n    } else\r\n      hostip.value = \"192.168.1.20\";\r\n  } catch (error) {\r\n    ElMessage.error(\"获取服务器 IP 失败，请稍后重试\");\r\n  }\r\n}\r\n\r\n// 连接 WebSocket\r\nconst connectWebSocket = async () => {\r\n  await getHostIP();\r\n  socket = new WebSocket(\"ws://\" + hostip.value + \":8888/channel/payment/\" + token.value);\r\n\r\n  socket.onmessage = (event) => {\r\n    console.log(\"WebSocket 收到消息：\", event.data);\r\n    const message = JSON.parse(event.data);\r\n    const newStatus = message.status;\r\n\r\n    if (newStatus !== previousStatus) {\r\n      paymentStatus.value = newStatus;\r\n      previousStatus = newStatus;\r\n      handleMySpace(newStatus);\r\n    }\r\n    console.log(\"WebSocket 收到消息：\", message);\r\n  };\r\n  socket.onopen = () => {\r\n    console.log(\"WebSocket 连接已建立\");\r\n  };\r\n\r\n  socket.onclose = () => {\r\n    console.log(\"WebSocket 连接已关闭\");\r\n  };\r\n};\r\n\r\nasync function handleMySpace(newStatus) {\r\n  if (newStatus !== \"已扫码\") {\r\n    if (newStatus === \"已支付\") {\r\n      try {\r\n        const response = await axios.post(\"/api/pay/changOrderStatus\", {\r\n          token: token.value,\r\n          status: newStatus,\r\n        })\r\n        if (response.data.code === 200)\r\n          ElMessage.success(\"支付成功！\");\r\n        else\r\n          ElMessage.error(\"订单状态更新失败，请稍后重试\");\r\n      } catch (error) {\r\n        ElMessage.error(\"订单状态更新失败，请稍后重试\");\r\n      }\r\n    } else if (newStatus === \"未支付\") {\r\n      ElMessage.error(\"未支付订单\");\r\n    }\r\n    setTimeout(() => {\r\n      router.replace(\"/mySpace\")\r\n    }, 1500)\r\n  }\r\n}\r\n\r\n// 销毁 WebSocket 连接\r\nconst disconnectWebSocket = () => {\r\n  if (socket) {\r\n    socket.close();\r\n  }\r\n};\r\n\r\n// 生命周期管理\r\nonMounted(async () => {\r\n  const urlParams = new URLSearchParams(window.location.search);\r\n  token.value = urlParams.get(\"token\");\r\n  await fetchQRCode();\r\n  await connectWebSocket();\r\n});\r\n\r\nonUnmounted(() => {\r\n  disconnectWebSocket();\r\n});\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.container {\r\n  text-align: center;\r\n  margin: 20px;\r\n}\r\n\r\n.title {\r\n  font-size: 24px;\r\n  color: #333;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.qr-image {\r\n  width: 200px;\r\n  height: 200px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 10px;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.loading-text {\r\n  font-size: 18px;\r\n  color: #666;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
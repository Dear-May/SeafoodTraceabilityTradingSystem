{"ast":null,"code":"import { createVNode as _createVNode, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, Transition as _Transition, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, resolveDirective as _resolveDirective } from \"vue\";\nconst _hoisted_1 = {\n  class: \"d-flex\",\n  style: {\n    \"height\": \"100vh\",\n    \"overflow\": \"hidden\"\n  }\n};\nconst _hoisted_2 = {\n  class: \"flex-grow-1 overflow-auto\",\n  style: {\n    \"background\": \"#f5f7fa\"\n  }\n};\nconst _hoisted_3 = {\n  class: \"p-4\"\n};\nconst _hoisted_4 = {\n  class: \"live-stream-container\"\n};\nconst _hoisted_5 = {\n  class: \"header bg-light d-flex align-items-center p-3 shadow-sm row\"\n};\nconst _hoisted_6 = {\n  class: \"col-8\"\n};\nconst _hoisted_7 = {\n  class: \"content-container d-flex\"\n};\nconst _hoisted_8 = {\n  class: \"side-panel bg-light p-3\"\n};\nconst _hoisted_9 = {\n  class: \"online-users mb-4\"\n};\nconst _hoisted_10 = {\n  class: \"text-danger\"\n};\nconst _hoisted_11 = {\n  class: \"list-unstyled\"\n};\nconst _hoisted_12 = [\"src\"];\nconst _hoisted_13 = {\n  class: \"chat-section\"\n};\nconst _hoisted_14 = {\n  class: \"chat-messages border rounded p-2 mb-3\",\n  ref: \"chatWindowRef\"\n};\nconst _hoisted_15 = [\"src\"];\nconst _hoisted_16 = {\n  class: \"mb-1\"\n};\nconst _hoisted_17 = [\"innerHTML\"];\nconst _hoisted_18 = {\n  style: {\n    \"text-align\": \"start\"\n  }\n};\nconst _hoisted_19 = {\n  class: \"input-group\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_emoji_picker = _resolveComponent(\"emoji-picker\");\n  const _directive_loading = _resolveDirective(\"loading\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode($setup[\"ShopSliderComponent\"], {\n    ref: \"shopSlider\"\n  }, null, 512 /* NEED_PATCH */), _createElementVNode(\"div\", _hoisted_2, [_createVNode($setup[\"StoreHeaderView\"], {\n    ref: \"storeHeader\"\n  }, null, 512 /* NEED_PATCH */), _withDirectives((_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createCommentVNode(\" 头部信息 \"), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_createVNode(_component_el_button, {\n    ref: \"button_one\",\n    onClick: $setup.publish,\n    type: \"primary\",\n    size: \"large\",\n    disabled: $setup.isPublishing\n  }, {\n    default: _withCtx(() => _cache[1] || (_cache[1] = [_createTextVNode(\" 开始直播 \")])),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"disabled\"]), _createVNode(_component_el_button, {\n    ref: \"button_two\",\n    onClick: $setup.close,\n    type: \"danger\",\n    size: \"large\",\n    disabled: !$setup.isPublishing\n  }, {\n    default: _withCtx(() => _cache[2] || (_cache[2] = [_createTextVNode(\" 停止直播 \")])),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"disabled\"])])]), _createCommentVNode(\" 主体内容 \"), _createElementVNode(\"div\", _hoisted_7, [_createCommentVNode(\" 视频播放区 \"), _cache[4] || (_cache[4] = _createElementVNode(\"div\", {\n    class: \"video-section flex-grow-1\"\n  }, [_createElementVNode(\"video\", {\n    id: \"video\",\n    autoplay: \"\",\n    playsinline: \"\",\n    muted: \"\",\n    class: \"video-element\",\n    style: {\n      \"width\": \"100%\",\n      \"height\": \"100%\",\n      \"object-fit\": \"cover\"\n    }\n  })], -1 /* HOISTED */)), _createCommentVNode(\" 在线用户和聊天区域 \"), _createElementVNode(\"div\", _hoisted_8, [_createCommentVNode(\" 在线用户列表 \"), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"h6\", _hoisted_10, \"在线人员 (\" + _toDisplayString($setup.onlineUsers.length) + \")\", 1 /* TEXT */), _createElementVNode(\"ul\", _hoisted_11, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.onlineUsers, (user, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index,\n      class: \"d-flex align-items-center mb-2\"\n    }, [_createElementVNode(\"img\", {\n      class: \"user-avatar-sm rounded-circle me-2\",\n      src: user.avatar,\n      alt: \"用户头像\"\n    }, null, 8 /* PROPS */, _hoisted_12), _createElementVNode(\"span\", null, _toDisplayString(user.name), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createCommentVNode(\" 聊天区 \"), _createElementVNode(\"div\", _hoisted_13, [_cache[3] || (_cache[3] = _createElementVNode(\"h6\", {\n    class: \"text-primary\"\n  }, \"聊天区\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_14, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.chatMessages, (message, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"d-flex align-items-start mb-2\"\n    }, [_createElementVNode(\"img\", {\n      class: \"user-avatar-sm rounded-circle me-2\",\n      src: message.avatar,\n      alt: \"用户头像\",\n      width: \"35\",\n      height: \"35\"\n    }, null, 8 /* PROPS */, _hoisted_15), _createElementVNode(\"div\", null, [_createElementVNode(\"p\", _hoisted_16, [_createElementVNode(\"strong\", null, _toDisplayString(message.sender), 1 /* TEXT */)]), _createElementVNode(\"p\", {\n      class: \"text-muted mb-0\",\n      innerHTML: message.content\n    }, null, 8 /* PROPS */, _hoisted_17)])]);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), _createCommentVNode(\" 聊天输入框 \"), _createElementVNode(\"div\", _hoisted_18, [_createVNode(_Transition, {\n    name: \"fade\"\n  }, {\n    default: _withCtx(() => [$setup.showEmojiPicker ? (_openBlock(), _createBlock(_component_emoji_picker, {\n      key: 0,\n      onEmojiClick: $setup.addEmoji,\n      style: {\n        \"position\": \"absolute\",\n        \"bottom\": \"200px\",\n        \"right\": \"100px\"\n      }\n    })) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  }), _createElementVNode(\"i\", {\n    class: \"bi bi-emoji-smile me-3\",\n    style: {\n      \"font-size\": \"1.5rem\",\n      \"cursor\": \"pointer\"\n    },\n    onClick: $setup.toggleEmojiPicker\n  })]), _createElementVNode(\"div\", _hoisted_19, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.chatInput = $event),\n    class: \"form-control\",\n    placeholder: \"输入50字以内聊天内容~\",\n    maxlength: \"50\",\n    onKeyup: _withKeys($setup.sendMessage, [\"enter\"])\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $setup.chatInput]]), _createElementVNode(\"button\", {\n    class: \"btn btn-danger\",\n    onClick: $setup.sendMessage\n  }, \"发送\")])])])])])])), [[_directive_loading, $setup.loading]])])]);\n}","map":{"version":3,"names":["class","style","ref","_createElementBlock","_hoisted_1","_createVNode","$setup","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_createCommentVNode","_hoisted_5","_hoisted_6","_component_el_button","onClick","publish","type","size","disabled","isPublishing","default","_withCtx","_cache","_createTextVNode","_","close","_hoisted_7","id","autoplay","playsinline","muted","_hoisted_8","_hoisted_9","_hoisted_10","_toDisplayString","onlineUsers","length","_hoisted_11","_Fragment","_renderList","user","index","key","src","avatar","alt","_hoisted_12","name","_hoisted_13","_hoisted_14","chatMessages","message","width","height","_hoisted_15","_hoisted_16","sender","innerHTML","content","_hoisted_17","_hoisted_18","_Transition","showEmojiPicker","_createBlock","_component_emoji_picker","onEmojiClick","addEmoji","toggleEmojiPicker","_hoisted_19","$event","chatInput","placeholder","maxlength","onKeyup","_withKeys","sendMessage","loading"],"sources":["D:\\Cache\\Java\\shopping\\shoppping_c_frontend\\src\\views\\Store\\StoreLiveView.vue"],"sourcesContent":["<template>\r\n  <div class=\"d-flex\" style=\"height: 100vh; overflow: hidden;\">\r\n    <ShopSliderComponent ref=\"shopSlider\"></ShopSliderComponent>\r\n    <div class=\"flex-grow-1 overflow-auto\" style=\"background: #f5f7fa;\">\r\n      <StoreHeaderView ref=\"storeHeader\"></StoreHeaderView>\r\n\r\n      <div class=\"p-4\" v-loading=\"loading\">\r\n        <div class=\"live-stream-container\">\r\n          <!-- 头部信息 -->\r\n          <div class=\"header bg-light d-flex align-items-center p-3 shadow-sm row\">\r\n            <div class=\"col-8\">\r\n              <el-button\r\n                  ref=\"button_one\"\r\n                  @click=\"publish\"\r\n                  type=\"primary\"\r\n                  size=\"large\"\r\n                  :disabled=\"isPublishing\"\r\n              >\r\n                开始直播\r\n              </el-button>\r\n              <el-button\r\n                  ref=\"button_two\"\r\n                  @click=\"close\"\r\n                  type=\"danger\"\r\n                  size=\"large\"\r\n                  :disabled=\"!isPublishing\"\r\n              >\r\n                停止直播\r\n              </el-button>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- 主体内容 -->\r\n          <div class=\"content-container d-flex\">\r\n            <!-- 视频播放区 -->\r\n            <div class=\"video-section flex-grow-1\">\r\n              <video id=\"video\" autoplay playsinline muted class=\"video-element\"\r\n                     style=\"width: 100%; height: 100%; object-fit: cover;\"></video>\r\n            </div>\r\n\r\n            <!-- 在线用户和聊天区域 -->\r\n            <div class=\"side-panel bg-light p-3\">\r\n              <!-- 在线用户列表 -->\r\n              <div class=\"online-users mb-4\">\r\n                <h6 class=\"text-danger\">在线人员 ({{ onlineUsers.length }})</h6>\r\n                <ul class=\"list-unstyled\">\r\n                  <li\r\n                      v-for=\"(user, index) in onlineUsers\"\r\n                      :key=\"index\"\r\n                      class=\"d-flex align-items-center mb-2\"\r\n                  >\r\n                    <img\r\n                        class=\"user-avatar-sm rounded-circle me-2\"\r\n                        :src=\"user.avatar\"\r\n                        alt=\"用户头像\"\r\n                    />\r\n                    <span>{{ user.name }}</span>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n\r\n              <!-- 聊天区 -->\r\n              <div class=\"chat-section\">\r\n                <h6 class=\"text-primary\">聊天区</h6>\r\n                <div class=\"chat-messages border rounded p-2 mb-3\" ref=\"chatWindowRef\">\r\n                  <div\r\n                      v-for=\"(message, index) in chatMessages\"\r\n                      :key=\"index\"\r\n                      class=\"d-flex align-items-start mb-2\"\r\n                  >\r\n                    <img\r\n                        class=\"user-avatar-sm rounded-circle me-2\"\r\n                        :src=\"message.avatar\"\r\n                        alt=\"用户头像\"\r\n                        width=\"35\"\r\n                        height=\"35\"\r\n                    />\r\n                    <div>\r\n                      <p class=\"mb-1\"><strong>{{ message.sender }}</strong></p>\r\n                      <p class=\"text-muted mb-0\" v-html=\"message.content\"></p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <!-- 聊天输入框 -->\r\n                <div style=\"text-align: start;\">\r\n                  <transition name=\"fade\">\r\n                    <emoji-picker\r\n                        v-if=\"showEmojiPicker\"\r\n                        @emoji-click=\"addEmoji\"\r\n                        style=\"position: absolute; bottom:200px; right: 100px;\"\r\n                    ></emoji-picker>\r\n                  </transition>\r\n                  <i class=\"bi bi-emoji-smile me-3\" style=\"font-size: 1.5rem; cursor: pointer;\"\r\n                     @click=\"toggleEmojiPicker\"></i>\r\n                </div>\r\n                <div class=\"input-group\">\r\n                  <input\r\n                      type=\"text\"\r\n                      v-model=\"chatInput\"\r\n                      class=\"form-control\"\r\n                      placeholder=\"输入50字以内聊天内容~\"\r\n                      maxlength=\"50\"\r\n                      @keyup.enter=\"sendMessage\"\r\n                  />\r\n                  <button class=\"btn btn-danger\" @click=\"sendMessage\">发送</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport ShopSliderComponent from \"@/components/ShopSliderComponent.vue\";\r\nimport StoreHeaderView from \"@/components/StoreHeaderView.vue\";\r\nimport {ref, onMounted, nextTick} from \"vue\";\r\nimport \"video.js/dist/video-js.css\";\r\nimport {useUserShop} from \"@/composables/useShopUser\";\r\nimport {ElMessage} from \"element-plus\";\r\nimport router from \"@/router\";\r\nimport axios from \"axios\";\r\nimport 'emoji-picker-element';\r\n\r\nconst shopSlider = ref(null);\r\nconst storeHeader = ref(null);\r\nconst {shopForm, initUserSession, initShopInfo, UserForm} = useUserShop();\r\nconst loading = ref(false);\r\nconst isPublishing = ref(false); // 是否正在推流\r\nconst button_one = ref(null);\r\nconst button_two = ref(null);\r\n\r\nconst videoStream = ref(null);\r\nconst pc = ref(null);\r\n\r\nlet socket;\r\nconst initWebSocket = () => {\r\n// 模拟商家端的用户 ID\r\n  const shopId = shopForm.value.shopID;\r\n  socket = new WebSocket(`ws://localhost:8888/channel/live/${shopId}`);\r\n\r\n  socket.onopen = () => {\r\n    console.log(\"WebSocket 连接已建立\");\r\n  };\r\n\r\n  socket.onmessage = (event) => {\r\n    const message = JSON.parse(event.data);\r\n    handleNotification(message);\r\n  };\r\n\r\n  socket.onclose = () => {\r\n    console.log(\"WebSocket 连接已关闭\");\r\n  };\r\n\r\n  socket.onerror = (error) => {\r\n    console.error(\"WebSocket 连接出错:\", error);\r\n  };\r\n};\r\n\r\n// 处理通知\r\nconst handleNotification = async (message) => {\r\n  if (message.message === \"updateUser\")\r\n    await initOnlineUsers();\r\n  else if (message.message === \"updateMessage\")\r\n    await initChatMessages();\r\n};\r\n\r\nconst onlineUsers = ref([]);\r\n\r\nasync function initOnlineUsers() {\r\n  try {\r\n    const response = await axios.post('/api/live/getOnlineUserList', {\r\n      roomId: shopForm.value.shopID,\r\n    }, {\r\n      headers: {\r\n        'Content-Type': 'application/json;charset=UTF-8'\r\n      },\r\n      withCredentials: true,\r\n    });\r\n    onlineUsers.value = response.data;\r\n  } catch (err) {\r\n    ElMessage.error(\"获取在线用户列表失败，请稍后再试\");\r\n  }\r\n}\r\n\r\nconst chatMessages = ref([]);\r\nconst chatWindowRef = ref(null);\r\n\r\nasync function initChatMessages() {\r\n  try {\r\n    const response = await axios.post('/api/live/getLiveMessageList', {\r\n      roomId: shopForm.value.shopID,\r\n    }, {\r\n      headers: {\r\n        'Content-Type': 'application/json;charset=UTF-8'\r\n      },\r\n      withCredentials: true,\r\n    });\r\n    chatMessages.value = response.data;\r\n    await nextTick(() => {\r\n      const chatWindow = chatWindowRef.value;\r\n      if (chatWindow) {\r\n        chatWindow.scrollTop = chatWindow.scrollHeight;\r\n      }\r\n    });\r\n  } catch (error) {\r\n    ElMessage.error(\"获取聊天记录失败，请稍后再试\");\r\n  }\r\n}\r\n\r\nasync function init() {\r\n  await initOnlineUsers();\r\n  await initChatMessages();\r\n}\r\n\r\nasync function updateLiveStatus(status) {\r\n  try {\r\n    const response = await axios.post('/api/live/updateLiveStatus', {\r\n      roomId: shopForm.value.shopID,\r\n      status: status,\r\n    }, {\r\n      headers: {\r\n        'Content-Type': 'application/json;charset=UTF-8'\r\n      },\r\n      withCredentials: true,\r\n    })\r\n    if (response.data.code === 500)\r\n      ElMessage.error(\"更新直播状态失败，请稍后再试\")\r\n  } catch (error) {\r\n    ElMessage.error(\"更新直播状态失败，请稍后再试\")\r\n  }\r\n}\r\n\r\nasync function publish() {\r\n  if (isPublishing.value) return;\r\n\r\n  const httpURL = \"http://localhost:1985/rtc/v1/publish/\";\r\n  const webRTCURL = `webRTC://localhost/live/${shopForm.value.shopID}`;\r\n\r\n  try {\r\n    // 捕获本地视频流\r\n    videoStream.value = await navigator.mediaDevices.getUserMedia({\r\n      video: {frameRate: {ideal: 30}, width: 1280, height: 720},\r\n      audio: true,\r\n    });\r\n\r\n    // 显示本地视频流\r\n    const localVideo = document.querySelector(\"#video\");\r\n    localVideo.srcObject = videoStream.value;\r\n    localVideo.play();\r\n\r\n    // 创建 RTCPeerConnection\r\n    pc.value = new RTCPeerConnection();\r\n\r\n    // 添加轨道到 RTCPeerConnection\r\n    videoStream.value.getTracks().forEach((track) => {\r\n      pc.value.addTrack(track, videoStream.value);\r\n    });\r\n\r\n    // 创建 SDP offer\r\n    const offer = await pc.value.createOffer();\r\n    await pc.value.setLocalDescription(offer);\r\n\r\n    const data = {\r\n      api: httpURL,\r\n      streamurl: webRTCURL,\r\n      sdp: offer.sdp,\r\n    };\r\n\r\n    // 与 SRS 信令交互\r\n    const response = await httpApi(httpURL, data);\r\n\r\n    await pc.value.setRemoteDescription(\r\n        new RTCSessionDescription({type: \"answer\", sdp: response.sdp})\r\n    );\r\n    isPublishing.value = true;\r\n    ElMessage.success(\"开始直播\");\r\n    await updateLiveStatus(\"open\");\r\n  } catch (error) {\r\n    ElMessage.error(\"推流失败，请稍后再试\");\r\n  }\r\n}\r\n\r\nasync function close() {\r\n  if (!isPublishing.value) return;\r\n\r\n  if (pc.value) {\r\n    pc.value.close();\r\n    pc.value = null;\r\n  }\r\n\r\n  videoStream.value.getTracks().forEach((track) => track.stop());\r\n  isPublishing.value = false;\r\n  await updateLiveStatus(\"close\");\r\n  ElMessage.success(\"停止直播\");\r\n}\r\n\r\nfunction httpApi(httpURL, data) {\r\n  return new Promise((resolve, reject) => {\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.open(\"POST\", httpURL, true);\r\n    xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n    xhr.send(JSON.stringify(data));\r\n    xhr.onload = () => {\r\n      if (xhr.status >= 200 && xhr.status < 300) {\r\n        resolve(JSON.parse(xhr.responseText));\r\n      } else {\r\n        reject(JSON.parse(xhr.responseText));\r\n      }\r\n    };\r\n  });\r\n}\r\n\r\nconst chatInput = ref(\"\");\r\nconst showEmojiPicker = ref(false);\r\n\r\nconst toggleEmojiPicker = () => {\r\n  showEmojiPicker.value = !showEmojiPicker.value;\r\n};\r\n\r\nconst addEmoji = (event) => {\r\n  chatInput.value += event.detail.unicode;\r\n};\r\n\r\nasync function sendMessage() {\r\n  if (!chatInput.value) return;\r\n  try {\r\n    const response = await axios.post('/api/live/insertLiveMessage', {\r\n      roomId: shopForm.value.shopID,\r\n      sendId: UserForm.value.id,\r\n      message: chatInput.value,\r\n      sendType: \"shop\"\r\n    }, {\r\n      headers: {\r\n        'Content-Type': 'application/json;charset=UTF-8'\r\n      },\r\n      withCredentials: true,\r\n    });\r\n    if (response.data.code !== 200)\r\n      ElMessage.error(\"发送失败，请稍后再试\")\r\n    else\r\n      chatInput.value = \"\";\r\n  } catch (err) {\r\n    ElMessage.error(\"发送失败，请稍后再试\")\r\n  }\r\n}\r\n\r\nconst closeWebSocket = async () => {\r\n  if (socket) {\r\n    await close();\r\n    socket.close();\r\n    socket = null; // 清空socket变量\r\n  }\r\n};\r\n\r\nonMounted(async () => {\r\n  loading.value = true;\r\n  initUserSession();\r\n  await initShopInfo();\r\n  shopSlider.value.setActiveIndex(\"6-1\");\r\n  storeHeader.value.setTitle(\"直播间\");\r\n  loading.value = false;\r\n  initWebSocket();\r\n  await init();\r\n});\r\n\r\nwindow.addEventListener('beforeunload', closeWebSocket);\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n  closeWebSocket(); // 在路由跳转时关闭WebSocket连接\r\n  next(); // 继续导航\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.live-stream-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 80vh;\r\n}\r\n\r\n/* 头部信息样式 */\r\n.header {\r\n  display: flex;\r\n  align-items: center;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\n.user-avatar {\r\n  width: 50px;\r\n  height: 50px;\r\n}\r\n\r\n/* 主体内容布局 */\r\n.content-container {\r\n  flex: 1;\r\n  display: flex;\r\n  overflow: hidden;\r\n}\r\n\r\n/* 视频区域 */\r\n.video-section {\r\n  flex-grow: 1;\r\n  background: #000;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.video-player {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n/* 在线用户和聊天区域 */\r\n.side-panel {\r\n  width: 300px;\r\n  border-left: 1px solid #ddd;\r\n  overflow-y: auto;\r\n}\r\n\r\n.online-users img.user-avatar-sm {\r\n  width: 30px;\r\n  height: 30px;\r\n}\r\n\r\n.chat-section .chat-messages {\r\n  min-height: 44vh;\r\n  max-height: 44vh;\r\n  overflow-y: auto;\r\n}\r\n\r\n.chat-section .input-group {\r\n  display: flex;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
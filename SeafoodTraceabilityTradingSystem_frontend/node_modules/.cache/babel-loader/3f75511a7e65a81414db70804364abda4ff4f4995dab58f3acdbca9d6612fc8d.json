{"ast":null,"code":"import { ref, onMounted } from 'vue';\nexport default {\n  __name: 'TestView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const videoStream = ref(null);\n    const videoElement = ref(null);\n    const pc = ref(null);\n    const audioTrack = ref(null);\n    const audioSender = ref(null);\n    const button_one = ref(null);\n    const button_two = ref(null);\n    const button_three = ref(null);\n    const button_four = ref(null);\n    const button_five = ref(null);\n    onMounted(() => {\n      button_one.disabled = false;\n      button_two.disabled = true;\n      button_three.disabled = true;\n      button_four.disabled = true;\n      button_five.disabled = true;\n    });\n    async function publish() {\n      if (pc.value !== null && pc.value !== undefined) {\n        console.log(\"已开始推流\");\n        return;\n      }\n      const httpURL = \"http://localhost:1985/rtc/v1/publish/\";\n      const webRTCURL = \"webRTC://localhost/live/10\";\n      const constraints = {\n        audio: {\n          echoCancellation: true,\n          // 回声消除\n          noiseSuppression: true,\n          // 降噪\n          autoGainControl: true // 自动增益\n        },\n        video: {\n          frameRate: {\n            min: 30\n          },\n          // 最小帧率\n          width: {\n            min: 640,\n            ideal: 1080\n          },\n          // 宽度\n          height: {\n            min: 360,\n            ideal: 720\n          },\n          // 高度\n          aspectRadio: 16 / 9 // 宽高比\n        }\n      };\n      videoStream.value = await navigator.mediaDevices.getUserMedia(constraints);\n      videoElement.value = document.querySelector(\"#video\");\n      videoElement.value.srcObject = videoStream.value;\n      videoElement.value.volume = 0;\n      pc.value = new RTCPeerConnection();\n      pc.value.addTransceiver(\"audio\", {\n        direction: \"recvonly\"\n      });\n      pc.value.addTransceiver(\"video\", {\n        direction: \"recvonly\"\n      });\n      videoStream.value.getTracks().forEach(track => {\n        pc.value.addTrack(track);\n      });\n      const offer = await pc.value.createOffer();\n      await pc.value.setLocalDescription(offer);\n      const data = {\n        \"api\": httpURL,\n        \"streamurl\": webRTCURL,\n        \"sdp\": offer.sdp\n      };\n      httpApi(httpURL, data).then(async data => {\n        console.log(\"answer\", data);\n        await pc.value.setRemoteDescription(new RTCSessionDescription({\n          type: 'answer',\n          sdp: data.sdp\n        }));\n        button_one.disabled = true;\n        button_two.disabled = false;\n        button_three.disabled = false;\n        button_five.disabled = false;\n      }).catch(data => {\n        if (data.code === 400) {\n          console.log(\"SDP交换失败\");\n        }\n      });\n    }\n    async function play() {\n      const httpURL = \"http://localhost:1985/rtc/v1/play/\";\n      const webRTCURL = \"webRTC://localhost/live/888\";\n      const localPc = new RTCPeerConnection();\n      const stream = new MediaStream();\n      const videoElement2 = document.querySelector(\"#video2\");\n      localPc.ontrack = event => {\n        stream.addTrack(event.track);\n        console.log(event.track);\n        videoElement2.srcObject = stream;\n      };\n      localPc.addTransceiver(\"audio\", {\n        direction: \"recvonly\"\n      });\n      localPc.addTransceiver(\"video\", {\n        direction: \"recvonly\"\n      });\n      const offer = await localPc.createOffer();\n      await localPc.setLocalDescription(offer);\n      const data = {\n        \"api\": httpURL,\n        \"streamurl\": webRTCURL,\n        \"sdp\": offer.sdp\n      };\n      httpApi(httpURL, data).then(async data => {\n        console.log(\"answer\", data);\n        await localPc.setRemoteDescription(new RTCSessionDescription({\n          type: 'answer',\n          sdp: data.sdp\n        }));\n        button_five.disabled = true;\n      }).catch(data => {\n        if (data.code === 400) {\n          console.log(\"SDP交换失败\");\n        }\n      });\n    }\n    function close() {\n      if (pc.value !== null && pc.value !== undefined) {\n        pc.value.close();\n        pc.value = null;\n        button_one.disabled = false;\n        button_two.disabled = true;\n        button_three.disabled = true;\n        button_four.disabled = true;\n        button_five.disabled = true;\n      }\n    }\n    function stopAudio() {\n      if (pc.value !== null && pc.value !== undefined) {\n        pc.value.getSenders().forEach(sender => {\n          if (sender.track !== null && sender.track.kind === \"audio\") {\n            audioTrack.value = sender.track;\n            audioSender.value = sender;\n            audioSender.value.replaceTrack(null);\n            button_three.disabled = true;\n            button_four.disabled = false;\n          }\n        });\n      }\n    }\n    function startAudio() {\n      if (pc.value !== null && pc.value !== undefined) {\n        if (audioSender.value.track === null) {\n          audioSender.value.replaceTrack(audioTrack.value);\n          button_three.disabled = false;\n          button_four.disabled = true;\n        }\n      }\n    }\n    function httpApi(httpURL, data) {\n      return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.open('POST', httpURL, true);\n        xhr.setRequestHeader('Content-type', 'application/json');\n        xhr.send(JSON.stringify(data));\n        xhr.onload = () => {\n          if (xhr.readyState !== xhr.DONE) reject(xhr);\n          if (xhr.status !== 200 && xhr.status !== 201) reject(xhr);\n          const responseData = JSON.parse(xhr.responseText);\n          if (responseData.code === 0) {\n            resolve(responseData);\n          } else {\n            reject(responseData);\n          }\n        };\n      });\n    }\n    const __returned__ = {\n      videoStream,\n      videoElement,\n      pc,\n      audioTrack,\n      audioSender,\n      button_one,\n      button_two,\n      button_three,\n      button_four,\n      button_five,\n      publish,\n      play,\n      close,\n      stopAudio,\n      startAudio,\n      httpApi,\n      ref,\n      onMounted\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","videoStream","videoElement","pc","audioTrack","audioSender","button_one","button_two","button_three","button_four","button_five","disabled","publish","value","undefined","console","log","httpURL","webRTCURL","constraints","audio","echoCancellation","noiseSuppression","autoGainControl","video","frameRate","min","width","ideal","height","aspectRadio","navigator","mediaDevices","getUserMedia","document","querySelector","srcObject","volume","RTCPeerConnection","addTransceiver","direction","getTracks","forEach","track","addTrack","offer","createOffer","setLocalDescription","data","sdp","httpApi","then","setRemoteDescription","RTCSessionDescription","type","catch","code","play","localPc","stream","MediaStream","videoElement2","ontrack","event","close","stopAudio","getSenders","sender","kind","replaceTrack","startAudio","Promise","resolve","reject","xhr","XMLHttpRequest","open","setRequestHeader","send","JSON","stringify","onload","readyState","DONE","status","responseData","parse","responseText"],"sources":["D:/Cache/Java/shopping/shoppping_c_frontend/src/views/TestView.vue"],"sourcesContent":["<template>\r\n  <div id=\"box\">\r\n    <!-- 设置自动播放，否则不会显示视频流画面 -->\r\n    <video id=\"video\" ref=\"video\" autoplay></video>\r\n    <canvas style=\"display: contents;\"></canvas>\r\n    <div id=\"btn\">\r\n      <button ref=\"button_one\" @click=\"publish\">开始直播</button>\r\n      <button ref=\"button_two\" @click=\"close\">停止直播</button>\r\n      <button ref=\"button_three\" @click=\"stopAudio\">关闭声音</button>\r\n      <button ref=\"button_four\" @click=\"startAudio\">开启声音</button>\r\n      <button ref=\"button_five\" @click=\"play\">播放直播</button>\r\n    </div>\r\n    <video id=\"video2\" ref=\"video2\" autoplay></video>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport {ref, onMounted} from 'vue';\r\n\r\nconst videoStream = ref(null);\r\nconst videoElement = ref(null);\r\nconst pc = ref(null);\r\nconst audioTrack = ref(null);\r\nconst audioSender = ref(null);\r\nconst button_one = ref(null);\r\nconst button_two = ref(null);\r\nconst button_three = ref(null);\r\nconst button_four = ref(null);\r\nconst button_five = ref(null);\r\n\r\nonMounted(() => {\r\n  button_one.disabled = false;\r\n  button_two.disabled = true;\r\n  button_three.disabled = true;\r\n  button_four.disabled = true;\r\n  button_five.disabled = true;\r\n});\r\n\r\nasync function publish() {\r\n  if (pc.value !== null && pc.value !== undefined) {\r\n    console.log(\"已开始推流\");\r\n    return;\r\n  }\r\n  const httpURL = \"http://localhost:1985/rtc/v1/publish/\";\r\n  const webRTCURL = \"webRTC://localhost/live/10\";\r\n  const constraints = {\r\n    audio: {\r\n      echoCancellation: true,    // 回声消除\r\n      noiseSuppression: true,    // 降噪\r\n      autoGainControl: true     // 自动增益\r\n    },\r\n    video: {\r\n      frameRate: {min: 30},                // 最小帧率\r\n      width: {min: 640, ideal: 1080}, // 宽度\r\n      height: {min: 360, ideal: 720},  // 高度\r\n      aspectRadio: 16 / 9                        // 宽高比\r\n    }\r\n  };\r\n\r\n  videoStream.value = await navigator.mediaDevices.getUserMedia(constraints);\r\n  videoElement.value = document.querySelector(\"#video\");\r\n  videoElement.value.srcObject = videoStream.value;\r\n  videoElement.value.volume = 0;\r\n  pc.value = new RTCPeerConnection();\r\n\r\n  pc.value.addTransceiver(\"audio\", {direction: \"recvonly\"});\r\n  pc.value.addTransceiver(\"video\", {direction: \"recvonly\"});\r\n  videoStream.value.getTracks().forEach((track) => {\r\n    pc.value.addTrack(track);\r\n  });\r\n\r\n  const offer = await pc.value.createOffer();\r\n  await pc.value.setLocalDescription(offer);\r\n  const data = {\r\n    \"api\": httpURL,\r\n    \"streamurl\": webRTCURL,\r\n    \"sdp\": offer.sdp\r\n  };\r\n\r\n  httpApi(httpURL, data).then(async (data) => {\r\n    console.log(\"answer\", data);\r\n    await pc.value.setRemoteDescription(new RTCSessionDescription({type: 'answer', sdp: data.sdp}));\r\n    button_one.disabled = true;\r\n    button_two.disabled = false;\r\n    button_three.disabled = false;\r\n    button_five.disabled = false;\r\n  }).catch((data) => {\r\n    if (data.code === 400) {\r\n      console.log(\"SDP交换失败\");\r\n    }\r\n  });\r\n}\r\n\r\nasync function play() {\r\n  const httpURL = \"http://localhost:1985/rtc/v1/play/\";\r\n  const webRTCURL = \"webRTC://localhost/live/888\";\r\n  const localPc = new RTCPeerConnection();\r\n  const stream = new MediaStream();\r\n  const videoElement2 = document.querySelector(\"#video2\");\r\n\r\n  localPc.ontrack = (event) => {\r\n    stream.addTrack(event.track);\r\n    console.log(event.track);\r\n    videoElement2.srcObject = stream;\r\n  };\r\n\r\n  localPc.addTransceiver(\"audio\", {direction: \"recvonly\"});\r\n  localPc.addTransceiver(\"video\", {direction: \"recvonly\"});\r\n\r\n  const offer = await localPc.createOffer();\r\n  await localPc.setLocalDescription(offer);\r\n  const data = {\r\n    \"api\": httpURL,\r\n    \"streamurl\": webRTCURL,\r\n    \"sdp\": offer.sdp\r\n  };\r\n\r\n  httpApi(httpURL, data).then(async (data) => {\r\n    console.log(\"answer\", data);\r\n    await localPc.setRemoteDescription(new RTCSessionDescription({type: 'answer', sdp: data.sdp}));\r\n    button_five.disabled = true;\r\n  }).catch((data) => {\r\n    if (data.code === 400) {\r\n      console.log(\"SDP交换失败\");\r\n    }\r\n  });\r\n}\r\n\r\nfunction close() {\r\n  if (pc.value !== null && pc.value !== undefined) {\r\n    pc.value.close();\r\n    pc.value = null;\r\n    button_one.disabled = false;\r\n    button_two.disabled = true;\r\n    button_three.disabled = true;\r\n    button_four.disabled = true;\r\n    button_five.disabled = true;\r\n  }\r\n}\r\n\r\nfunction stopAudio() {\r\n  if (pc.value !== null && pc.value !== undefined) {\r\n    pc.value.getSenders().forEach((sender) => {\r\n      if (sender.track !== null && sender.track.kind === \"audio\") {\r\n        audioTrack.value = sender.track;\r\n        audioSender.value = sender;\r\n        audioSender.value.replaceTrack(null);\r\n        button_three.disabled = true;\r\n        button_four.disabled = false;\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction startAudio() {\r\n  if (pc.value !== null && pc.value !== undefined) {\r\n    if (audioSender.value.track === null) {\r\n      audioSender.value.replaceTrack(audioTrack.value);\r\n      button_three.disabled = false;\r\n      button_four.disabled = true;\r\n    }\r\n  }\r\n}\r\n\r\nfunction httpApi(httpURL, data) {\r\n  return new Promise((resolve, reject) => {\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.open('POST', httpURL, true);\r\n    xhr.setRequestHeader('Content-type', 'application/json');\r\n    xhr.send(JSON.stringify(data));\r\n    xhr.onload = () => {\r\n      if (xhr.readyState !== xhr.DONE) reject(xhr);\r\n      if (xhr.status !== 200 && xhr.status !== 201) reject(xhr);\r\n      const responseData = JSON.parse(xhr.responseText);\r\n      if (responseData.code === 0) {\r\n        resolve(responseData);\r\n      } else {\r\n        reject(responseData);\r\n      }\r\n    };\r\n  });\r\n}\r\n</script>\r\n\r\n<style>\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n  border: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\n#box {\r\n  width: 100%;\r\n  text-align: center;\r\n}\r\n\r\nvideo {\r\n  background-color: black;\r\n  width: 500px;\r\n  height: 400px;\r\n  object-fit: cover;\r\n}\r\n\r\n#btn {\r\n  width: 80%;\r\n  height: 100px;\r\n  display: flex;\r\n  margin: 10px 10%;\r\n}\r\n\r\nbutton {\r\n  flex: 1;\r\n  height: 100px;\r\n  background-color: aqua;\r\n  border-radius: 20px;\r\n  margin-left: 10px;\r\n}\r\n\r\nbutton:nth-child(1) {\r\n  margin-left: 0;\r\n}\r\n</style>\r\n推流/拉流示例代码"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport axios from \"axios\";\nimport { ElMessage } from \"element-plus\";\nimport router from \"@/router\";\nexport default {\n  __name: 'AccessResultComponent',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    async function handleClick() {\n      try {\n        const urlParams = new URLSearchParams(window.location.search);\n        const id = urlParams.get('id'); // 提取 id\n        const source = urlParams.get('source'); // 提取 source\n        if (id && source) {\n          urlParams.delete('id');\n          urlParams.delete('source');\n          try {\n            const response = await axios.post('/api/callback/ThirdLogin/getUserBaseInfo', {\n              id: id,\n              source: source\n            }, {\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              withCredentials: true\n            });\n            if (response.data.username !== null) {\n              await getUserBaseInfo(response.data.username);\n              await router.push('/');\n            }\n          } catch (err) {\n            ElMessage.error('获取用户信息失败，请稍后再试！');\n          }\n        } else {\n          await router.push('/login');\n        }\n      } catch (error) {\n        console.log(\"获取url参数失败\");\n      }\n    }\n    async function getUserBaseInfo(username) {\n      try {\n        const response = await axios.post('/api/user/getUserBaseInfo', {\n          username: username\n        }, {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          withCredentials: true\n        });\n        if (response.data.id !== null) {\n          sessionStorage.setItem('userBaseInfo', JSON.stringify(response.data)); // 存储用户信息到sessionStorage\n          document.cookie = `userBaseInfo=${encodeURIComponent(JSON.stringify(response.data))}; path=/ max-age=604800`; // 存储用户信息到cookie\n        }\n      } catch (err) {\n        ElMessage.error('获取用户信息失败，请稍后再试！');\n      }\n    }\n    handleClick();\n    const __returned__ = {\n      handleClick,\n      getUserBaseInfo,\n      get axios() {\n        return axios;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get router() {\n        return router;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["axios","ElMessage","router","handleClick","urlParams","URLSearchParams","window","location","search","id","get","source","delete","response","post","headers","withCredentials","data","username","getUserBaseInfo","push","err","error","console","log","sessionStorage","setItem","JSON","stringify","document","cookie","encodeURIComponent"],"sources":["D:/Cache/Java/shopping/shoppping_c_frontend/src/components/AccessResultComponent.vue"],"sourcesContent":["<script setup>\r\nimport axios from \"axios\";\r\nimport {ElMessage} from \"element-plus\";\r\nimport router from \"@/router\";\r\n\r\nasync function handleClick() {\r\n  try {\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const id = urlParams.get('id'); // 提取 id\r\n    const source = urlParams.get('source'); // 提取 source\r\n    if (id && source) {\r\n      urlParams.delete('id');\r\n      urlParams.delete('source');\r\n      try {\r\n        const response = await axios.post('/api/callback/ThirdLogin/getUserBaseInfo', {\r\n          id: id,\r\n          source: source\r\n        }, {\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          withCredentials: true\r\n        });\r\n        if (response.data.username !== null) {\r\n          await getUserBaseInfo(response.data.username);\r\n          await router.push('/');\r\n        }\r\n      } catch (err) {\r\n        ElMessage.error('获取用户信息失败，请稍后再试！');\r\n      }\r\n    } else {\r\n      await router.push('/login');\r\n    }\r\n  } catch (error) {\r\n    console.log(\"获取url参数失败\")\r\n  }\r\n}\r\n\r\nasync function getUserBaseInfo(username) {\r\n  try {\r\n    const response = await axios.post('/api/user/getUserBaseInfo', {\r\n      username: username\r\n    }, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      withCredentials: true\r\n    });\r\n    if (response.data.id !== null) {\r\n      sessionStorage.setItem('userBaseInfo', JSON.stringify(response.data)); // 存储用户信息到sessionStorage\r\n      document.cookie = `userBaseInfo=${encodeURIComponent(JSON.stringify(response.data))}; path=/ max-age=604800`; // 存储用户信息到cookie\r\n    }\r\n  } catch (err) {\r\n    ElMessage.error('获取用户信息失败，请稍后再试！');\r\n  }\r\n}\r\n\r\nhandleClick();\r\n</script>\r\n"],"mappings":";;;;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,SAAS,QAAO,cAAc;AACtC,OAAOC,MAAM,MAAM,UAAU;;;;;;;IAE7B,eAAeC,WAAWA,CAAA,EAAG;MAC3B,IAAI;QACF,MAAMC,SAAS,GAAG,IAAIC,eAAe,CAACC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC;QAC7D,MAAMC,EAAE,GAAGL,SAAS,CAACM,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QAChC,MAAMC,MAAM,GAAGP,SAAS,CAACM,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;QACxC,IAAID,EAAE,IAAIE,MAAM,EAAE;UAChBP,SAAS,CAACQ,MAAM,CAAC,IAAI,CAAC;UACtBR,SAAS,CAACQ,MAAM,CAAC,QAAQ,CAAC;UAC1B,IAAI;YACF,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,IAAI,CAAC,0CAA0C,EAAE;cAC5EL,EAAE,EAAEA,EAAE;cACNE,MAAM,EAAEA;YACV,CAAC,EAAE;cACDI,OAAO,EAAE;gBACP,cAAc,EAAE;cAClB,CAAC;cACDC,eAAe,EAAE;YACnB,CAAC,CAAC;YACF,IAAIH,QAAQ,CAACI,IAAI,CAACC,QAAQ,KAAK,IAAI,EAAE;cACnC,MAAMC,eAAe,CAACN,QAAQ,CAACI,IAAI,CAACC,QAAQ,CAAC;cAC7C,MAAMhB,MAAM,CAACkB,IAAI,CAAC,GAAG,CAAC;YACxB;UACF,CAAC,CAAC,OAAOC,GAAG,EAAE;YACZpB,SAAS,CAACqB,KAAK,CAAC,iBAAiB,CAAC;UACpC;QACF,CAAC,MAAM;UACL,MAAMpB,MAAM,CAACkB,IAAI,CAAC,QAAQ,CAAC;QAC7B;MACF,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;MAC1B;IACF;IAEA,eAAeL,eAAeA,CAACD,QAAQ,EAAE;MACvC,IAAI;QACF,MAAML,QAAQ,GAAG,MAAMb,KAAK,CAACc,IAAI,CAAC,2BAA2B,EAAE;UAC7DI,QAAQ,EAAEA;QACZ,CAAC,EAAE;UACDH,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,eAAe,EAAE;QACnB,CAAC,CAAC;QACF,IAAIH,QAAQ,CAACI,IAAI,CAACR,EAAE,KAAK,IAAI,EAAE;UAC7BgB,cAAc,CAACC,OAAO,CAAC,cAAc,EAAEC,IAAI,CAACC,SAAS,CAACf,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC,CAAC;UACvEY,QAAQ,CAACC,MAAM,GAAG,gBAAgBC,kBAAkB,CAACJ,IAAI,CAACC,SAAS,CAACf,QAAQ,CAACI,IAAI,CAAC,CAAC,yBAAyB,CAAC,CAAC;QAChH;MACF,CAAC,CAAC,OAAOI,GAAG,EAAE;QACZpB,SAAS,CAACqB,KAAK,CAAC,iBAAiB,CAAC;MACpC;IACF;IAEAnB,WAAW,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
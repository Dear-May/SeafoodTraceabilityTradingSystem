{"ast":null,"code":"import { onMounted, ref } from 'vue';\nimport * as echarts from 'echarts';\nimport { useUserShop } from \"@/composables/useShopUser\";\nimport axios from 'axios';\nimport { ElMessage } from \"element-plus\";\nexport default {\n  __name: 'DashboardView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const {\n      UserForm,\n      initUserSession,\n      initShopInfo,\n      shopForm\n    } = useUserShop();\n\n    // 顶部小卡片数据\n    const topStats = ref([]);\n    const loading = ref(false);\n    async function initTopStats() {\n      try {\n        const response = await axios.post('/api/shop/info/getCardInfo', {\n          shopID: shopForm.value.shopID\n        }, {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          withCredentials: true\n        });\n        if (response.data != null) topStats.value = response.data;else ElMessage.error(\"统计卡片数据获取失败\");\n      } catch (err) {\n        ElMessage.error(\"统计卡片数据获取失败\");\n      }\n    }\n    const currentDate = ref(new Date());\n    const signedInData = ref([]);\n    async function initAttendanceInfo() {\n      try {\n        const response = await axios.post('/api/shop/staff/attendance/getShopStaffAttendance', {\n          userId: UserForm.value.id\n        }, {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          withCredentials: true\n        });\n        if (response.data != null) {\n          signedInData.value = response.data;\n        }\n      } catch (error) {\n        ElMessage.error(\"获取员工考勤信息失败\");\n      }\n    }\n    const isFutureDate = date => {\n      const givenDate = new Date(date);\n      return givenDate > currentDate.value;\n    };\n    const getAttendanceStatus = date => {\n      const today = new Date(date).toISOString().split(\"T\")[0];\n      const isSignedIn = signedInData.value.some(item => item.date === today);\n      return isSignedIn ? \"已签到\" : \"未签到\";\n    };\n    const extractDate = dateString => {\n      const date = new Date(dateString);\n      const year = date.getFullYear();\n      const month = String(date.getMonth() + 1).padStart(2, \"0\");\n      const day = String(date.getDate()).padStart(2, \"0\");\n      return `${year}-${month}-${day}`;\n    };\n    async function handleAttendance(date) {\n      if (date === extractDate(currentDate.value) && getAttendanceStatus(date) !== \"已签到\") {\n        try {\n          const response = await axios.post('/api/shop/staff/attendance/signIn', {\n            userId: UserForm.value.id,\n            date: date,\n            shopID: shopForm.value.shopID\n          }, {\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            withCredentials: true\n          });\n          if (response.data.code === 200) {\n            ElMessage.success(\"签到成功\");\n            await initAttendanceInfo();\n          } else if (response.data.code === 400) ElMessage.error(\"签到失败\");else if (response.data.code === 401) ElMessage.error(\"签到时间与服务器时间不符\");\n        } catch (error) {\n          ElMessage.error(\"签到失败\");\n        }\n      }\n    }\n    const courseData = ref([]);\n    async function initCourseData() {\n      try {\n        const response = await axios.post('/api/shop/info/getProductBuyInfo', {\n          shopID: shopForm.value.shopID\n        }, {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          withCredentials: true\n        });\n        if (response.data != null) courseData.value = response.data;else ElMessage.error(\"商品购买数据获取失败\");\n      } catch (err) {\n        ElMessage.error(\"商品购买数据获取失败\");\n      }\n    }\n    const lineChart = ref(null);\n    async function initLineChart() {\n      try {\n        const response = await axios.post('/api/shop/info/getProductTrendInfo', {\n          shopID: shopForm.value.shopID\n        }, {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          withCredentials: true\n        });\n        console.log(response.data);\n        if (response.data != null) {\n          const myLineChart = echarts.init(lineChart.value);\n          myLineChart.setOption({\n            tooltip: response.data.tooltip,\n            legend: response.data.legend,\n            xAxis: response.data.xAxis,\n            yAxis: response.data.yAxis,\n            series: response.data.series\n          });\n        }\n      } catch (err) {\n        ElMessage.error(\"销量趋势数据获取失败\");\n      }\n    }\n    const barChart = ref(null);\n    async function initBarChart() {\n      try {\n        const response = await axios.post('/api/shop/info/getUserInfo', {\n          shopID: shopForm.value.shopID\n        }, {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          withCredentials: true\n        });\n        if (response.data != null) {\n          const myBarChart = echarts.init(barChart.value);\n          myBarChart.setOption({\n            tooltip: response.data.tooltip,\n            legend: response.data.legend,\n            xAxis: response.data.xAxis,\n            yAxis: response.data.yAxis,\n            series: response.data.series\n          });\n        }\n      } catch (err) {\n        ElMessage.error(\"用户情况数据获取失败\");\n      }\n    }\n    const pieChart = ref(null);\n    async function initPieChart() {\n      try {\n        const response = await axios.post('/api/shop/info/getOrderStatusInfo', {\n          shopID: shopForm.value.shopID\n        }, {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          withCredentials: true\n        });\n        if (response.data != null) {\n          const myPieChart = echarts.init(pieChart.value);\n          myPieChart.setOption({\n            tooltip: response.data.tooltip,\n            legend: response.data.legend,\n            series: response.data.series\n          });\n        }\n      } catch (err) {\n        ElMessage.error(\"订单状态占比数据获取失败\");\n      }\n    }\n    async function initData() {\n      if (UserForm.value.role === 'merchant') await initTopStats();else if (UserForm.value.role === 'staff') await initAttendanceInfo();\n      await initCourseData();\n      await initLineChart();\n      await initBarChart();\n      await initPieChart();\n    }\n    onMounted(async () => {\n      loading.value = true;\n      initUserSession();\n      await initShopInfo();\n      await initData();\n      loading.value = false;\n    });\n    const __returned__ = {\n      UserForm,\n      initUserSession,\n      initShopInfo,\n      shopForm,\n      topStats,\n      loading,\n      initTopStats,\n      currentDate,\n      signedInData,\n      initAttendanceInfo,\n      isFutureDate,\n      getAttendanceStatus,\n      extractDate,\n      handleAttendance,\n      courseData,\n      initCourseData,\n      lineChart,\n      initLineChart,\n      barChart,\n      initBarChart,\n      pieChart,\n      initPieChart,\n      initData,\n      onMounted,\n      ref,\n      get echarts() {\n        return echarts;\n      },\n      get useUserShop() {\n        return useUserShop;\n      },\n      get axios() {\n        return axios;\n      },\n      get ElMessage() {\n        return ElMessage;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["onMounted","ref","echarts","useUserShop","axios","ElMessage","UserForm","initUserSession","initShopInfo","shopForm","topStats","loading","initTopStats","response","post","shopID","value","headers","withCredentials","data","error","err","currentDate","Date","signedInData","initAttendanceInfo","userId","id","isFutureDate","date","givenDate","getAttendanceStatus","today","toISOString","split","isSignedIn","some","item","extractDate","dateString","year","getFullYear","month","String","getMonth","padStart","day","getDate","handleAttendance","code","success","courseData","initCourseData","lineChart","initLineChart","console","log","myLineChart","init","setOption","tooltip","legend","xAxis","yAxis","series","barChart","initBarChart","myBarChart","pieChart","initPieChart","myPieChart","initData","role"],"sources":["D:/Cache/Java/shopping/shoppping_c_frontend/src/components/DashboardView.vue"],"sourcesContent":["<template>\r\n  <div v-loading=\"loading\">\r\n    <!-- 顶部用户信息与统计卡片 -->\r\n    <div class=\"d-flex justify-content-between flex-wrap\">\r\n      <!-- 左侧用户信息卡片保持不变 -->\r\n      <div class=\"card mb-3\" style=\"width: 48%; min-width: 350px; max-height: 168px;\">\r\n        <div class=\"card-body d-flex align-items-center\">\r\n          <img class=\"rounded-circle me-3\" :src=\"UserForm.avatar\" alt=\"Admin\" width=\"80\" height=\"80\"/>\r\n          <div>\r\n            <h4 class=\"card-title mb-0\">{{ UserForm.nickname }}</h4>\r\n            <small class=\"text-muted\" v-if=\"UserForm.role==='merchant'\">店长</small>\r\n            <small class=\"text-muted\" v-else-if=\"UserForm.role==='staff'\">店员</small>\r\n            <div class=\"mt-2 text-muted\" style=\"text-align: left;\">\r\n              <div>手机号：{{ UserForm.phone }}</div>\r\n              <div>邮箱：{{ UserForm.email }}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 右侧统计卡片区域 -->\r\n      <div class=\"d-flex flex-wrap\" style=\"width: 48%; min-width:350px;\" v-if=\"UserForm.role==='merchant'\">\r\n        <div\r\n            v-for=\"item in topStats\"\r\n            :key=\"item.title\"\r\n            class=\"stat-card me-3 mb-3\"\r\n        >\r\n          <div class=\"stat-amount\">{{ item.amount }}</div>\r\n          <div class=\"stat-desc\">{{ item.title }}</div>\r\n        </div>\r\n      </div>\r\n      <div v-else class=\"d-flex flex-wrap\" style=\"width: 48%; min-width:350px;\">\r\n        <el-calendar\r\n            :model-value=\"currentDate\"\r\n        >\r\n          <!-- 自定义头部 -->\r\n          <template #header=\"{ date }\">\r\n            <div class=\"calendar-header\">\r\n              <h2>员工考勤表</h2>\r\n              <span>当前月份：{{ date }}</span>\r\n            </div>\r\n          </template>\r\n\r\n          <!-- 自定义日期单元格 -->\r\n          <template #date-cell=\"{ data }\">\r\n            <div v-if=\"!isFutureDate(data.day)\" class=\"date-cell\">\r\n              <!-- 显示日期 -->\r\n              {{ data.day.split('-').slice(1).join('-') }}\r\n\r\n              <!-- 考勤状态 -->\r\n              <div style=\"width: 100%;\" @click=\"handleAttendance(data.day)\">\r\n                <el-tag\r\n                    :type=\"getAttendanceStatus(data.day) === '已签到' ? 'success' : 'info'\"\r\n                >\r\n                  {{ getAttendanceStatus(data.day) }}\r\n                </el-tag>\r\n              </div>\r\n            </div>\r\n          </template>\r\n\r\n        </el-calendar>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 下方数据表格与图表保持不变 -->\r\n    <div class=\"row mt-4\">\r\n      <div class=\"col-12 col-lg-6 mb-3\">\r\n        <div class=\"card\">\r\n          <div class=\"card-header\">\r\n            商品购买情况\r\n          </div>\r\n          <div class=\"card-body p-0\">\r\n            <table class=\"table mb-0 table-striped\">\r\n              <thead>\r\n              <tr>\r\n                <th>商品</th>\r\n                <th>今日购买</th>\r\n                <th>本月购买</th>\r\n                <th>总购买</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr v-for=\"course in courseData\" :key=\"course.name\">\r\n                <td>{{ course.name }}</td>\r\n                <td>{{ course.today }}</td>\r\n                <td>{{ course.month }}</td>\r\n                <td>{{ course.total }}</td>\r\n              </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- 折线图示例 -->\r\n      <div class=\"col-12 col-lg-6 mb-3\">\r\n        <div class=\"card\">\r\n          <div class=\"card-header\">\r\n            销量趋势\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <div ref=\"lineChart\" style=\"width:100%;height:300px;\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 底部两个图表 -->\r\n    <div class=\"row mt-3\">\r\n      <!-- 柱状图 -->\r\n      <div class=\"col-12 col-lg-6 mb-3\">\r\n        <div class=\"card\">\r\n          <div class=\"card-header\">\r\n            用户情况\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <div ref=\"barChart\" style=\"width:100%;height:300px;\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- 饼图 -->\r\n      <div class=\"col-12 col-lg-6 mb-3\">\r\n        <div class=\"card\">\r\n          <div class=\"card-header\">\r\n            订单状态占比\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <div ref=\"pieChart\" style=\"width:100%;height:300px;\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport {onMounted, ref} from 'vue'\r\nimport * as echarts from 'echarts'\r\nimport {useUserShop} from \"@/composables/useShopUser\";\r\nimport axios from 'axios'\r\nimport {ElMessage} from \"element-plus\";\r\n\r\nconst {UserForm, initUserSession, initShopInfo, shopForm} = useUserShop();\r\n\r\n// 顶部小卡片数据\r\nconst topStats = ref([]);\r\nconst loading = ref(false);\r\n\r\nasync function initTopStats() {\r\n  try {\r\n    const response = await axios.post('/api/shop/info/getCardInfo', {\r\n      shopID: shopForm.value.shopID,\r\n    }, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      withCredentials: true,\r\n    });\r\n    if (response.data != null)\r\n      topStats.value = response.data;\r\n    else\r\n      ElMessage.error(\"统计卡片数据获取失败\")\r\n  } catch (err) {\r\n    ElMessage.error(\"统计卡片数据获取失败\")\r\n  }\r\n}\r\n\r\nconst currentDate = ref(new Date())\r\nconst signedInData = ref([]);\r\n\r\nasync function initAttendanceInfo() {\r\n  try {\r\n    const response = await axios.post('/api/shop/staff/attendance/getShopStaffAttendance', {\r\n      userId: UserForm.value.id\r\n    }, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      withCredentials: true,\r\n    });\r\n    if (response.data != null) {\r\n      signedInData.value = response.data;\r\n    }\r\n  } catch (error) {\r\n    ElMessage.error(\"获取员工考勤信息失败\")\r\n  }\r\n}\r\n\r\nconst isFutureDate = (date) => {\r\n  const givenDate = new Date(date);\r\n  return givenDate > currentDate.value;\r\n};\r\n\r\nconst getAttendanceStatus = (date) => {\r\n  const today = new Date(date).toISOString().split(\"T\")[0];\r\n  const isSignedIn = signedInData.value.some((item) => item.date === today);\r\n  return isSignedIn ? \"已签到\" : \"未签到\";\r\n};\r\n\r\nconst extractDate = (dateString) => {\r\n  const date = new Date(dateString);\r\n  const year = date.getFullYear();\r\n  const month = String(date.getMonth() + 1).padStart(2, \"0\");\r\n  const day = String(date.getDate()).padStart(2, \"0\");\r\n  return `${year}-${month}-${day}`;\r\n};\r\n\r\nasync function handleAttendance(date) {\r\n  if (date === extractDate(currentDate.value) && getAttendanceStatus(date) !== \"已签到\") {\r\n    try {\r\n      const response = await axios.post('/api/shop/staff/attendance/signIn', {\r\n        userId: UserForm.value.id,\r\n        date: date,\r\n        shopID: shopForm.value.shopID,\r\n      }, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        withCredentials: true,\r\n      });\r\n      if (response.data.code === 200) {\r\n        ElMessage.success(\"签到成功\")\r\n        await initAttendanceInfo();\r\n      } else if (response.data.code === 400)\r\n        ElMessage.error(\"签到失败\")\r\n      else if (response.data.code === 401)\r\n        ElMessage.error(\"签到时间与服务器时间不符\")\r\n    } catch (error) {\r\n      ElMessage.error(\"签到失败\")\r\n    }\r\n  }\r\n}\r\n\r\nconst courseData = ref([]);\r\n\r\nasync function initCourseData() {\r\n  try {\r\n    const response = await axios.post('/api/shop/info/getProductBuyInfo', {\r\n      shopID: shopForm.value.shopID,\r\n    }, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      withCredentials: true,\r\n    });\r\n    if (response.data != null)\r\n      courseData.value = response.data;\r\n    else\r\n      ElMessage.error(\"商品购买数据获取失败\")\r\n  } catch (err) {\r\n    ElMessage.error(\"商品购买数据获取失败\")\r\n  }\r\n}\r\n\r\nconst lineChart = ref(null);\r\n\r\nasync function initLineChart() {\r\n  try {\r\n    const response = await axios.post('/api/shop/info/getProductTrendInfo', {\r\n      shopID: shopForm.value.shopID,\r\n    }, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      withCredentials: true,\r\n    });\r\n    console.log(response.data)\r\n    if (response.data != null) {\r\n      const myLineChart = echarts.init(lineChart.value);\r\n      myLineChart.setOption({\r\n        tooltip: response.data.tooltip,\r\n        legend: response.data.legend,\r\n        xAxis: response.data.xAxis,\r\n        yAxis: response.data.yAxis,\r\n        series: response.data.series\r\n      });\r\n    }\r\n  } catch (err) {\r\n    ElMessage.error(\"销量趋势数据获取失败\")\r\n  }\r\n}\r\n\r\nconst barChart = ref(null)\r\n\r\nasync function initBarChart() {\r\n  try {\r\n    const response = await axios.post('/api/shop/info/getUserInfo', {\r\n      shopID: shopForm.value.shopID,\r\n    }, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      withCredentials: true,\r\n    });\r\n    if (response.data != null) {\r\n      const myBarChart = echarts.init(barChart.value)\r\n      myBarChart.setOption({\r\n        tooltip: response.data.tooltip,\r\n        legend: response.data.legend,\r\n        xAxis: response.data.xAxis,\r\n        yAxis: response.data.yAxis,\r\n        series: response.data.series\r\n      });\r\n    }\r\n  } catch (err) {\r\n    ElMessage.error(\"用户情况数据获取失败\")\r\n  }\r\n}\r\n\r\nconst pieChart = ref(null)\r\n\r\nasync function initPieChart() {\r\n  try {\r\n    const response = await axios.post('/api/shop/info/getOrderStatusInfo', {\r\n      shopID: shopForm.value.shopID,\r\n    }, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      withCredentials: true,\r\n    });\r\n    if (response.data != null) {\r\n      const myPieChart = echarts.init(pieChart.value)\r\n      myPieChart.setOption({\r\n        tooltip: response.data.tooltip,\r\n        legend: response.data.legend,\r\n        series: response.data.series\r\n      });\r\n    }\r\n  } catch (err) {\r\n    ElMessage.error(\"订单状态占比数据获取失败\")\r\n  }\r\n}\r\n\r\nasync function initData() {\r\n  if (UserForm.value.role === 'merchant')\r\n    await initTopStats();\r\n  else if (UserForm.value.role === 'staff')\r\n    await initAttendanceInfo();\r\n  await initCourseData();\r\n  await initLineChart();\r\n  await initBarChart();\r\n  await initPieChart();\r\n}\r\n\r\nonMounted(async () => {\r\n  loading.value = true;\r\n  initUserSession();\r\n  await initShopInfo();\r\n  await initData();\r\n  loading.value = false;\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.card {\r\n  border-radius: 6px;\r\n}\r\n\r\n.card-header {\r\n  font-weight: 600;\r\n}\r\n\r\n/* 新增：统计卡片样式 */\r\n.stat-card {\r\n  background: #00c1de;\r\n  color: #fff;\r\n  padding: 10px 20px;\r\n  border-radius: 4px;\r\n  width: 150px;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\r\n  text-align: center;\r\n}\r\n\r\n.stat-card .stat-amount {\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.stat-card .stat-desc {\r\n  font-size: 14px;\r\n}\r\n\r\n.date-cell {\r\n  position: relative;\r\n  text-align: center;\r\n  font-size: 14px;\r\n}\r\n\r\n.today-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(0, 0, 0, 0.5); /* 半透明黑色遮罩 */\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: white;\r\n  z-index: 1;\r\n}\r\n\r\n.el-tag {\r\n  margin-top: 5px;\r\n  font-size: 12px;\r\n}\r\n</style>\r\n"],"mappings":"AAuIA,SAAQA,SAAS,EAAEC,GAAG,QAAO,KAAK;AAClC,OAAO,KAAKC,OAAO,MAAM,SAAS;AAClC,SAAQC,WAAW,QAAO,2BAA2B;AACrD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAQC,SAAS,QAAO,cAAc;;;;;;;IAEtC,MAAM;MAACC,QAAQ;MAAEC,eAAe;MAAEC,YAAY;MAAEC;IAAQ,CAAC,GAAGN,WAAW,CAAC,CAAC;;IAEzE;IACA,MAAMO,QAAQ,GAAGT,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMU,OAAO,GAAGV,GAAG,CAAC,KAAK,CAAC;IAE1B,eAAeW,YAAYA,CAAA,EAAG;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAI,CAAC,4BAA4B,EAAE;UAC9DC,MAAM,EAAEN,QAAQ,CAACO,KAAK,CAACD;QACzB,CAAC,EAAE;UACDE,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,eAAe,EAAE;QACnB,CAAC,CAAC;QACF,IAAIL,QAAQ,CAACM,IAAI,IAAI,IAAI,EACvBT,QAAQ,CAACM,KAAK,GAAGH,QAAQ,CAACM,IAAI,CAAC,KAE/Bd,SAAS,CAACe,KAAK,CAAC,YAAY,CAAC;MACjC,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZhB,SAAS,CAACe,KAAK,CAAC,YAAY,CAAC;MAC/B;IACF;IAEA,MAAME,WAAW,GAAGrB,GAAG,CAAC,IAAIsB,IAAI,CAAC,CAAC,CAAC;IACnC,MAAMC,YAAY,GAAGvB,GAAG,CAAC,EAAE,CAAC;IAE5B,eAAewB,kBAAkBA,CAAA,EAAG;MAClC,IAAI;QACF,MAAMZ,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAI,CAAC,mDAAmD,EAAE;UACrFY,MAAM,EAAEpB,QAAQ,CAACU,KAAK,CAACW;QACzB,CAAC,EAAE;UACDV,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,eAAe,EAAE;QACnB,CAAC,CAAC;QACF,IAAIL,QAAQ,CAACM,IAAI,IAAI,IAAI,EAAE;UACzBK,YAAY,CAACR,KAAK,GAAGH,QAAQ,CAACM,IAAI;QACpC;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdf,SAAS,CAACe,KAAK,CAAC,YAAY,CAAC;MAC/B;IACF;IAEA,MAAMQ,YAAY,GAAIC,IAAI,IAAK;MAC7B,MAAMC,SAAS,GAAG,IAAIP,IAAI,CAACM,IAAI,CAAC;MAChC,OAAOC,SAAS,GAAGR,WAAW,CAACN,KAAK;IACtC,CAAC;IAED,MAAMe,mBAAmB,GAAIF,IAAI,IAAK;MACpC,MAAMG,KAAK,GAAG,IAAIT,IAAI,CAACM,IAAI,CAAC,CAACI,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACxD,MAAMC,UAAU,GAAGX,YAAY,CAACR,KAAK,CAACoB,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACR,IAAI,KAAKG,KAAK,CAAC;MACzE,OAAOG,UAAU,GAAG,KAAK,GAAG,KAAK;IACnC,CAAC;IAED,MAAMG,WAAW,GAAIC,UAAU,IAAK;MAClC,MAAMV,IAAI,GAAG,IAAIN,IAAI,CAACgB,UAAU,CAAC;MACjC,MAAMC,IAAI,GAAGX,IAAI,CAACY,WAAW,CAAC,CAAC;MAC/B,MAAMC,KAAK,GAAGC,MAAM,CAACd,IAAI,CAACe,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;MAC1D,MAAMC,GAAG,GAAGH,MAAM,CAACd,IAAI,CAACkB,OAAO,CAAC,CAAC,CAAC,CAACF,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;MACnD,OAAO,GAAGL,IAAI,IAAIE,KAAK,IAAII,GAAG,EAAE;IAClC,CAAC;IAED,eAAeE,gBAAgBA,CAACnB,IAAI,EAAE;MACpC,IAAIA,IAAI,KAAKS,WAAW,CAAChB,WAAW,CAACN,KAAK,CAAC,IAAIe,mBAAmB,CAACF,IAAI,CAAC,KAAK,KAAK,EAAE;QAClF,IAAI;UACF,MAAMhB,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAI,CAAC,mCAAmC,EAAE;YACrEY,MAAM,EAAEpB,QAAQ,CAACU,KAAK,CAACW,EAAE;YACzBE,IAAI,EAAEA,IAAI;YACVd,MAAM,EAAEN,QAAQ,CAACO,KAAK,CAACD;UACzB,CAAC,EAAE;YACDE,OAAO,EAAE;cACP,cAAc,EAAE;YAClB,CAAC;YACDC,eAAe,EAAE;UACnB,CAAC,CAAC;UACF,IAAIL,QAAQ,CAACM,IAAI,CAAC8B,IAAI,KAAK,GAAG,EAAE;YAC9B5C,SAAS,CAAC6C,OAAO,CAAC,MAAM,CAAC;YACzB,MAAMzB,kBAAkB,CAAC,CAAC;UAC5B,CAAC,MAAM,IAAIZ,QAAQ,CAACM,IAAI,CAAC8B,IAAI,KAAK,GAAG,EACnC5C,SAAS,CAACe,KAAK,CAAC,MAAM,CAAC,MACpB,IAAIP,QAAQ,CAACM,IAAI,CAAC8B,IAAI,KAAK,GAAG,EACjC5C,SAAS,CAACe,KAAK,CAAC,cAAc,CAAC;QACnC,CAAC,CAAC,OAAOA,KAAK,EAAE;UACdf,SAAS,CAACe,KAAK,CAAC,MAAM,CAAC;QACzB;MACF;IACF;IAEA,MAAM+B,UAAU,GAAGlD,GAAG,CAAC,EAAE,CAAC;IAE1B,eAAemD,cAAcA,CAAA,EAAG;MAC9B,IAAI;QACF,MAAMvC,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAI,CAAC,kCAAkC,EAAE;UACpEC,MAAM,EAAEN,QAAQ,CAACO,KAAK,CAACD;QACzB,CAAC,EAAE;UACDE,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,eAAe,EAAE;QACnB,CAAC,CAAC;QACF,IAAIL,QAAQ,CAACM,IAAI,IAAI,IAAI,EACvBgC,UAAU,CAACnC,KAAK,GAAGH,QAAQ,CAACM,IAAI,CAAC,KAEjCd,SAAS,CAACe,KAAK,CAAC,YAAY,CAAC;MACjC,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZhB,SAAS,CAACe,KAAK,CAAC,YAAY,CAAC;MAC/B;IACF;IAEA,MAAMiC,SAAS,GAAGpD,GAAG,CAAC,IAAI,CAAC;IAE3B,eAAeqD,aAAaA,CAAA,EAAG;MAC7B,IAAI;QACF,MAAMzC,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAI,CAAC,oCAAoC,EAAE;UACtEC,MAAM,EAAEN,QAAQ,CAACO,KAAK,CAACD;QACzB,CAAC,EAAE;UACDE,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,eAAe,EAAE;QACnB,CAAC,CAAC;QACFqC,OAAO,CAACC,GAAG,CAAC3C,QAAQ,CAACM,IAAI,CAAC;QAC1B,IAAIN,QAAQ,CAACM,IAAI,IAAI,IAAI,EAAE;UACzB,MAAMsC,WAAW,GAAGvD,OAAO,CAACwD,IAAI,CAACL,SAAS,CAACrC,KAAK,CAAC;UACjDyC,WAAW,CAACE,SAAS,CAAC;YACpBC,OAAO,EAAE/C,QAAQ,CAACM,IAAI,CAACyC,OAAO;YAC9BC,MAAM,EAAEhD,QAAQ,CAACM,IAAI,CAAC0C,MAAM;YAC5BC,KAAK,EAAEjD,QAAQ,CAACM,IAAI,CAAC2C,KAAK;YAC1BC,KAAK,EAAElD,QAAQ,CAACM,IAAI,CAAC4C,KAAK;YAC1BC,MAAM,EAAEnD,QAAQ,CAACM,IAAI,CAAC6C;UACxB,CAAC,CAAC;QACJ;MACF,CAAC,CAAC,OAAO3C,GAAG,EAAE;QACZhB,SAAS,CAACe,KAAK,CAAC,YAAY,CAAC;MAC/B;IACF;IAEA,MAAM6C,QAAQ,GAAGhE,GAAG,CAAC,IAAI,CAAC;IAE1B,eAAeiE,YAAYA,CAAA,EAAG;MAC5B,IAAI;QACF,MAAMrD,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAI,CAAC,4BAA4B,EAAE;UAC9DC,MAAM,EAAEN,QAAQ,CAACO,KAAK,CAACD;QACzB,CAAC,EAAE;UACDE,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,eAAe,EAAE;QACnB,CAAC,CAAC;QACF,IAAIL,QAAQ,CAACM,IAAI,IAAI,IAAI,EAAE;UACzB,MAAMgD,UAAU,GAAGjE,OAAO,CAACwD,IAAI,CAACO,QAAQ,CAACjD,KAAK,CAAC;UAC/CmD,UAAU,CAACR,SAAS,CAAC;YACnBC,OAAO,EAAE/C,QAAQ,CAACM,IAAI,CAACyC,OAAO;YAC9BC,MAAM,EAAEhD,QAAQ,CAACM,IAAI,CAAC0C,MAAM;YAC5BC,KAAK,EAAEjD,QAAQ,CAACM,IAAI,CAAC2C,KAAK;YAC1BC,KAAK,EAAElD,QAAQ,CAACM,IAAI,CAAC4C,KAAK;YAC1BC,MAAM,EAAEnD,QAAQ,CAACM,IAAI,CAAC6C;UACxB,CAAC,CAAC;QACJ;MACF,CAAC,CAAC,OAAO3C,GAAG,EAAE;QACZhB,SAAS,CAACe,KAAK,CAAC,YAAY,CAAC;MAC/B;IACF;IAEA,MAAMgD,QAAQ,GAAGnE,GAAG,CAAC,IAAI,CAAC;IAE1B,eAAeoE,YAAYA,CAAA,EAAG;MAC5B,IAAI;QACF,MAAMxD,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAI,CAAC,mCAAmC,EAAE;UACrEC,MAAM,EAAEN,QAAQ,CAACO,KAAK,CAACD;QACzB,CAAC,EAAE;UACDE,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,eAAe,EAAE;QACnB,CAAC,CAAC;QACF,IAAIL,QAAQ,CAACM,IAAI,IAAI,IAAI,EAAE;UACzB,MAAMmD,UAAU,GAAGpE,OAAO,CAACwD,IAAI,CAACU,QAAQ,CAACpD,KAAK,CAAC;UAC/CsD,UAAU,CAACX,SAAS,CAAC;YACnBC,OAAO,EAAE/C,QAAQ,CAACM,IAAI,CAACyC,OAAO;YAC9BC,MAAM,EAAEhD,QAAQ,CAACM,IAAI,CAAC0C,MAAM;YAC5BG,MAAM,EAAEnD,QAAQ,CAACM,IAAI,CAAC6C;UACxB,CAAC,CAAC;QACJ;MACF,CAAC,CAAC,OAAO3C,GAAG,EAAE;QACZhB,SAAS,CAACe,KAAK,CAAC,cAAc,CAAC;MACjC;IACF;IAEA,eAAemD,QAAQA,CAAA,EAAG;MACxB,IAAIjE,QAAQ,CAACU,KAAK,CAACwD,IAAI,KAAK,UAAU,EACpC,MAAM5D,YAAY,CAAC,CAAC,CAAC,KAClB,IAAIN,QAAQ,CAACU,KAAK,CAACwD,IAAI,KAAK,OAAO,EACtC,MAAM/C,kBAAkB,CAAC,CAAC;MAC5B,MAAM2B,cAAc,CAAC,CAAC;MACtB,MAAME,aAAa,CAAC,CAAC;MACrB,MAAMY,YAAY,CAAC,CAAC;MACpB,MAAMG,YAAY,CAAC,CAAC;IACtB;IAEArE,SAAS,CAAC,YAAY;MACpBW,OAAO,CAACK,KAAK,GAAG,IAAI;MACpBT,eAAe,CAAC,CAAC;MACjB,MAAMC,YAAY,CAAC,CAAC;MACpB,MAAM+D,QAAQ,CAAC,CAAC;MAChB5D,OAAO,CAACK,KAAK,GAAG,KAAK;IACvB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
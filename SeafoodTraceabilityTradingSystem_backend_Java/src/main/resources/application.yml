# THYMELEAF (ThymeleafAutoConfiguration)
# 开启模板缓存（默认值： true ）
spring:
  thymeleaf:
    cache: true
    check-template: true # 检查模板是否存在，然后再呈现
    check-template-location: true # 检查模板位置是否正确（默认值 :true ）
    content-type: text/html # Content-Type 的值（默认值： text/html ）
    enabled: true  # 开启 MVC Thymeleaf 视图解析（默认值： true ）
    encoding: UTF-8  # 模板编码
    excluded-view-names: "" # 要被排除在解析之外的视图名称列表，⽤逗号分隔
    mode: HTML  # 要运⽤于模板之上的模板模式。另见 StandardTemplate-ModeHandlers (默认值： HTML5)
    prefix: classpath:/templates/  # 在构建 URL 时添加到视图名称前的前缀（默认值： classpath:/templates/）
    suffix: .html  # 在构建 URL 时添加到视图名称后的后缀（默认值： .html）
  # Redis 配置
  redis:
    key:
      prefix:
        authCode:
          portal:authCode:
        orderId:
          portal:orderId:
    expire:
      authCode: 60 # 验证码过期时间（秒）
    host: 127.0.0.1 # Redis服务器地址
    database: 1 # Redis数据库索引（默认为0）
    port: 6379  # Redis服务器连接端口
    password: "****"  # Redis服务器连接密码（默认为空）
    # 连接池最大连接数（使用负值表示没有限制）
    jedis:
      pool:
        max-active: 8  # 连接池最大连接数（使用负值表示没有限制）
        max-wait: -1ms  # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-idle: 8  # 连接池中的最大空闲连接
        min-idle: 0  # 连接池中的最小空闲连接
    timeout: 3000ms  # 连接超时时间（毫秒）
  datasource:
    url: jdbc:mysql://localhost:3306/oceanwave?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC
    username: "****"
    password: "****"
    driver-class-name: com.mysql.cj.jdbc.Driver
  elasticsearch:
    uris: http://localhost:9200
    username: "****"
    password: "****"
  data:
    elasticsearch:
      repositories:
        enabled: true # 是否启用 Elasticsearch 仓库（默认值： true ）
      client:
        reactive:
          endpoints: localhost:9200 # Elasticsearch 集群节点地址
  # 邮箱配置
  mail:
    username: "****"  # 邮箱账号
    password: "****"  # 授权码
    host: smtp.qq.com  # 邮箱服务器
    default-encoding: utf-8  # 编码
    port: 465  # 端口
    protocol: smtps  # 协议
    #开启加密验证
    properties:
      mail:
        smtp:
          ssl:
            enable: ture
  servlet:
    multipart:
      max-file-size: 5MB
      max-request-size: 5MB
  jpa:
    open-in-view: false

# 指定 Mybatis 的 Mapper 文件
mybatis:
  mapper-locations: classpath:mappers/*xml
  # 指定 Mybatis 的实体类包
  type-aliases-package: com.shopping_c_backend.shoppping_c_backend.Entity
  type-handlers-package: com.shopping_c_backend.shoppping_c_backend.Handler

# 应用服务 WEB 访问端口
server:
  port: 8888
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB

# 阿里云AccessKey
aliyun:
  accessKey: "****"
  accessKeySecret: "****"
  oss:
    endpoint: oss-cn-beijing.aliyuncs.com
    bucketName: oceanwave

# Gitee登录配置
gitee:
  appID: "****"
  appKEY: "****"
  redirectURI: http://127.0.0.1:8888/callback/gitee
  authorizeURL: https://gitee.com/oauth/authorize
  accessToken: https://gitee.com/oauth/token
  userInfo: https://gitee.com/api/v5/user

# GitHub登录配置
github:
  appID: "****"
  appKEY: "****"
  redirectURI: http://127.0.0.1:8888/callback/github
  authorizeURL: https://github.com/login/oauth/authorize
  accessToken: https://github.com/login/oauth/access_token
  userInfo: https://api.github.com/user

# Google登录配置
google:
  appID: "****"
  appKEY: "****"
  redirectURI: http://127.0.0.1:8888/callback/google
  authorizeURL: https://accounts.google.com/o/oauth2/v2/auth
  accessToken: https://oauth2.googleapis.com/token
  userInfo: https://www.googleapis.com/oauth2/v1/userinfo

# 微信登录配置
wechat:
  appID: "****"
  appKEY: "****"
  accessToken: https://api.weixin.qq.com/cgi-bin/token
  userInfo: https://api.weixin.qq.com/sns/userinfo

# 天气配置
weather:
  appID: "****"
  appKEY: "****"

# 百度OCR配置
baidu:
  AppID: "****"
  APIKey: "****"

image:
  search:
    api:
      base-url: http://127.0.0.1:8889/api/

